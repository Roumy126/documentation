# SOME DESCRIPTIVE TITLE.
# Copyright (C) Odoo S.A.
# This file is distributed under the same license as the Odoo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Odoo 14.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-09 07:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../content/applications/inventory_and_mrp.rst:5
msgid "Inventory & MRP"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory.rst:8
msgid "Inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory.rst:10
msgid "**Odoo Inventory** is both an inventory application and a warehouse management system, with an advanced barcode scanner app. Learn how to manage lead times, automate replenishments, and configure advanced routes like drop-shipping, cross-docks, etc."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory.rst:15
msgid "`Odoo Tutorials: Inventory <https://www.odoo.com/slides/inventory-24>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory.rst:16
#: ../../content/applications/inventory_and_mrp/manufacturing.rst:16
msgid "`Odoo Tutorials: Barcode Scanner <https://www.odoo.com/slides/barcode-30>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode.rst:5
msgid "Barcodes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations.rst:5
msgid "Daily Operations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/adjustments.rst:3
msgid "Process to an Inventory Adjustment with Barcodes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/adjustments.rst:5
msgid "To process an inventory adjustment by using barcodes, you first need to open the *Barcode* app. Then, from the application, click on *Inventory Adjustments*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/adjustments.rst:13
msgid "If you want to fully work with barcodes, you can download the sheet *Commands for Inventory*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/adjustments.rst:16
msgid "Once you have clicked on *Inventory Adjustments*, Odoo will automatically create one. Note that, if you work with multi-location, you first need to specify in which location the inventory adjustment takes place."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/adjustments.rst:24
msgid "If you don’t work with multi-location, you will be able to scan the different products you want to include in the inventory adjustment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/adjustments.rst:31
msgid "If you have 5 identical articles, scan it 5 times or use the keyboard to set the quantity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/adjustments.rst:34
msgid "Besides using the barcode scanner, you can also manually add a product if necessary. To do so, click on *Add Product* and fill the information in manually."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/adjustments.rst:44
msgid "When you have scanned all the items of the location, validate the inventory manually or scan the *Validate* barcode."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:3
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:6
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:6
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:6
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:6
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:6
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:6
msgid "Overview"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:5
msgid "There are different situations in which barcode nomenclatures can be useful. A well-known use case is the one of a point of sale which sells products in bulk, in which the customers will scale their products themselves and get the printed barcode to stick on the product. This barcode will contain the weight of the product and help compute the price accordingly."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:13
msgid "Create a Barcode Nomenclature"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:15
msgid "Odoo supports Barcode Nomenclatures, which determine the mapping and interpretation of the encoded information. You can configure your barcode nomenclature being in :ref:`developer mode <developer-mode>`. To do so, go to :menuselection:`Inventory --> Configuration --> Barcode Nomenclature`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:20
msgid "You can create a barcode nomenclature from there, and then add a line to create your first rule."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:26
msgid "The first step is to specify the **rule name**, for example Weight Barcode with 3 Decimals. You then have to specify the type for barcode nomenclature, in our case it will be Weighted Product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:33
msgid "The Barcode Pattern is a regular expression that defines the structure of the barcode. In this example 21 defines the products on which the rule will be applied, those are the numbers by which the product barcode should start. The 5 “dots” are the following numbers of the product barcode and are there simply to identify the product in question. The “N” define a number and the “D” define the decimals."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:40
msgid "The encoding allows to specify the barcode encoding on which the rule should be applied."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:44
msgid "You can define different rules and order their priority thanks to the sequence. The first rule which matches the scanned barcode will be applied."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:49
msgid "Configure your Product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:51
msgid "The barcode of the product should start by “21”;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:52
msgid "The 5 “dots” are the other numbers of your product barcode, allowing to identify the product;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:53
msgid "The barcode should contain 0’s where you did defined D’s or N’s. In our case we need to set 5 zeros because we configured “21…..{NNDDD}”;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:54
msgid "In EAN-13, the last number is a check number, use an EAN13 generator to know which digit it should be in your case."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:59
msgid "In case you weight 1,5 Kg of pasta, the balance will print you the following barcode 2112345015002. If you scan this barcode in your POS or when receiving products in your barcode application, Odoo will automatically create a new line for the Pasta product for a quantity of 1.5 Kg. For the point of sale, a price depending on the quantity will also be computed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:70
msgid "Rule Types"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:72
msgid "**Priced Product**: allows you to identify the product and specify its price, used in POS."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:73
msgid "**Discounted Product**: allows you to create one barcode per applied discount. You can then scan your product in the POS and then scan the discount barcode, discount will be applied on the normal price of the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:74
msgid "**Weighted Product**: allows you to identify the product and specify its weight, used in both POS (in which the price is computed based on the weight) and in inventory."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:75
msgid "**Client**: allows you to identify the customer, for example used with loyalty program."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:76
msgid "**Cashier**: allows you to identify the cashier when entering the POS."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:77
msgid "**Location**: allows you to identify the location on a transfer when multi-location is activated."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:78
msgid "**Package**: allows you to identify packages on a transfer when packages are activated."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:79
msgid "**Credit Card**: doesn’t need manual modification, exists for data from the Mercury module."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:80
msgid "**Unit Product**: allows you to identify a product for both POS and transfers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/barcode_nomenclature.rst:83
msgid "When the barcode pattern contains .*, it means that it can contain any number of characters, those characters being any number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:3
msgid "Process to Transfers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:8
msgid "Simple Transfers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:10
msgid "To process a transfer from the *Barcode* app, the first step is to go to *Operations*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:16
msgid "Then, you have the choice to either enter an existing transfer, by going to the corresponding operation type and manually selecting the one you want to enter, or by scanning the barcode of the transfer."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:26
msgid "From there, you will be able to scan the products that are part of the existing transfer and/or add new products to this transfer. Once all the products have been scanned, you can validate the transfer to proceed with the stock moves."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:35
msgid "If you have different storage locations in your warehouse, you can add additional steps for the different operation types."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:39
msgid "Receipts"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:41
msgid "When receiving a product in stock, you need to scan its barcode in order to identify it in the system. Once done, you can either make it enter the main location of the transfer, for example WH/Stock, or scan a location barcode to make it enter a sub-location of the main location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:50
msgid "If you want the product to enter WH/Stock in our example, you can simply scan the next product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:54
msgid "Delivery Orders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:56
msgid "When delivering a product, you have to scan the source location if it is different than the one initially set on the transfer. Then, you can start scanning the products that are delivered from this specific location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:64
msgid "Once the different products have been scanned, you have the possibility to scan another location, such as WH/Stock, and another page will be added to your delivery order. You can move from one to the other thanks to the *Previous* and *Next* buttons."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:72
msgid "Now, you can validate your transfer. To do so, click on *Next* until you reach the last page of the transfer. There, you will be able to validate it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:80
msgid "Internal Transfers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:82
msgid "When realizing an internal transfer with multi-location, you first have to scan the source location of the product. Then, you can scan the product in itself, before having to scan the barcode of the destination location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:87
msgid "If the source and destination of the internal transfers are already correct, you don’t need to scan them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:91
msgid "Transfers with Tracked Products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:93
msgid "If you work with products tracked by lot/serial numbers, you have two ways of working:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:96
msgid "If you work with serial/lot numbers taking all products into consideration, you can scan the barcode of the lot/serial number and Odoo will increase the quantity of the product, setting its lot/serial number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/internal.rst:101
msgid "If you have the same lot/serial number for different products, you can work by scanning the product barcode first, and then the barcode of the lot/serial number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/transfers_scratch.rst:3
msgid "Create a Transfer from Scratch"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/transfers_scratch.rst:5
msgid "To create a transfer from the *Barcode* application, you first need to print the operation type barcodes. To do so, you can download the *Stock barcode sheet* from the home page of the app."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/operations/transfers_scratch.rst:12
msgid "Once done, you can scan the one for which you want to create a new document. Then, an empty document will be created and you will be able to scan your products to populate it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup.rst:5
msgid "Setup"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:3
msgid "Set up your barcode scanner"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:5
msgid "Getting started with barcode scanning in Odoo is fairly easy. Yet, a good user experience relies on an appropriate hardware setup. This guide will help you through the task of choosing and configuring the barcode scanner."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:11
msgid "Find the barcode scanner that suits your needs"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:13
msgid "The 3 recommended type of barcode scanners to work with the Odoo **Inventory** and **Barcode Scanning** apps are the **USB scanner**, **the bluetooth scanner** and the **mobile computer scanner**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:20
msgid "If you scan products at a computer location, the **USB scanner** is the way to go. Simply plug it in the computer to start scanning. Just make sure when you buy it that the scanner is compatible with your keyboard layout or can be configured to be so."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:25
msgid "The **bluetooth scanner** can be paired with a smartphone or a tablet and is a good choice if you want to be mobile but don't need a big investment. An approach is to log in Odoo on you smartphone, pair the bluetooth scanner with the smartphone and work in the warehouse with the possibility to check your smartphone from time to time and use the software 'manually'."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:32
msgid "For heavy use, the **mobile computer scanner** is the handiest solution. It consists of a small computer with a built-in barcode scanner. This one can turn out to be a very productive solution, however you need to make sure that is is capable of running Odoo smoothly. The most recent models using Android + Google Chrome or Windows + Internet Explorer Mobile should do the job. However, due to the variety of models and configurations on the market, it is essential to test it first."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:42
msgid "Configure your barcode scanner"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:45
msgid "Keyboard layout"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:50
msgid "An USB barcode scanner needs to be configured to use the same keyboard layout as your operating system. Otherwise, your scanner won't translate characters correctly (replacing a 'A' with a 'Q' for example). Most scanners are configured by scanning the appropriate barcode in the user manual."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:57
msgid "Automatic carriage return"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/hardware.rst:59
msgid "By default, Odoo has a 50 milliseconds delay between each successive scan (it helps avoid accidental double scanning). If you want to suppress this delay, you can configure your scanner to insert a carriage return at the end of each barcode. This is usually the default configuration and can be explicitly configured by scanning a specific barcode in the user manual ('CR suffix ON', 'Apply Enter for suffix', etc.)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:3
msgid "Activate the Barcodes in Odoo"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:7
msgid "The barcode scanning features can save you a lot of time usually lost switching between the keyboard, the mouse and the scanner. Properly attributing barcodes to products, pickings locations, etc. allows you to work more efficiently by controlling the software almost exclusively with the barcode scanner."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:14
#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:51
#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:18
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:18
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:16
#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:18
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:16
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:13
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:15
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:11
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:17
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:14
#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:31
#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:66
#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:26
#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:9
#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:15
msgid "Configuration"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:16
msgid "To use this feature, you first need to activate the *Barcode* functionality via :menuselection:`Inventory --> Settings --> Barcode Scanner`. Once you have ticked the feature, you can hit save."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:24
msgid "Set Product Barcodes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:26
msgid "You can easily assign barcodes to your different products via the *Inventory* app. To do so, go to :menuselection:`Settings --> Configure Products Barcodes`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:32
msgid "Then, you have the possibility to assign barcodes to your products directly at creation on the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:42
msgid "Be careful to add barcodes directly on the product variants and not on the template product. Otherwise, you won’t be able to differentiate them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:47
msgid "Set Locations Barcodes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:49
msgid "If you manage multiple locations, you will find useful to attribute a barcode to each location and stick it on the location. You can configure the locations barcodes in :menuselection:`Inventory --> Configuration --> Locations`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:60
msgid "You can easily print the barcode you allocate to the locations via the *Print* menu."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:64
msgid "Barcode Formats"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:66
msgid "Most retail products use EAN-13 barcodes. They cannot be made up without proper authorization. You must pay the International Article Numbering Association a fee in exchange for an EAN code sequence."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/barcode/setup/software.rst:70
msgid "Still, as Odoo supports any string as a barcode, you can always define your own barcode format for internal use."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management.rst:5
msgid "Warehouse Management"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers.rst:5
msgid "Lots and Serial Numbers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:3
msgid "What's the difference between lots and serial numbers?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:8
msgid "Introduction"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:10
msgid "In Odoo, lots and serial numbers have similarities in their functional system but are different in their behavior. They are both managed within the **Inventory**, **Purchases** and **Sales** app."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:14
msgid "**Lots** correspond to a certain number of products you received and store altogether in one single pack."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:17
msgid "**Serial numbers** are identification numbers given to one product in particular, to allow to track the history of the item from reception to delivery and after-sales."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:22
msgid "When to use"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:24
msgid "**Lots** are interesting for products you receive in great quantity and for which a lot number can help in reportings, quality controls, or any other info. Lots will help identify a number of pieces having for instance a production fault. It can be useful for a batch production of clothes or food."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:30
msgid "**Serial numbers** are interesting for items that could require after-sales service, such as smartphones, laptops, fridges, and any electronic devices. You could use the manufacturer's serial number or your own, depending on the way you manage these products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:36
msgid "When not to use"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:38
msgid "Storing consumable products such as kitchen roll, toilet paper, pens and paper blocks in lots would make no sense at all, as there are very few chances that you can return them for production fault."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:42
msgid "On the other hand, giving a serial number to every product is a time-consuming task that will have a purpose only in the case of items that have a warranty and/or after-sales services. Putting a serial number on bread, for instance, makes no sense at all."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:48
msgid ":doc:`serial_numbers`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences.rst:49
msgid ":doc:`lots`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:3
msgid "Expiration dates"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:5
msgid "In Odoo, *expiration dates* can be used to manage and track the lifecycles of perishable products, from purchase to sale. Using expiration dates reduces product loss due to unexpected expiry, and helps to avoid sending expired products to customers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:9
msgid "In Odoo, only products that are tracked using *lots* and *serial numbers* can be assigned expiration information. Once a lot or serial number has been assigned, an expiration date can be set. This is especially helpful for companies (such as food manufacturers) that consistently, or exclusively, buy and sell perishable products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:15
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:17
msgid ":doc:`/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:16
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:19
msgid ":doc:`/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:19
msgid "Enable expiration dates"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:21
msgid "To enable the use of *expiration dates*, go to :menuselection:`Inventory app --> Configuration --> Settings`, and scroll down to the :guilabel:`Traceability` section. Then, click the checkbox to enable the :guilabel:`Lots & Serial Numbers` feature."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:25
msgid "Once that feature is activated, a new option will appear to enable :guilabel:`Expiration Dates`. Click that checkbox to enable the feature, and be sure to :guilabel:`Save` changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:-1
msgid "Enabled lots and serial numbers and expiration dates settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:33
msgid "Once the :guilabel:`Lots & Serial Numbers` feature is activated, additional features appear to :guilabel:`Display Lots & Serial Numbers on Delivery Slips`; to :guilabel:`Display Lots & Serial Numbers on Invoices`; and to :guilabel:`Display Expiration Dates on Delivery Slips`. Activating these features helps with end-to-end traceability, making it easier to manage product recalls, identify \"bad\" batches of products, and more."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:40
msgid "Configure expiration dates on products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:42
msgid "Once the :guilabel:`Lots & Serial Numbers` and :guilabel:`Expiration Dates` features have been enabled in the settings of the *Inventory* app, expiration information can be configured on individual products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:46
msgid "To do so, go to :menuselection:`Inventory app --> Products --> Products`, and select a product to edit. Selecting a product reveals the product form for that particular item. Once on the product form, click :guilabel:`Edit` in the upper-left corner to make changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:51
msgid "To be tracked using lots or serial numbers, or to configure expiration information, products *must* have their :guilabel:`Product Type` set as :guilabel:`Storable Product` under the :guilabel:`General Information` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:55
msgid "Then, click the :guilabel:`Inventory` tab, and scroll down to the :guilabel:`Traceability` section. From here, make sure that either :guilabel:`By Unique Serial Number` or :guilabel:`By Lots` is checked."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:59
msgid "Once it is, a new :guilabel:`Expiration Date` checkbox appears that must also be clicked. When both are enabled, a new :guilabel:`Dates` field appears to the right."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:63
msgid "If a product has stock on-hand prior to activating tracking by lots or serial numbers, an inventory adjustment might need to be performed in order to assign lot numbers to the existing stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:68
msgid "For processing large quantities of products on receipts or deliveries, it is recommended to track using lots, so multiple products can be traced back to the same lot, if any issues arise."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:-1
msgid "Expiration dates configuration on the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:75
msgid "Under the :guilabel:`Dates` field, there are four categories of expiration information to configure for the product:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:78
msgid ":guilabel:`Expiration Time`: the number of days after receiving products (either from a vendor or in stock after production) in which goods may become dangerous and should not be used or consumed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:80
msgid ":guilabel:`Best Before Time`: the number of days before the expiration date in which the goods start deteriorating, **without** necessarily being dangerous yet."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:82
msgid ":guilabel:`Removal Time`: the number of days before the expiration date in which the goods should be removed from stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:84
msgid ":guilabel:`Alert Time`: the number of days before the expiration date in which an alert should be raised on goods in a particular lot or containing a particular serial number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:88
msgid "The values entered into these fields automatically compute the expiration date for goods entered into stock, whether purchased from a vendor or manufactured in-house."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:91
msgid "Once all the expiration information has been configured, click :guilabel:`Save` to save all changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:94
msgid "If the :guilabel:`Dates` field is not populated with any values for expiration information, dates (and lots) can be manually assigned upon receipts and deliveries in and out of the warehouse. Even when assigned, they can still be overwritten and changed manually if needed, as well."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:99
msgid "Set expiration dates on receipts with lots & serial numbers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:101
msgid "Generating expiration dates for **incoming** goods can be done directly from the purchase order. To create a purchase order, go to the :menuselection:`Purchase` app and click :guilabel:`Create` to create a new request for quotation (RFQ)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:105
msgid "Then, fill out the information by adding a :guilabel:`Vendor`, and add products to the :guilabel:`Product` lines by clicking :guilabel:`Add a product`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:108
msgid "Choose the desired quantity to order by changing the number in the :guilabel:`Quantity` column, and click :guilabel:`Confirm Order`. This converts the :abbr:`RFQ (request for quotation)` into a purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:112
msgid "Click the :guilabel:`Receipt` smart button at the top of the purchase order to be taken to the warehouse receipt form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:116
msgid "Clicking :guilabel:`Validate` before assigning a serial number to the ordered product quantities causes a :guilabel:`User Error` popup to appear. The popup requires entry of a lot or serial number for the ordered products. The :abbr:`RFQ (request for quotation)` cannot be validated without an assigned lot or serial number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:0
msgid "User error popup when validating an order with no lot number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:125
msgid "From here, click the :guilabel:`Additional Options` menu (hamburger) icon located on the far-right of the product line. When clicked, a :guilabel:`Detailed Operations` pop-up will appear."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:128
msgid "In this pop-up, click :guilabel:`Add a line`, and assign a lot or serial number under the :guilabel:`Lot/Serial Number Name` field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:131
msgid "An expiration date automatically populates, based on the configuration on the product form (if previously configured)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:135
msgid "If the :guilabel:`Dates` field on the product form has not been configured, this date can be manually entered."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:138
msgid "After the expiration date has been established, mark the :guilabel:`Done` quantities, and click :guilabel:`Confirm` to close the pop-up. Finally, click :guilabel:`Validate`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:-1
msgid "Detailed operations popup showing expiration dates for ordered products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:145
msgid "A :guilabel:`Traceability` smart button will appear upon validating the receipt. Click the :guilabel:`Traceability` smart button to see the updated :guilabel:`Traceability Report`, which includes: a :guilabel:`Reference` document; the :guilabel:`Product` being traced; the :guilabel:`Lot/Serial #`; and more."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:151
msgid "Set expiration dates on manufactured products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:153
msgid "Expiration dates can also be generated for products manufactured in-house. To assign expiration dates to manufactured products, a manufacturing order (MO) needs to be completed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:156
msgid "To create a :abbr:`MO (manufacturing order)`, go to :menuselection:`Manufacturing app --> Operations --> Manufacturing Orders`, and click :guilabel:`Create`. Choose a product to manufacture from the :guilabel:`Product` field drop-down menu, then select the :guilabel:`Quantity` to produce."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:-1
msgid "Manufacturing order for product with expiration date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:165
msgid "To manufacture a product, there must be materials to consume in the lines in the :guilabel:`Product` column. This can be achieved either by creating a :guilabel:`Bill of Material` for the :guilabel:`Product`, or manually adding materials to consume by clicking :guilabel:`Add a line`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:170
msgid "Once ready, click :guilabel:`Confirm`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:172
msgid "Next to :guilabel:`Lot/Serial Number`, either select an existing lot number from the drop-down menu, or click the green :guilabel:`+` sign to automatically assign a new lot number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:175
msgid "Then, select a number of units for the :guilabel:`Quantity` field, and click :guilabel:`Mark as Done`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:178
msgid "Click on the :guilabel:`External Link` icon in the assigned :guilabel:`Lot/Serial Number` field. A pop-up appears, revealing a detail form for that specific number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:181
msgid "On that pop-up, under the :guilabel:`Dates` tab, all expiration information that was previously configured for the product is displayed. That same information is also available on the detail form for that specific product, or by going to :menuselection:`Inventory app --> Products --> Lots/Serial Numbers`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:-1
msgid "Dates tab with expiration information for specific lot number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:191
msgid "Sell products with expiration dates"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:193
msgid "Selling perishable products with expiration dates is done the same as any other type of product. The first step in selling perishable products is to create a sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:196
msgid "To do that, go to :menuselection:`Sales app --> Create` to create a new quotation, and fill out the information on the sales order form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:199
msgid "Add a :guilabel:`Customer`, click :guilabel:`Add a product` to add the desired products to the :guilabel:`Product` lines, and set a :guilabel:`Quantity` for the products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:202
msgid "Then, click the :guilabel:`Other Info` tab. Under the :guilabel:`Delivery` section, change the :guilabel:`Delivery Date` to a date after the expected date, and click the :guilabel:`green checkmark` icon to confirm the date. Finally, click :guilabel:`Confirm` to confirm the sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:206
msgid "Next, click the :guilabel:`Delivery` smart button at the top of the sales order to see the warehouse receipt form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:209
msgid "On the warehouse receipt form, click :guilabel:`Validate`, and then :guilabel:`Apply` in the accompanying pop-up window, to automatically process all :guilabel:`Done` quantities, and deliver the products to the customer."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:213
msgid "If the products are delivered before the :guilabel:`Alert Date` set on the product form, then no alerts will be created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:217
msgid "To sell perishable products with expiration dates, the :guilabel:`Removal Strategy` for the :guilabel:`Location` the products are stored in must be set to :abbr:`FEFO (First Expiry, First Out)`. If there is not enough stock of perishable products in one lot, Odoo will automatically take the remaining quantity required from a second lot with the next-soonest expiration date. Removal strategies can also be set on :guilabel:`Product Categories`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:224
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:209
msgid ":doc:`/applications/inventory_and_mrp/inventory/routes/strategies/removal`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:227
msgid "View expiration dates for lots & serial numbers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:229
msgid "To view (and/or group) all products with expiration dates by lot number, go to :menuselection:`Inventory app --> Products --> Lots/Serial Numbers`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:232
msgid "Once there, remove any default search filters from the :guilabel:`Search...` bar. Then, click :guilabel:`Group By`, choose :guilabel:`Add Custom Group`, and select the :guilabel:`Expiration Date` parameter from the drop-down menu. Finally, click :guilabel:`Apply` to apply the filter."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:236
msgid "Doing so breaks down all perishable products, their expiration dates, and the assigned lot number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:-1
msgid "Group by expiration dates on lots and serial numbers page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:243
msgid "Expiration alerts"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:245
msgid "To see expiration alerts, go to :menuselection:`Inventory app --> Products --> Lots/Serial Numbers`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:247
msgid "Then, click into a :guilabel:`Lot/Serial Number` with perishable products. Doing so reveals the serial number detail form. On the serial number detail form, click the :guilabel:`Dates` tab to see all expiration information related to the products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:251
msgid "To edit the form, click :guilabel:`Edit` in the upper-left corner of the form, then change the :guilabel:`Expiration Date` to today's date (or earlier), and click :guilabel:`Save` to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:255
msgid "After saving, the lot number form displays a red :guilabel:`Expiration Alert` at the top of the form to indicate that the products in this lot are either expired or expiring soon. From here, click back to the :guilabel:`Lots/Serial Numbers` page (via the breadcrumbs)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:259
msgid "To see the new expiration alert, or any expiration alerts for products that are expired (or will expire soon), remove all of the search filters from the :guilabel:`Search...` bar on the :guilabel:`Lots/Serial Numbers` dashboard."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:263
msgid "Then, click :guilabel:`Filters`, and choose :guilabel:`Expiration Alerts`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/expiration_dates.rst:-1
msgid "Expiration alert for product past the expiration date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:3
msgid "Use lots to manage groups of products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:5
msgid "*Lots* are one of the two ways to identify and track products in Odoo. A lot usually indicates a specific batch of an item that was received, is currently stored, or was shipped from a warehouse, but can also pertain to a batch of products manufactured in-house, as well."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:9
msgid "Manufacturers assign lot numbers to groups of products that have common properties; this can lead to multiple goods sharing the same lot number. This helps to identify a number of products in a single group, and allows for end-to-end traceability of these products through each step in their lifecycles."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:14
msgid "Lots are useful for products that are manufactured or received in large quantities (such as clothes or food), and can be used to trace a product back to a group. This is especially useful when managing product recalls or expiration dates."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:22
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:20
msgid "Enable lots & serial numbers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:24
msgid "To track products using lots, the *Lots & Serial Numbers* feature must be enabled. Go to the :menuselection:`Inventory app --> Configuration --> Settings`, scroll down to the :guilabel:`Traceability` section, and click the box next to :guilabel:`Lots & Serial Numbers`. Then, click the :guilabel:`Save` button to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:-1
msgid "Enabled lots and serial numbers feature in inventory settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:34
msgid "Track products by lots"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:36
msgid "Once the :guilabel:`Lots & Serial Numbers` setting has been activated, individual products can now be configured to be tracked using lots. To do this, go to the :menuselection:`Inventory app --> Products --> Products`, and choose a product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:40
msgid "Once on the product form, click :guilabel:`Edit` to make changes to the form. Then, click the :guilabel:`Inventory` tab. In the :guilabel:`Traceability` section, click :guilabel:`By Lots`. Then, click :guilabel:`Save` to save changes. Existing or new lot numbers can now be assigned to newly-received or manufactured batches of this product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:46
msgid "If a product has stock on-hand prior to activating tracking by lots or serial numbers, an inventory adjustment might need to be performed to assign lot numbers to the existing stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:-1
msgid "Enabled tracking by lots feature on product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:54
msgid "Create new lots for products already in stock"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:56
msgid "New lots can be created for products already in stock with no assigned lot number. To do this, go to the :menuselection:`Inventory app --> Products --> Lots/Serial Numbers`, and click :guilabel:`Create`. Doing so reveals a separate page where a new :guilabel:`Lot/Serial Number` is generated automatically."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:62
msgid "While Odoo automatically generates a new :guilabel:`Lot/Serial Number` to follow the most recent number, it can be edited and changed to any desired number, by clicking the line under the :guilabel:`Lot/Serial Number` field, and changing the generated number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:66
msgid "Once the new :guilabel:`Lot/Serial Number` is generated, click the blank field next to :guilabel:`Product` to reveal a drop-down menu. From this menu, select the product to which this new number will be assigned."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:70
msgid "This form also provides the option to adjust the :guilabel:`Quantity`, assign a unique :guilabel:`Internal Reference` number (for traceability purposes), and assign this specific lot or serial number configuration to a specific website in the :guilabel:`Website` field (if working in a multi-website environment)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:75
msgid "A detailed description of this specific lot or serial number can also be added in the :guilabel:`Description` tab below."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:78
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:79
msgid "When all desired configurations are complete, click the :guilabel:`Save` button to save all changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:-1
msgid "New lot number creation form with assigned product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:84
msgid "After a new lot number has been created, saved, and assigned to the desired product, navigate back to the product form in the :menuselection:`Inventory` app, by going to :menuselection:`Products --> Products`, and selecting the product to which this newly-created lot number was just assigned."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:88
msgid "On that product's detail form, click the :guilabel:`Lot/Serial Numbers` smart button to view the new lot number. When additional quantity of this product is received or manufactured, this new lot number can be selected and assigned to it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:93
msgid "Manage lots for shipping and receiving"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:95
msgid "Lot numbers can be assigned for both **incoming** and **outgoing** goods. For incoming goods, lot numbers are assigned directly on the purchase order form. For outgoing goods, lot numbers are assigned directly on the sales order form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:100
msgid "Manage lots on receipts"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:102
msgid "Assigning lot numbers to **incoming** goods can be done directly from the purchase order (PO)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:104
msgid "To create a :abbr:`PO (purchase order)`, go to :menuselection:`Purchase app --> Create`. Doing so reveals a new, blank request for quotation (RFQ) form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:107
msgid "On this :abbr:`RFQ (request for quotation)`, fill out the necessary information by adding a :guilabel:`Vendor`, and adding the desired products to the :guilabel:`Product` lines, by clicking :guilabel:`Add a product` (under the :guilabel:`Products` tab)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:111
msgid "Choose the desired quantity of the product to order by changing the number in the :guilabel:`Quantity` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:114
msgid "Once the :abbr:`RFQ (request for quotation)` has been filled out, click :guilabel:`Confirm Order`. When the :abbr:`RFQ (request for quotation)` is confirmed, it becomes a :guilabel:`Purchase Order`, and a :guilabel:`Receipt` smart button appears. Click the :guilabel:`Receipt` smart button to be taken to the warehouse receipt form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:120
msgid "Clicking :guilabel:`Validate` before assigning a lot number to the ordered product quantities will result in a :guilabel:`User Error` pop-up. The pop-up requires entry of a lot or serial number for the ordered products. The :abbr:`RFQ (request for quotation)` **cannot** be validated without a lot number being assigned."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:-1
msgid "Add lot/serial number user error popup."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:129
msgid "From here, click the :guilabel:`Additional Options` menu, represented by a :guilabel:`hamburger (four horizontal lines)` icon, located to the right of the :guilabel:`Unit of Measure` column in the :guilabel:`Operations` tab). Clicking that icon reveals a :guilabel:`Detailed Operations` pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:133
msgid "In this pop-up, configure a number of different fields, including the assignation of a lot number, under the :guilabel:`Lot/Serial Number Name` column, located at the bottom of the pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:136
msgid "There are two ways to assign lot numbers: **manually** and **copy/paste**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:138
msgid "**Manually assign lot numbers**: Click :guilabel:`Add a line` and choose the location the products will be stored in under the :guilabel:`To` column. Then, type a new :guilabel:`Lot Number Name` and set the :guilabel:`Done` quantity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:0
msgid "Assign lot number detailed operations popup."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:147
msgid "If quantities should be processed in multiple locations and lots, click :guilabel:`Add a line` and type a new :guilabel:`Lot Number Name` for additional quantities. Repeat until the :guilabel:`Quantity Done` matches the :guilabel:`Demand`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:151
msgid "**Copy/paste lot numbers from a spreadsheet**: Populate a spreadsheet with all of the lot numbers received from the supplier (or manually chosen to assign upon receipt). Then, copy and paste them in the :guilabel:`Lot/Serial Number Name` column. Odoo will automatically create the necessary number of lines based on the amount of numbers pasted in the column. From here, the :guilabel:`To` locations and :guilabel:`Done` quantities can be manually entered in each of the lot number lines."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:0
msgid "List of lot numbers copied on excel spreadsheet."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:161
msgid "Once all product quantities have been assigned a lot number, click :guilabel:`Confirm` to close the pop-up. Then, click :guilabel:`Validate`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:164
msgid "A :guilabel:`Traceability` smart button appears upon validating the receipt. Click the :guilabel:`Traceability` smart button to see the updated :guilabel:`Traceability Report`, which includes: a :guilabel:`Reference` document, the :guilabel:`Product` being traced, the :guilabel:`Lot/Serial #` assigned, and more."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:170
msgid "Manage lots on delivery orders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:172
msgid "Assigning lot numbers to **outgoing** goods can be done directly from the sales order (SO)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:174
msgid "To create an :abbr:`SO (sales order)`, go to the :menuselection:`Sales app --> Create`. Doing so reveals a new, blank quotation form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:177
msgid "On this blank quotation form, fill out the necessary information by adding a :guilabel:`Customer`, and adding products to the :guilabel:`Product` lines (in the :guilabel:`Order Lines` tab) by clicking :guilabel:`Add a product`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:181
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:219
msgid "Then, choose the desired quantity to sell by changing the number in the :guilabel:`Quantity` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:183
msgid "Once the quotation has been filled out, click the :guilabel:`Confirm` button to confirm the quotation. When the quotation is confirmed, it becomes an :abbr:`SO (sales order)`, and a :guilabel:`Delivery` smart button appears."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:187
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:225
msgid "Click the :guilabel:`Delivery` smart button to view the warehouse receipt form for that specific :abbr:`SO (sales order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:190
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:130
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:228
msgid "From here, click the :guilabel:`Additional Options` menu, represented by a `hamburger` icon (four horizontal lines, located to the right of the :guilabel:`Unit of Measure` column in the :guilabel:`Operations` tab). Clicking that icon reveals a :guilabel:`Detailed Operations` pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:194
msgid "In the pop-up, a :guilabel:`Lot/Serial Number` will be chosen by default, with the full :guilabel:`Reserved` quantity taken from that specific lot (if there is enough stock in that particular lot)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:198
msgid "If there is insufficient stock in that lot, or if partial quantities of the :guilabel:`Demand` should be taken from multiple lots, change the quantity in the :guilabel:`Done` column to only include that specific part of the total quantity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:203
msgid "The lot automatically chosen for delivery orders varies, depending on the selected removal strategy (:abbr:`FIFO (First In, First Out)`, :abbr:`LIFO (Last In, First Out)`, or :abbr:`FEFO (First Expiry, First Out)`). It will also depend on the quantity ordered, and if there is enough quantity in one lot to fulfill the order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:211
msgid "Then, click :guilabel:`Add a line`, select an additional (different) :guilabel:`Lot/Serial Number`, apply the rest of the :guilabel:`Done` quantities, and click :guilabel:`Confirm` to close the pop-up. Lastly, click the :guilabel:`Validate` button to deliver the products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:-1
msgid "Detailed operations popup for source lot number on sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:219
msgid "Upon validating the delivery order, a :guilabel:`Traceability` smart button appears. Click the :guilabel:`Traceability` smart button to see the updated :guilabel:`Traceability Report`, which includes a :guilabel:`Reference` document, the :guilabel:`Product` being traced, the :guilabel:`Date`, and the :guilabel:`Lot/Serial #` assigned."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:224
msgid "The :guilabel:`Traceability Report` can also include a :guilabel:`Reference` receipt from the previous purchase order, if the product quantities shared the same lot number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:228
msgid "Manage lots for different operations types"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:230
msgid "In Odoo, the creation of new lots is only allowed upon **receiving** products from a purchase order, by default. **Existing** lot numbers cannot be used."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:233
msgid "For sales orders, the opposite is true: new lot numbers cannot be created on the delivery order, only existing lot numbers can be used."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:236
msgid "To change the ability to use new (or existing) lot numbers on any operation type, go to the :menuselection:`Inventory app --> Configuration --> Operations Types`, and select the desired :guilabel:`Operation Type`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:240
msgid "For :guilabel:`Receipts`, found on the :menuselection:`Operations Types` page, the :guilabel:`Use Existing Lots/Serial Numbers` option can be enabled, by clicking :guilabel:`Edit`, and then clicking the checkbox beside the :guilabel:`Use Existing Lots/Serial Numbers` option (in the :guilabel:`Traceability` section). Lastly, click the :guilabel:`Save` button to save the changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:245
msgid "For :guilabel:`Delivery Orders`, the :guilabel:`Create New Lots/Serial Numbers` option can be enabled, by clicking :guilabel:`Edit`, and clicking the checkbox beside the :guilabel:`Create New Lots/Serial Numbers` option. Be sure to click the :guilabel:`Save` button to save all changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:-1
msgid "Enabled traceability setting on operations type form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:254
msgid "For inter-warehouse transfers involving products tracked by lots, it can be useful to enable the :guilabel:`Use Existing Lots/Serial Numbers` option for warehouse receipts."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:258
msgid "Lots traceability"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:260
msgid "Manufacturers and companies can refer to traceability reports to see the entire lifecycle of a product: where (and when) it came from, where it was stored, and who (and when) it went to."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:263
msgid "To see the full traceability of a product, or group by lots, go to the :menuselection:`Inventory app --> Products --> Lots/Serial Numbers`. Doing so reveals the :menuselection:`Lots/Serial Numbers` dashboard."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:267
msgid "From here, products with lot numbers assigned to them will be listed by default, and can be expanded to show the lot numbers those products have assigned to them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:270
msgid "To group by lots (or serial numbers), begin by removing any filters in the search bar. Then, click the :guilabel:`Group By` drop-down, select :guilabel:`Add Custom Group`, and select :guilabel:`Lot/Serial Number` from the drop-down menu. Then, click :guilabel:`Apply`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:274
msgid "Doing so displays all existing lots and serial numbers, and can be expanded to show all quantities of products with that assigned number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:-1
msgid "Lots and serial numbers traceability report."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/lots.rst:282
#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:317
msgid ":doc:`/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/differences`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:3
msgid "Use serial numbers to track products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:5
msgid "*Serial numbers* are one of the two ways to identify and track products in Odoo. A serial number is a unique identifier assigned incrementally (or sequentially) to an item or product, used to distinguish it from other items and products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:9
msgid "Serial numbers can consist of many different types of characters: they can be strictly numerical, they can contain letters and other typographical symbols, or they can be a mix of all of the above."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:12
msgid "The goal of assigning serial numbers to individual products is to make sure that every item's history is identifiable when it travels through the supply chain. This can be especially useful for manufacturers that provide after-sales services to products that they sell and deliver."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:22
msgid "To track products using serial numbers, the :guilabel:`Lots & Serial Numbers` feature must be enabled. To enable this, go to :menuselection:`Inventory app --> Configuration --> Settings`, scroll down to the :guilabel:`Traceability` section, and click the box next to :guilabel:`Lots & Serial Numbers`. Remember to click the :guilabel:`Save` button to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "Enabled lots and serial numbers setting."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:32
msgid "Configure serial number tracking on products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:34
msgid "Once the :guilabel:`Lots & Serial Numbers` setting has been activated, individual products can now be tracked using serial numbers. To configure this, go to :menuselection:`Inventory app --> Products --> Products`, and choose a desired product to track."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:38
msgid "Once on the product form, click :guilabel:`Edit`, and click the :guilabel:`Inventory` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:40
msgid "Once on the product form, click :guilabel:`Edit`, navigate to the :guilabel:`Inventory` tab, and scroll to the :guilabel:`Traceability` section. Then, select the :guilabel:`By Unique Serial Number` option, and click :guilabel:`Save` to save the changes. Existing or new serial numbers can now be selected and assigned to newly-received or manufactured batches of this product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "Enabled serial number tracking on product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:50
msgid "If a product doesn't have a serial number assigned to it, a user error pop-up window will appear. The error message states that the product(s) in stock have no lot/serial number. However, a lot/serial number can be assigned to the product by making an inventory adjustment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:55
msgid "Create new serial numbers for products already in stock"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:57
msgid "New serial numbers can be created for products already in stock with no assigned serial number. To do this, go to :menuselection:`Inventory --> Products --> Lots/Serial Numbers`, and click :guilabel:`Create`. Doing so reveals a blank lots/serial numbers form. On this form, a new :guilabel:`Lot/Serial Number` is generated automatically."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:63
msgid "While Odoo automatically generates a new lot/serial number to follow the most recent number, it can be edited and changed to any desired number, by clicking the line under the :guilabel:`Lot/Serial Number` field, and changing the generated number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:67
msgid "Once the :guilabel:`Lot/Serial Number` is generated, click the blank field next to :guilabel:`Product` to reveal a drop-down menu. From this menu, select the product to which this new number will be assigned."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:71
msgid "This form also provides the option to adjust the :guilabel:`Quantity`, to assign a unique :guilabel:`Internal Reference` number (for traceability purposes), and to assign this specific lot/serial number configuration to a specific website in the :guilabel:`Website` field (if working in a multi-website environment)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:76
msgid "A detailed description of this specific lot/serial number can also be added in the :guilabel:`Description` tab below."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "New serial number created for existing product stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:85
msgid "After a new serial number has been created, assigned to the desired product, and saved, navigate back to the product form, by going to :menuselection:`Products --> Products`, and selecting the product that this newly-created serial number was just assigned to."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:89
msgid "On that product's detail form, click the :guilabel:`Lot/Serial Numbers` smart button to view the new serial number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:93
msgid "Manage serial numbers for shipping and receiving"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:95
msgid "Serial numbers can be assigned for both **incoming** and **outgoing** goods. For incoming goods, serial numbers are assigned directly on the purchase order form. For outgoing goods, serial numbers are assigned directly on the sales order form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:100
msgid "Manage serial numbers on receipts"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:102
msgid "Assigning serial numbers to **incoming** goods can be done directly from the purchase order (PO)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:104
msgid "To create a :abbr:`PO (purchase order)`, go to the :menuselection:`Purchase app --> Create`. Doing so reveals a new, blank request for quotation (RFQ) form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:107
msgid "On this :abbr:`RFQ (request for quotation)` form, fill out the necessary information, by adding a :guilabel:`Vendor`, and by adding the desired products to the :guilabel:`Product` lines, by clicking :guilabel:`Add a product`, under the :guilabel:`Products` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:111
msgid "Choose the desired quantity of the product to order, by changing the number in the :guilabel:`Quantity` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:114
msgid "When the necessary configurations are complete, click :guilabel:`Confirm Order`. This will convert the :abbr:`RFQ (request for quotation)` to a purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:117
msgid "Then, click the :guilabel:`Receipt` smart button to be taken to the warehouse receipt form page for that specific :abbr:`PO (purchase order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:121
msgid "Clicking :guilabel:`Validate` before assigning a serial number to the ordered product quantities will cause a :guilabel:`User Error` pop-up to appear. The pop-up requires entry of a lot or serial number for the ordered products. The :abbr:`RFQ (request for quotation)` **cannot** be validated without a serial number being assigned."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "User error popup prompting serial number entry."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:134
msgid "In this pop-up, configure a number of different fields, including the assignation of a serial number (or serial numbers) under the :guilabel:`Lot/Serial Number Name` column, located at the bottom of the pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:138
msgid "There are three ways to do this: manually assigning serial numbers, automatically assigning serial numbers, and copy/pasting serial numbers from a spreadsheet."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:142
msgid "Assign serial numbers manually"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:144
msgid "To assign serial numbers manually, click :guilabel:`Add a line` from the :guilabel:`Detailed Operations` pop-up, and first choose the location where the product will be stored under the :guilabel:`To` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:148
msgid "Then, type a new :guilabel:`Serial Number Name`, and set the :guilabel:`Done` quantity in the appropriate columns."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:151
msgid "Repeat this process for the quantity of products shown in the :guilabel:`Demand` field, and until the :guilabel:`Quantity Done` field displays the correct (matching) number of products processed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:155
msgid "Assign serial numbers automatically"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:157
msgid "If a large quantity of products need individual serial numbers assigned to them, Odoo can automatically generate and assign serial numbers to each of the individual products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:160
msgid "To accomplish this, start with the :guilabel:`First SN` field in the :guilabel:`Detailed Operations` pop-up window, and type the first serial number in the desired order to be assigned."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:163
msgid "Then, in the :guilabel:`Number of SN` field, type the total number of items that need newly-generated unique serial numbers assigned to them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:166
msgid "Finally, click :guilabel:`Assign Serial Numbers`, and a list will populate with new serial numbers matching the ordered quantity of products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "Automatic serial number assignment in detailed operations popup."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:174
msgid "Copy/paste serial numbers from a spreadsheet"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:176
msgid "To copy and paste serial numbers from an existing spreadsheet, first populate a spreadsheet with all of the serial numbers received from the supplier (or manually chosen upon receipt). Then, copy and paste them in the :guilabel:`Lot/Serial Number Name` column. Odoo will automatically create the necessary number of lines based on the amount of numbers pasted in the column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:181
msgid "From here, the :guilabel:`To` locations and :guilabel:`Done` quantities can be manually entered in each of the serial number lines."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "List of serial numbers copied in Excel spreadsheet."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:189
msgid "For purchase orders that include large quantities of products to receive, the best method of serial number assignment is to automatically assign serial numbers using the :guilabel:`Assign Serial Numbers` button located on the :abbr:`PO (purchase order)`. This prevents any serial numbers from being reused or duplicated, and improves traceability reporting."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:194
msgid "Once all product quantities have been assigned a serial number, click the :guilabel:`Confirm` button to close the pop-up. Then, click :guilabel:`Validate`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:197
msgid "A :guilabel:`Traceability` smart button appears upon validating the receipt. Click the :guilabel:`Traceability` smart button to see the updated :guilabel:`Traceability Report`, which includes: a :guilabel:`Reference` document, the :guilabel:`Product` being traced, the :guilabel:`Lot/Serial #`, and more."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:202
msgid "Once all product quantities have been assigned a serial number, click :guilabel:`Confirm` to close the popup, and click :guilabel:`Validate`. A :guilabel:`Traceability` smart button will appear upon validating the receipt. Click the :guilabel:`Traceability` smart button to see the updated :guilabel:`Traceability Report`, which includes: a :guilabel:`Reference` document, the :guilabel:`Product` being traced, the :guilabel:`Lot/Serial #`, and more."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:209
msgid "Manage serial numbers on delivery orders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:211
msgid "Assigning serial numbers to **outgoing** goods can be done directly from the sales order (SO)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:213
msgid "To create an :abbr:`SO (sales order)`, navigate to the :menuselection:`Sales` app, and click the :guilabel:`Create` button. Doing so reveals a new, blank quotation form. On this blank quotation form, fill out the necessary information, by adding a :guilabel:`Customer`, and adding products to the :guilabel:`Product` lines (in the :guilabel:`Order Lines` tab), by clicking :guilabel:`Add a product`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:221
msgid "Once the quotation has been filled out, click the :guilabel:`Confirm` button to confirm the quotation. When the quotation is confirmed, the quotation becomes an :abbr:`SO (sales order)`, and a :guilabel:`Delivery` smart button appears."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:232
msgid "In the pop-up, a :guilabel:`Lot/Serial Number` will be chosen by default, with each product of the total :guilabel:`Reserved` quantity listed with their unique serial numbers (most likely listed in sequential order)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:236
msgid "To manually change a product's serial number, click the drop-down menu under :guilabel:`Lot/Serial Number`, and choose (or type) the desired serial number. Then, mark the :guilabel:`Done` quantities, and click :guilabel:`Confirm` to close the pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:240
msgid "Finally, click the :guilabel:`Validate` button to deliver the products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "Serial numbers listed in detailed operations popup."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:246
msgid "Upon validating the delivery order, a :guilabel:`Traceability` smart button appears. Click the :guilabel:`Traceability` smart button to see the updated :guilabel:`Traceability Report`, which includes: a :guilabel:`Reference` document, the :guilabel:`Product` being traced, the :guilabel:`Date`, and the :guilabel:`Lot/Serial #` assigned."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:251
msgid "The :guilabel:`Traceability Report` can also include a :guilabel:`Reference` receipt from the previous purchase order (PO), if any of the product quantities shared a serial number assigned during receipt of that specific :abbr:`PO (purchase order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:256
msgid "Manage serial numbers for different operations types"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:258
msgid "By default in Odoo, the creation of new serial numbers is only allowed upon **receiving** products from a purchase order. **Existing** serial numbers cannot be used. For sales orders, the opposite is true: new serial numbers cannot be created on the delivery order, only existing serial numbers can be used."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:263
msgid "To change the ability to use new (or existing) serial numbers on any operation type, go to :menuselection:`Inventory app --> Configuration --> Operations Types`, and select the desired :guilabel:`Operation Type`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:267
msgid "For the :guilabel:`Receipts` operation type, found on the :guilabel:`Operations Types` page, the :guilabel:`Use Existing Lots/Serial Numbers` option can be enabled, by selecting :guilabel:`Receipts` from the :guilabel:`Operations Types` page, clicking :guilabel:`Edit`, and then clicking the checkbox beside the :guilabel:`Use Existing Lots/Serial Numbers` option (in the :guilabel:`Traceability` section). Lastly, click the :guilabel:`Save` button to save the changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:273
msgid "For the :guilabel:`Delivery Orders` operation type, located on the :guilabel:`Operations Types` page, the :guilabel:`Create New Lots/Serial Numbers` option can be enabled, by selecting :guilabel:`Delivery Orders` from the :guilabel:`Operations Types` page, clicking :guilabel:`Edit`, and clicking the checkbox beside the :guilabel:`Create New Lots/Serial Numbers` option (in the :guilabel:`Traceability` section). Be sure to click :guilabel:`Save` to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "Enabled traceability setting in operations type form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:284
msgid "Serial number traceability"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:286
msgid "Manufacturers and companies can refer to the traceability reports to see the entire lifecycle of a product: where it came from (and when), where it was stored, and who it went to."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:289
msgid "To see the full traceability of a product, or group by serial numbers, go to :menuselection:`Inventory app --> Products --> Lots/Serial Numbers`. Doing so reveals the :guilabel:`Lots/Serial Numbers` dashboard."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:293
msgid "From here, products with serial numbers assigned to them will be listed by default, and can be expanded to show what serial numbers have been specifically assigned to them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:296
msgid "To group by serial numbers (or lots), first remove any default filters from the search bar in the upper-right corner. Then, click :guilabel:`Group By`, and select :guilabel:`Add Custom Group`, which reveals a mini drop-down menu. From this mini drop-down menu, select :guilabel:`Lot/Serial Number`, and click :guilabel:`Apply`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:301
msgid "Doing so reveals all existing serial numbers and lots, and can be expanded to show all quantities of products with that assigned number. For unique serial numbers that are not reused, there should be just one product per serial number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:-1
msgid "Serial numbers reporting page with drop-down lists."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/lots_serial_numbers/serial_numbers.rst:310
msgid "For additional information regarding an individual serial number (or lot number), click the line item for the serial number to reveal that specific serial number's :guilabel:`Serial Number` form. From this form, click the :guilabel:`Location` and :guilabel:`Traceability` smart buttons to see all stock on-hand using that serial number, and any operations made using that serial number."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc.rst:5
msgid "Miscellaneous Operations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:3
msgid "Process Batch Transfers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:5
msgid "Batch picking allows a single picker to handle a batch of orders, reducing the number of times he must visit the same location. In Odoo, it means you can regroup several transfers into the same batch transfer, then process it, either via the barcode application or in the form view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:11
msgid "Create a Batch Transfer"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:13
msgid "To activate the batch picking option, go to :menuselection:`Inventory --> Configuration --> Configuration` and enable *Batch Pickings*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of the inventory settings. Process to enable the batch pickings option in the Odoo Inventory app"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:20
msgid "Then, go to :menuselection:`Inventory --> Operations --> Batch Transfers` and hit the create button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of the new menu, Batch Transfers, under operations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:27
msgid "Now, determine the batch transfer responsible and the type of transfers you want to include in the batch. To add the types of transfers, click on *Add a line*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of a Batch Transfers form"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:34
msgid "In the example below, a filter was applied to only see the transfers that are in the *Pick* step. After that, the different transfers that needed to be included in the batch transfer were selected."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of the list of transfers to choose for a single batch transfer and how to add them\n"
"to the batch transfer"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:42
msgid "To see the products to pick for the different transfers, click on *Select*. If *Multi-locations* has been activated, the document also shows the locations they have been reserved from."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of a batch transfer list. Products to pick with their source and target locations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:51
msgid "Create a Batch Transfer from the Transfers List View"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:53
msgid "From the *Transfers List View*, select transfers that should be included in the Batch. Then, select *Add to batch* from the *Action* list."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of the process to add transfers to a batch transfer from the transfers list view"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:61
msgid "Next, determine if you want to add the transfers to an existing draft batch transfer or create a new one."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "Option to add a responsible to a batch transfer so it can be confirmed"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:69
msgid "Process a Batch Transfer"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:71
msgid "While gathering the products, you can edit the batch transfer and update the *Quantity done* for each product. Once everything has been picked, select *Validate* so the different transfers contained in the batch are validated too."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of an in progress batch transfer"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:80
msgid "In case all the products cannot be picked, you can create backorders for each individual transfer which couldn’t be completely processed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "How to handle batch transfers with unavailable products. Creation of a backorder inside\n"
"of a batch transfer"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of how backorders are handled in Odoo's batch transfers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:93
msgid "Process a Batch Transfer from the Barcode app"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:95
msgid "Enter the *Barcode* application, select the *Batch Transfers* menu."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of the Odoo Barcode app dashboard"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:101
msgid "Then, you can enter the batch transfer on which you want to work. Batch transfers can easily be grouped per responsible if necessary."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of the batch transfers dashboard inside of the Barcode app"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:108
msgid "In the batch transfer, products are classified per location. The source document is visible on each line and a color-code helps differentiate them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of an in progress batch transfer with the Odoo Barcode application"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:116
msgid "To see the products to pick from another location, click on the *Next* button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:-1
msgid "View of a ready and completed batch transfer inside of the Odoo Barcode application"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/batch_transfers.rst:123
msgid "Once all the products have been picked, click on *Validate* (on the last page) to mark the batch transfer as done."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:3
msgid "Consignment: buy and sell stock without owning it"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:5
msgid "Most of the time, products stored in a company's warehouse are either purchased from suppliers, or are manufactured in-house. However, suppliers will sometimes let companies store and sell products in the company's warehouse, without having to buy those items up-front. This is called *consignment*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:10
msgid "Consignment is a useful method for suppliers to launch new products, and easily deliver to their customers. It's also a great way for the company storing the products (the consignee) to earn something back for their efforts. Consignees can even charge a fee for the convenience of storing products they don't actually own."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:16
msgid "Enable the consignment setting"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:18
msgid "To receive, store, and sell consignment stock, the feature needs to be enabled in the settings. To do this, go to :menuselection:`Inventory --> Configuration --> Settings`, and under the :guilabel:`Traceability` section, check the box next to :guilabel:`Consignment`, and then click :guilabel:`Save` to finish."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:-1
msgid "Enabled Consignment setting in Inventory configuration."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:28
msgid "Receive (and store) consignment stock"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:30
msgid "With the feature enabled in Odoo, consignment stock can now be received into a warehouse. From the main :menuselection:`Inventory` dashboard, click into the :guilabel:`Receipts` section. Then, click :guilabel:`Create`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:35
msgid "Consignment stock is not actually purchased from the vendor; it is simply received and stored. Because of this, there are no quotations or purchase orders involved in receiving consignment stock. So, *every* receipt of consignment stock will start by creating manual receipts."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:39
msgid "Choose a vendor to enter in the :guilabel:`Receive From` field, and then choose the same vendor to enter in the :guilabel:`Assign Owner` field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:43
msgid "Since the products received from the vendor will be owned by the same vendor, the :guilabel:`Receive From` and :guilabel:`Assign Owner` fields must match."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:46
msgid "Once the vendor-related fields are set, enter products into the :guilabel:`Product` lines, and set the quantities to be received into the warehouse under the :guilabel:`Done` column. If the :guilabel:`Units of Measure` feature is enabled, the :abbr:`UoM (Units of Measure)` can be changed, as well. Once all the consignment stock has been received, :guilabel:`Validate` the receipt."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:-1
msgid "Matching vendor fields in consignment Receipt creation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:56
msgid "Sell and deliver consignment stock"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:58
msgid "Once consignment stock has been received into the warehouse, it can be sold the same as any other in-stock product that has the :guilabel:`Can Be Sold` option enabled on the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:61
msgid "To create a sales order, navigate to the :menuselection:`Sales` app, and from the :guilabel:`Quotations` overview, click :guilabel:`Create`. Next, choose a customer to enter into the :guilabel:`Customer` field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:66
msgid "The :guilabel:`Customer` *must* be different from the :guilabel:`Vendor` that supplied the consignment stock received (and stored) in the warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:69
msgid "Add the consignment product under the :guilabel:`Product` column in the order lines, set the :guilabel:`Quantity`, and fill out any other pertinent product details on the form. Once the quotation is complete, click :guilabel:`Confirm`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:-1
msgid "Sales order of consignment stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:77
msgid "Once the :abbr:`RFQ (Request for Quotation)` has been confirmed, it will become a sales order. From here, the products can be delivered by clicking on the :guilabel:`Delivery` smart button, and selecting :guilabel:`Validate` to validate the delivery."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:82
msgid "Traceability and reporting of consignment stock"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:84
msgid "Although consignment stock is owned by the vendor who supplied it, and not by the company storing it in their warehouse, consignment products will *still* appear in certain inventory reports."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:87
msgid "To find inventory reports, go to :menuselection:`Inventory --> Reporting`, and choose a report to view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:91
msgid "Since the consignee does not actually own consigment stock, these products are *not* reflected in the :guilabel:`Stock Valuation` report, and have no impact on the consignee's inventory valuation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:96
msgid "Product moves report"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:98
msgid "To view all information about on-hand stock moves, navigate to the the :guilabel:`Product Moves` dashboard by going to :menuselection:`Inventory --> Reporting --> Product Moves`. For consignment products, the information in this report is the same as any other product: the history of its product moves can be reviewed; the :guilabel:`Quantity Done` and :guilabel:`Reference` document are available; and its :guilabel:`Locations` are available, as well. The consignment stock will originate from :guilabel:`Partner Location/Vendors`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:106
msgid "To view a consignment product's moves by ownership, select the :guilabel:`Group By` filter, choose the :guilabel:`Add Custom Group` parameter, and then select :guilabel:`From Owner`, and :guilabel:`Apply` to finish."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:-1
msgid "Consignment stock moves history."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:115
msgid "To see forecasted units of consignment stock, go to :menuselection:`Inventory --> Reporting --> Forecasted Inventory`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:119
msgid "Stock on hand report"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/misc/owned_stock.rst:121
msgid "View the :guilabel:`Stock On Hand` dashboard by navigating to :menuselection:`Inventory --> Reporting --> Inventory Report`. From this report, the :guilabel:`Locations` of all stock on-hand are displayed, in addition to the quantities per location. For consigment products, the :guilabel:`Owner` column will be populated with the owner of those products, or the original vendor who supplied the products in the first place."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning.rst:5
msgid "Planning"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:3
msgid "How is the Scheduled Delivery Date Computed"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:5
msgid "Providing the best possible service to customers is vital for business. It implies planning every move: manufacturing orders, deliveries, receptions, and so on. To do so, you need to configure lead time properly and coordinate scheduled dates."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:9
msgid "By using lead times, Odoo provides end dates, the **Commitment Date**, for each process. On a sales order, for example, this is the date your customer will get the products he ordered."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:13
msgid "From the customers’ side, the commitment date is important because it gives them an estimation of when they will receive their products. The dates take all other lead times, such as manufacturing, delivery, or suppliers, into account."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:19
msgid "How are Lead Times Calculated?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:27
msgid "As said above, there are several types of lead times. Each is calculated based on various indicators. Before going through the configuration, here is a brief summary of how lead times are calculated and what they are:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:32
msgid "**Customer Lead Time**: the customer lead time is the default duration you set. Therefore, the expected date on the sales orders is today + customer lead time."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:36
msgid "**Sales Security Lead Time**: the purpose is to be ready shipping that many days before the actual commitment taken with the customer. Then, the default scheduled date on the delivery order is **SO delivery date - Security Lead Time**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:41
msgid "**Purchase Security Lead Time**: additional time to mitigate the risk of a vendor delay. The receipt will be scheduled that many days earlier to cope with unexpected vendor delays. In case of a *Replenish to Order*, the **Delivery order scheduled date - Security lead time** for purchase will be the default *Receipt* scheduled date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:48
msgid "**Purchase Delivery Lead Time**: this is the expected time between a PO being confirmed and the receipt of the ordered products. The **Receipt scheduled date - Vendor delivery date** is the default *PO Order By* date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:53
msgid "**Days to Purchase**: number of days the purchasing department takes to validate a PO. If another RFQ to the same vendor is already opened, Odoo adds the line to the RFQ instead of creating a new one. Then, the specific date is set on the line."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:58
msgid "**Manufacturing Lead Time**: this is the expected time it takes to manufacture a product. This lead time is independent of the quantity to produce and does not take the routing time into account."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:63
msgid "**Manufacturing Security Lead Time**: additional time to mitigate the risk of a manufacturing delay. In case of a *Replenish to Order*, the **Delivery Order scheduled date - Manufacturing Lead Time - Manufacturing Security Lead Time** is the default *Manufacturing Order* planned date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:70
msgid "Sales - Lead Times"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:72
msgid "In the *Sales* app, there is an option called *Delivery Date*. It allows seeing an additional field on the sales orders, *Expected Date*. This one is automatically computed based on the different lead times previously configured."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the delivery settings to have the delivery lead time taken into account"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:81
msgid "If the set up *Delivery Date* is earlier than the the *Expected Date*, a warning message is displayed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the error that occurs when trying to choose an earlier date than what calculated\n"
"by Odoo"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:89
msgid "But, for all of this properly working, it is still necessary to configure all the lead times that could occur."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:93
msgid "Customer Lead Time"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:95
msgid "The *Customer Lead Time* is the time needed for your product to go from your warehouse to the customer place. It can be configured on any product by going to :menuselection:`Sales --> Products --> Products`. There, open your product form, go in the inventory tab, and add your *Customer Lead Time*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the customer lead time configuration from the product form"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:105
msgid "For example, product B is ordered on the 2nd of April but the *Customer Lead Time* is two days. In that case, the expected delivery date is the 4th of April."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:110
#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:182
#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:219
msgid "Security Lead Time"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:112
msgid "In sales, *Security Lead Time* corresponds to backup days to ensure you are able to deliver the products in time. The purpose is to be ready shipping earlier in order to arrive on time."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:116
msgid "The number of security days is subtracted from the calculation to compute a scheduled date earlier than the one promised to the customer."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:119
msgid "To set this up, go to :menuselection:`Inventory --> Configuration --> Settings` and enable the feature *Security Lead Time for Sales*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the security lead time for sales configuration from the sales settings"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:126
msgid "For example, product B is scheduled to be delivered on the 6th of April but the *Security Lead Time* is one day. In that case, the scheduled date for the delivery order is the 5th of April."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:131
msgid "Deliver several products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:133
msgid "In many cases, customers order several products at the same time. Those can have different lead times but still need to be delivered, at once or separately. Fortunately, Odoo can help you handle these cases easily."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:137
msgid "From the *Other Info* tab of your *Sale Order*, you can choose between *When all products are ready* and *As soon as possible*. The first one is to deliver products at once, while the second is to deliver them separately."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:142
msgid "For example, products A and B are ordered at the same time. A has 8 lead days and B has 5. With the first option, the *Expected Date* is calculated based on the product with the most lead days, here A. If the order is confirmed on the 2nd of April, then the *Expected Date* is on the 10th of April."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:148
msgid "With the second option, the *Expected Date* is calculated based on the product with the least customer lead days. In this example, B is the product with the least lead days. So, the *Expected Date* is on the 7th of April."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:154
msgid "Purchase - Lead Times"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:157
msgid "Supplier Lead Time"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:159
msgid "The *Supplier Lead Time* is the time needed for a product you purchased to be delivered. To configure it, open a product from :menuselection:`Purchase --> Products --> Products` and add a vendor under the *Purchase* tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the way to add vendors to products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:168
msgid "By clicking on *Add a line*, a new window is displayed. You can specify the *Delivery Lead Time* there. If done so, the delivery day for every purchase of that product is now equal to *Date of the Purchase Order + Delivery Lead Time*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the delivery lead time configuration from a vendor form"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:178
msgid "It is possible to add different vendors and, thus, different lead times depending on the vendor."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:184
msgid "The *Security Lead Time* for purchase follows the same logic as the one for *Sales*, except that you are the customer. Then, it is the margin of error for your supplier to deliver your order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:188
msgid "To set up *Security Lead Time* for purchase, go to :menuselection:`Inventory --> Configuration --> Settings` and enable the feature."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the security lead time for purchase from the inventory settings"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:196
msgid "Doing so, every time the system generates purchase orders, those are scheduled that many days earlier to cope with unexpected vendor delays."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:200
msgid "Manufacturing - Lead Times"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:203
msgid "Manufacturing Lead Time"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:205
msgid "The *Manufacturing Lead Time* is the time needed to manufacture the product. To specify it, open the *Inventory* tab of your product form and add the number of days the manufacturing takes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the manufacturing lead time configuration from the product form"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:213
msgid "When working with *Manufacturing Lead Times*, the *Deadline Start* of the *MO* is **Commitment Date - Manufacturing Lead Time**. For example, the MO’s deadline start date for an order having a commitment date on the 10th of July is June 27th."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:221
msgid "The *Security Lead Time* for manufacturing allows generating manufacturing orders earlier to cope with the risk of manufacturing delays."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:225
msgid "To enable it, go to :menuselection:`Manufacturing --> Configuration --> Settings` and tick *Security Lead Time*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:-1
msgid "View of the security lead time for manufacturing from the manufacturing app settings"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:232
msgid "For example, a customer orders B with a delivery date scheduled on the 20th of June. The *Manufacturing Lead Time* is 14 days and the *Security Lead Time* is 3 days, so the manufacturing of B needs to start at the latest on the 3rd of June, which is the MO’s planned date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:238
msgid "Global Example"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:240
msgid "Here is a configuration:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:242
msgid "1 day of security lead time for Sales"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:243
msgid "2 days of security lead time for Manufacturing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:244
msgid "3 days of manufacturing lead time"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:245
msgid "1 day of security lead time for Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:246
msgid "4 days of supplier lead time"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:248
msgid "Let’s say that a customer orders B on the 1st of September and the delivery date is planned to be within 20 days (September 20th). In such a scenario, here is when all the various steps are triggered."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:252
msgid "**September 1st**: the sales order is created"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:253
msgid "**September 10th**: the deadline to order components from the supplier because of the manufacturing process (4 days of supplier lead time)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:256
msgid "**September 13th**: the reception of the product from the supplier (1 day of security lead time for Purchase)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:258
msgid "**September 14th**: the deadline start date for the manufacturing (19th - 3 days of manufacturing lead time - 2 days of security lead time for Manufacturing)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/planning/scheduled_dates.rst:261
msgid "**September 19th**: the expected date on the delivery order form (1 day of security lead time for sales)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products.rst:5
#: ../../content/applications/inventory_and_mrp/purchase/products.rst:5
msgid "Products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:3
msgid "Replenish on order (MTO)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:9
msgid "*Replenish on order*, also known as *MTO* (make to order), is a replenishment strategy that creates a draft order for a product every time a sales order is created for it. For products that are purchased from a vendor, a request for quotation (RFQ) is created, while a sales order for a product manufactured in-house triggers the creation of a manufacturing order. The creation of a |RFQ| or manufacturing order occurs every time a sales order is created, regardless of the current stock level of the product being ordered."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:17
msgid "Unarchive the Replenish on Order (MTO) route"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:19
msgid "By default, Odoo sets the |MTO| route as *archived*. This is because |MTO| is a somewhat niche workflow that is only used by certain companies. However, it is easy to unarchive the route in just a few simple steps."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:23
msgid "To do so, begin by navigating to :menuselection:`Inventory --> Configuration --> Routes`. On the :guilabel:`Routes` page, click the :guilabel:`Filters` button and select the :guilabel:`Archived` option. This shows all routes that are currently archived."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:-1
msgid "The archived filter on the Routes page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:31
msgid "Enable the checkbox next to :guilabel:`Replenish on Order (MTO)`, then click the :guilabel:`Action` button to reveal a drop-down menu. From the drop-down menu, select :guilabel:`Unarchive`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:-1
msgid "The unarchive action on the Routes page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:38
msgid "Finally, remove the :guilabel:`Archived` filter from the :guilabel:`Search...` bar. The :guilabel:`Routes` page will now show all available routes, including :guilabel:`Replenish on Order (MTO)`, which is now selectable on the inventory tab of each product page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:-1
msgid "The MTO route appears on the Routes page after unarchiving it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:47
msgid "Configure a product to use the MTO route"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:49
msgid "With the |MTO| route unarchived, products can now be properly configured to use replenish on order. To do so, begin by going to :menuselection:`Inventory --> Products --> Products`, then select an existing product, or click :guilabel:`Create` to configure a new one."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:53
msgid "On the product page, select the :guilabel:`Inventory` tab and enable the :guilabel:`Replenish on Order (MTO)` route in the :guilabel:`Routes` section, along with one other route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:57
msgid "The :guilabel:`Replenish on Order (MTO)` route **does not** work unless another route is selected as well. This is because Odoo needs to know how to replenish the product when an order is placed for it (buy it, manufacture it, etc.)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:-1
msgid "Select the MTO route and a second route on the Inventory tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:65
msgid "If the product is purchased from a vendor to fulfill sales orders, enable the :guilabel:`Can be Purchased` checkbox under the product name. Doing so makes the :guilabel:`Purchase` tab appear alongside the other settings tabs below."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:69
msgid "Select the :guilabel:`Purchase` tab and specify a :guilabel:`Vendor` and the :guilabel:`Price` they sell the product for."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:-1
msgid "Enable \"Can be Purchased\" and specify a vendor."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:76
msgid "If the product is manufactured, make sure that it has a bill of materials (BOM) configured for it. To do so, click the :guilabel:`Bill of Materials` smart button at the top of the screen, then click :guilabel:`Create` on the :guilabel:`Bill of Materials` page to configure a new |BOM| for the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:81
msgid "On the blank |BOM| form, add the components used to manufacture the product on the :guilabel:`Components` tab, along with the operations required for the manufacturing workflow on the :guilabel:`Operations` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:85
msgid "Finally, click :guilabel:`Save` to save the |BOM|."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:88
msgid "Fulfill a sales order using the MTO route"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:90
msgid "After configuring a product to use the |MTO| route, a replenishment order is created for it every time a sales order including the product is confirmed. The type of order created depends on the second route selected in addition to |MTO|."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:94
msgid "For example, if *Buy* was the second route selected, then a purchase order is created upon confirmation of a sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:98
msgid "When the |MTO| route is enabled for a product, a replenishment order is always created upon confirmation of a sales order. This is the case even if there is enough stock of the product on-hand to fulfill the sales order, without buying or manufacturing additional units of it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:102
msgid "While the |MTO| route can be used in unison with a variety of other routes, the *Buy* route is used as the example for this workflow. Begin by navigating to the :menuselection:`Sales` app, then click :guilabel:`Create`, which opens a blank quotation form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:106
msgid "On the blank quotation form, add a :guilabel:`Customer`, then click :guilabel:`Add a product` under the :guilabel:`Order Lines` tab, and enter a product that has been configured to use the *MTO* and *Buy* routes. Click :guilabel:`Confirm` and the quotation is turned into a sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:110
msgid "A :guilabel:`Purchase` smart button now appears in the top-right corner of the sales order. Clicking it opens the |RFQ| associated with the sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:113
msgid "Click :guilabel:`Confirm Order` to confirm the |RFQ|, and turn it into a purchase order. A green :guilabel:`Receive Products` button now appears at the top of the purchase order. Once the products are received, click :guilabel:`Receive Products` to register them into inventory."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:117
msgid "Return to the sales order by clicking the :guilabel:`SO` breadcrumb, or by navigating to :menuselection:`Sales --> Orders --> Orders`, and selecting the sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/mto.rst:120
msgid "Finally, click the :guilabel:`Delivery` smart button in the top-right of the order to be taken to the delivery order. Once the products have been shipped to the customer, click :guilabel:`Validate` to confirm the delivery."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:3
msgid "Reordering rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:5
msgid "Reordering rules are used to keep forecasted stock levels above a certain threshold without exceeding a specified upper limit. This is accomplished by specifying a minimum quantity that stock should not fall below and a maximum quantity that stock should not exceed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:9
msgid "Reordering rules can be configured for each product based on the route used to replenish it. If a product uses the *Buy* route, then a Request for Quotation (RFQ) is created when the reordering rule is triggered. If a product uses the *Manufacture* route, then a Manufacturing Order (MO) is created instead. This is the case regardless of the selected replenishment route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:15
msgid "Configure products for reordering rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:17
msgid "In order to use reordering rules for a product, it must first be correctly configured. Begin by navigating to :guilabel:`Inventory --> Products --> Products`, then select an existing product, or create a new one by clicking :guilabel:`Create`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:21
msgid "First, on the :guilabel:`General Information` tab, make sure that the :guilabel:`Product Type` is set to :guilabel:`Storable Product`. This is necessary because Odoo only tracks stock quantities for storable products, and this number is used to trigger reordering rules."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:-1
msgid "Set the Product Type as Storable."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:29
msgid "Next, click on the :guilabel:`Inventory` tab and select one or more routes from the :guilabel:`Routes` section. Doing so tells Odoo which route to use to replenish the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:-1
msgid "Select one or more routes on the Inventory tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:36
msgid "If the product is reordered using the :guilabel:`Buy` route, confirm that the :guilabel:`Can be Purchased` checkbox is enabled under the product name. This makes the :guilabel:`Purchase` tab appear. Click on the :guilabel:`Purchase` tab, and specify at least one vendor, and the price that they sell the product for, so that Odoo knows which company the product should be purchased from."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:-1
msgid "Specify a vendor and price on the Purchase tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:45
msgid "If the product is replenished using the :guilabel:`Manufacture` route, it needs to have at least one Bill of Materials (BoM) associated with it. This is necessary because Odoo only creates manufacturing orders for products with a :abbr:`BoM (Bill of Materials)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:49
msgid "If a :abbr:`BoM (Bill of Materials)` does not already exist for the product, select the :guilabel:`Bill of Materials` smart button at the top of the product form, then click :guilabel:`Create` to configure a new :abbr:`BoM (Bill of Materials)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:-1
msgid "The Bill of Materials smart button on a product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:58
msgid "Create new reordering rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:60
msgid "To create a new reordering rule, navigate to :menuselection:`Inventory --> Configuration --> Reordering Rules`, then click :guilabel:`Create`, and fill out the new line as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:63
msgid ":guilabel:`Product`: The product that is replenished by the rule."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:64
msgid ":guilabel:`Location`: The location where the product is stored."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:65
msgid ":guilabel:`Min Quantity`: The minimum quantity that can be forecasted without the rule being triggered. When forecasted stock falls below this number, a replenishment order for the product is created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:68
msgid ":guilabel:`Max Quantity`: The maximum quantity that stock is replenished up to."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:69
msgid ":guilabel:`Multiple Quantity`: Specify if the product should be replenished in batches of a certain quantity (e.g., a product could be replenished in batches of 20)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:71
msgid ":guilabel:`UoM`: The unit of measure used for reordering the product. This value can simply be `Units` or a specific unit of measurement for weight, length, etc."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:-1
msgid "The form for creating a new reordering rule."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:79
msgid "Reordering rules can also be created from each product form. To do so, navigate to :menuselection:`Inventory --> Products --> Products`, then select a product. Click on :menuselection:`Reordering Rules --> Create`, then fill out the new line as detailed above."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:83
msgid "Once a reordering rule has been created for a product, if its forecasted quantity is below the rule's minimum quantity when the scheduler runs, a replenishment order for the product is automatically generated. By default, the scheduler runs once each day."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:88
msgid "To manually trigger a reordering rule before the scheduler runs, select :menuselection:`Inventory --> Operations --> Run Scheduler`. Then, select the green :guilabel:`Run Scheduler` button on the pop-up that appears. Be aware that this also triggers any other scheduled actions."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:92
msgid "If the :guilabel:`Buy` route is selected, then an :abbr:`RFQ (Request for Quotation)` is generated. To view and manage :abbr:`RFQs (Requests for Quotation)`, navigate to :menuselection:`Purchase --> Orders --> Requests for Quotation`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:96
msgid "If the :guilabel:`Manufacture` route is selected, then an :abbr:`MO (Manufacturing Order)` is generated. To view and manage :abbr:`MOs (Manufacturing Orders)`, navigate to :menuselection:`Manufacturing --> Operations --> Manufacturing Orders`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:101
msgid "Set a preferred route for reordering"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:103
msgid "Odoo allows for multiple routes to be selected under the :guilabel:`Inventory` tab on each product form. For instance, it is possible to select both :guilabel:`Buy` and :guilabel:`Manufacture`, thus enabling the functionality of both routes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:107
msgid "Odoo also enables users to set a preferred route for a product's reordering rule. This is the route that the rule defaults to if multiple are selected. To select a preferred route, begin by navigating to :menuselection:`Inventory --> Configuration --> Reordering Rules`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:111
msgid "By default, the :guilabel:`Preferred Route` column is hidden on the :guilabel:`Reordering Rules` page. Enable it by selecting the :guilabel:`⋮ (three-dot)` option button on the right side of the page and checking the :guilabel:`Preferred Route` checkbox. Doing so reveals the :guilabel:`Preferred Route` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:116
msgid "Click inside of the column on the row of a reordering rule and a drop-down menu shows all available routes for that rule. Select one to set it as the preferred route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:-1
msgid "Select a preferred route from the drop-down."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/reordering_rules.rst:124
msgid "If multiple routes are enabled for a product but no preferred route is set for its reordering rule, the product is reordered using the selected route that is listed first on the :guilabel:`Inventory` tab of the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:3
msgid "Selecting a replenishment strategy"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:10
msgid "In Odoo, there are two strategies for automatically replenishing inventory: *reordering rules* and the *make to order (MTO)* route. Although these strategies differ slightly, they both have similar consequences: triggering the automatic creation of a |PO| or |MO|. The choice of which strategy to use depends on the business's manufacturing and delivery processes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:16
msgid "Terminology"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:19
#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:54
msgid "Replenishment report and reordering rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:21
msgid "The replenishment report is a list of all products that have a negative forecast quantity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:23
msgid "*Reordering rules* are used to ensure there's always a minimum amount of a product in-stock, in order to manufacture products and/or fulfill sales orders. When the stock level of a product reaches its minimum, Odoo automatically generates a purchase order with the quantity needed to reach the maximum stock level."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:28
msgid "Reordering rules can be created and managed in the replenishment report, or from the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:31
msgid "Make to order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:33
msgid "*Make to order (MTO)* is a procurement route that creates a draft purchase order (or manufacturing order) each time a sales order is confirmed, **regardless of the current stock level**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:36
msgid "Unlike products replenished using reordering rules, Odoo automatically links the sales order to the |PO| or |MO| generated by the |MTO| route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:39
msgid "Another difference between reordering rules and |MTO| is, with |MTO|, Odoo generates a draft |PO| or |MO| immediately after the |SO| is confirmed. With reordering rules, Odoo generates a draft |PO| or |MO| when the product's forecasted stock falls below the set minimum quantity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:43
msgid "In addition, Odoo automatically adds quantities to the |PO| or |MO| as the forecast changes, so long as the |PO| or |MO| is not confirmed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:46
msgid "The |MTO| route is the best replenishment strategy for products that are customized, and/or for products that have no stock kept on-hand."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:56
msgid "To access the replenishment report, go to :menuselection:`Inventory app --> Operations --> Replenishment.`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:59
msgid "By default, the replenishment report dashboard shows every product that needs to be manually reordered. If there is no specific rule for a product, Odoo assumes the :guilabel:`Min Quantity` and :guilabel:`Max Quantity` stock are both `0.00`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:64
msgid "For products that don't have a set reordering rule, Odoo calculates the forecast based on confirmed sales orders, deliveries, and receipts. For products that have a set reordering rule, Odoo calculates the forecast normally, but also takes into account the purchase/manufacturing lead time and security lead time."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:70
msgid "Before creating a new reordering rule, make sure the product has a *vendor* or a *bill of materials* configured on the product form. To check this, go to :menuselection:`Inventory app --> Products --> Products`, and select the product to open its product form. The vendor, if configured, is listed in the :guilabel:`Purchase` tab, and the bill on materials, if configured, is found in the :guilabel:`Bill of Materials` smart button at the top of the form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:76
msgid "The :guilabel:`Product Type`, located in the :guilabel:`General Information` tab on the product form, **must** be set to :guilabel:`Storable Product`. By definition, a consumable product does not have its inventory levels tracked, so Odoo cannot account for a consumable product in the replenishment report."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:-1
msgid "Replenishment report listing all items needing to be purchased to meet current needs."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:85
msgid "To create a new reordering rule from the replenishment report, go to :menuselection:`Inventory app --> Operations --> Replenishment`, click :guilabel:`Create`, and select the desired product from the drop-down menu in the :guilabel:`Product` column. If necessary, a :guilabel:`Min Quantity` and a :guilabel:`Max Quantity` can be configured in the corresponding columns on the :guilabel:`Replenishment` report page, as well."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:91
msgid "To create a new reordering rule from the product form, go to :menuselection:`Inventory app --> Products --> Products`, and select a product to open its product form. Click the :guilabel:`Reordering Rules` smart button, click :guilabel:`Create`, and fill out the fields."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:96
msgid "Replenishment report fields"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:98
msgid "The following fields are on the :guilabel:`Replenishment` report. If any of these fields are not visible, click the :guilabel:`⋮ (additional options)` icon on the far right side of the report, then click the checkbox next to a field to make it visible."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:102
msgid ":guilabel:`Product`: the product that requires a replenishment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:103
msgid ":guilabel:`Location`: the specific location where the product is stored."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:104
msgid ":guilabel:`Warehouse`: the warehouse where the product is stored."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:105
msgid ":guilabel:`On Hand`: the amount of product currently available."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:106
msgid ":guilabel:`Forecast`: the amount of product available after all current orders (sales, manufacturing, purchase, etc.) are taken into account."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:108
msgid ":guilabel:`Preferred Route`: how the product is procured, either :guilabel:`Buy`, :guilabel:`Manufactured`, :guilabel:`Dropship`, etc."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:110
msgid ":guilabel:`Vendor`: the company from which the product is acquired."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:111
msgid ":guilabel:`Bill of Materials`: the bill of materials for the product (if one is configured)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:112
msgid ":guilabel:`Trigger`: how the replenishment is created, either :guilabel:`Auto` (automatically, once the :guilabel:`On Hand` quantity goes below the :guilabel:`Min Quantity`) or :guilabel:`Manual` (only when the replenishment is requested)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:115
msgid ":guilabel:`Procurement Group`: the reference number for how the product is being acquired, such as a sales order, purchase order, or manufacturing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:117
msgid ":guilabel:`Min Quantity`: the minimum amount of product that should be available. When inventory levels goes below this number, the replenishment is triggered."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:119
msgid ":guilabel:`Max Quantity`: the amount of product that should be available after replenishing the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:121
msgid ":guilabel:`Multiple Quantity`: if the product should be ordered in specific quantities, enter the number that should be ordered. For example, if the :guilabel:`Multiple Quantity` is set to `5`, and only 3 are needed, 5 products are replenished."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:124
msgid ":guilabel:`To Order`: the amount of product that is currently needed, and will be ordered, if the :guilabel:`Order Once` or :guilabel:`Automate Orders` button is clicked."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:126
msgid ":guilabel:`UoM`: the unit of measure used to acquire the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:127
msgid ":guilabel:`Company`: the company for which the product is acquired."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:129
msgid "By default, the quantity in the :guilabel:`To Order` field is the quantity required to reach the set :guilabel:`Max Quantity`. However, the :guilabel:`To Order` quantity can be adjusted by clicking on the field and, changing the value, and clicking :guilabel:`Save`. To replenish a product manually, click :guilabel:`Order Once`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:134
msgid "To automate a replenishment from the :guilabel:`Replenishment` page, click :guilabel:`Automate Orders` on the right-side of the line, represented by a :guilabel:`🔄 (circular arrow)` icon."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:137
msgid "When this button is clicked, Odoo will automatically generate a draft |PO|/|MO| every time the forecasted stock level falls below the set :guilabel:`Min Quantity` of the reordering rule."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:140
msgid "On the :guilabel:`Replenishment` page, a reordering rule or manual replenishment can be temporarily deactivated for a given period, by clicking the :guilabel:`🔕 (snooze)` icon on the far-right of the line."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:-1
msgid "Snooze options to turn off notifications for reordering for a period of time."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:148
msgid "A |PO| or |MO| created by a manual replenishment has a :guilabel:`Replenishment Report` as the source document. A |PO| or |MO| created by an automated reordering rule has the |SO| reference number(s) that triggered the rule as the source document."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:-1
msgid "Quote request list shows which quotes are directly from the replenishment report."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:157
msgid "Make to order (MTO) route"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:159
msgid "Since the |MTO| route is recommended for customized products, the route is hidden by default."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:168
msgid "To activate the |MTO| route in Odoo:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:162
msgid "Go to :menuselection:`Inventory app --> Configuration  --> Settings`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:163
msgid "Activate the :guilabel:`Multi-Step Routes` setting, located under the :guilabel:`Warehouse` section, and click :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:165
msgid "Then, go to :menuselection:`Inventory app --> Configuration  --> Routes`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:166
msgid "Click on :menuselection:`Filters --> Archived` to show archived routes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:167
msgid "Select the checkbox next to :guilabel:`Replenish on Order (MTO)`, and click on :menuselection:`Action --> Unarchive`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:171
msgid "Activating the :guilabel:`Multi-Step Routes` setting also activates :guilabel:`Storage Locations`. If these features aren't applicable to the warehouse, disable these settings after unarchiving the |MTO| route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:175
msgid "To set a product's procurement route to |MTO|, go to :menuselection:`Inventory app --> Products --> Products`, click on the desired product to open its product form, and click :guilabel:`Edit`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:178
msgid "Then, click the :guilabel:`Inventory` tab, and in the :guilabel:`Routes` section of options, select :guilabel:`Replenish on Order (MTO)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:181
msgid "For products purchased directly from a vendor, make sure the :guilabel:`Buy` route is selected, in addition to the :guilabel:`Replenish on Order (MTO)` route. Also, make sure a vendor is configured in the :guilabel:`Purchase` tab of the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:185
msgid "For products manufactured in-house, make sure the :guilabel:`Manufacture` route is selected, in addition to the :guilabel:`Replenish on Order (MTO)` route. Also, make sure a bill of materials is configured for the product, which is accessible via the :guilabel:`Bill of Materials` smart button on the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:190
msgid "Finally, when all configurations are complete, click :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:193
msgid "The |MTO| route cannot be selected alone. |MTO| **only** works if the :guilabel:`Manufacture` or :guilabel:`Buy` route is also selected."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/strategies.rst:-1
msgid "Replenish on Order selected on the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:3
msgid "Use Different Units of Measure"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:7
msgid "In some cases, handling products in different units of measure is necessary. For example, if you buy products in a country where the metric system is of application and sell in a country where the imperial system is used, you will need to convert the units. Another common use case is buying products in bigger packs to your supplier and selling them in units to your customers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:14
msgid "You can set up Odoo to work with different units of measure for one product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:20
msgid "In the *Inventory* application, go to :menuselection:`Configuration --> Settings`. In the *Products* section, activate *Units of Measure*, then *Save*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:27
msgid "Create New Units of Measure"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:29
msgid "In the *Inventory* application go to :menuselection:`Configuration --> UoM`. There, hit *Create*. As an example, we will create a Box of 6 units that we will use for the Egg product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:36
msgid "The category is important for unit conversion, you will be able to convert products from one unit to another only if those units belong to the same category. The box of 6 is 6 times bigger than the reference unit of measure for the category which is “Units” here."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:45
msgid "Specify Units of Measure on your Products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:47
msgid "In the :menuselection:`Inventory application --> Master Data --> Products`, open the product which you would like to change the purchase/sale unit of measure, and click on *Edit*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:51
msgid "In the *General Information* tab, you can select the *Unit of Measure* in which the product will be sold, which is also the unit in which internal transfers will take place. You can also select the *Purchase Unit of Measure*, which is the unit in which you purchase the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:61
msgid "Transfer from One Unit to Another"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:64
msgid "Buy in the Purchase UoM"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:66
msgid "In the *Purchase* application, *Create* a new request for quotation in which you include the product with the different *Units of Measure* and *Confirm* it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:73
msgid "On the automatically generated purchase orders, the UoM used is the Box of 6, meaning the Purchase UoM. You have of course the possibility to manually modify the UoM if necessary. When you enter the *Receipt* which is linked to the purchase order, you can observe that the 10 boxes of 6 units have been converted in 60 units. Indeed, the stock is managed in units."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:84
msgid "Replenishment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:86
msgid "When doing a replenishment via the *Replenish* button on the product form, you have the possibility to use a different unit of measure."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:96
msgid "Sell in bigger UoM"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:98
msgid "You can choose the unit of measure on the sale order document and decide to sell the eggs by the dozen. When doing so, the price is automatically computed from Units UoM to adapt to the selected *UoM*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/uom.rst:105
msgid "In the delivery order, the *UoM* used in the sale order is converted to the *UoM* used for stock management, in our use case, the Units."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:3
msgid "Units of measure, packages, and packagings"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:5
msgid "In Odoo, there are a variety of ways to specify the amount of products being bought, stocked, and sold. *Units of measure*, *packages*, and *packagings* are all available to streamline inventory flows, allowing for a variety of configurations for products as they enter and leave the warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:10
msgid "Units of measure"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:12
msgid "A *unit of measure (UoM)* refers to any of the different standards used to measure and handle a quanitifiable amount of products, such a units, weight, time, or size. Different :abbr:`UoMs (Units of Measure)` for weight, for example, can be kilos, pounds, ounces, grams, and so on."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:16
msgid "In Odoo, stock management and purchasing from suppliers are streamlined by specifying different :abbr:`UoMs (Units of Measure)` for both buying and selling products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:-1
msgid "Specify unit of measure for selling a product vs purchasing."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:23
msgid "Once a product has a default :guilabel:`Unit of Measure` and :guilabel:`Purchase Unit of Measure` set on the product form, Odoo automatically converts the different units in the product's purchase/sales orders and the corresponding delivery orders/receipts."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:27
msgid "The only condition is that all of the units have to be in the *same category* (unit, weight, volume, length, etc.)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:31
msgid "On the product form for `Rope`, the following fields are set as:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:33
msgid ":guilabel:`Unit of Measure` in `ft` (feet), and"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:34
msgid ":guilabel:`Purchase Unit of Measure` in `cm` (centimeters)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:36
msgid "Because the vendor sells rope in `cm`, the purchase :guilabel:`UoM` is used to represent the quantity on the :abbr:`PO (Purchase Order)`, which is also in centimeters."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:0
msgid "Display purchase order for the product, rope, in centimeters."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:43
msgid "After confirming the :abbr:`PO (Purchase Order)`, the quantity of product (found under the now visible :guilabel:`Demand` column) is converted from the purchase :abbr:`UoM (Unit of Measure)` to the :guilabel:`Unit of Measure`. Then, when the product is received by clicking the :guilabel:`Validate` button, the quantity in :guilabel:`Done` is automatically adjusted to match the :guilabel:`Demand` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:50
msgid "On the *receipt* for `Rope`, the quantities are automatically converted from `500 cm` that was requested on the purchase order, to `16.40 ft` to match the internal/stock :guilabel:`Unit of Measure` value."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:0
msgid "Rope quantity is converted from cm to ft during warehouse reception."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:59
msgid ":ref:`Use Different Units of Measure <inventory/management/products/units_of_measure>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:62
msgid "Packages"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:64
msgid "Packages are a physical container that holds one or several products from a picking, typically used for outgoing deliveries or internal transfers. Packages can be a reusable or disposable (shipping) box, and are **not** specific to a product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:68
msgid "Reusable boxes temporarily hold products during a picking to be brought to either a packing or shipping area. Disposable boxes are the actual shipping containers (e.g. cardboard boxes, envelopes, shipping bags, etc). These are used to ship the products out to customers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:72
msgid "Multiple items in a sales order (SO) can be separated into different packages to accommodate the products. For example, an :abbr:`SO (Sales Order)` that has 20 boxes of pencils and 4 boxes of erasers can be separated into two separate packages, each containing 10 boxes of pencils and 2 boxes of erasers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:78
msgid "Products do *not* have to be divided equally. Products can be divided into as many packages that are needed to accommodate the :abbr:`SO (Sales Order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:81
msgid "In Odoo, the quantity of products in each package needs to be recorded, so there is a full history for each product, including which package each item is shipped out in."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:84
msgid "To use this method, ensure the :guilabel:`Packages` option is enabled, by navigating to :menuselection:`Inventory app --> Configuration --> Settings --> Operations`. Click the :guilabel:`Packages` check box, and then :guilabel:`Save` to activate the feature."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:88
msgid "On a delivery order, assign which package to use by clicking on the :guilabel:`≣ (Detailed Operations)` icon to the right of each product in the :guilabel:`Operations` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:-1
msgid "Find detailed operations icon to the right on the product line."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:95
msgid "Clicking the :guilabel:`≣ (Detailed Operations)` icon of a product reveals a pop-up window. In this window, the :guilabel:`Product` name, :guilabel:`Demand`, and :guilabel:`Quantity Done` are clearly displayed above the customizable product line."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:99
msgid "Here, the warehouse location the product is coming from can be modified, in addition to the :guilabel:`Source Package` and :guilabel:`Destination Package`, which represents what package(s) the product(s) will be packaged into."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:103
msgid "Click :guilabel:`Add a line` to include each additional package used. Enter the desired amount in the :guilabel:`Done` field to specify the amount of products that will go into the :guilabel:`Destination Package`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:108
msgid "Multiple packages in a single delivery"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:110
msgid "Although a :abbr:`DO (Delivery Order)` is typically associated with a single package, orders can be split by clicking the :guilabel:`≣ (Detailed Operations)` icon next to the products on an :abbr:`SO (Sales Order)` line. This opens the :guilabel:`Detailed Operations` window with an editable table to specify which products are intended for which package."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:116
msgid "To package 10 boxes of pencils with 2 boxes of erasers from the same :abbr:`SO (Sales Order)`, begin by navigating to the :abbr:`DO (Delivery Order)`. Then, select the :guilabel:`≣ (four horizontal lines)` icon to the right of the product, `Box of Pencils`. Clicking the icon opens the :guilabel:`Detailed Operations` window that is used to detail how products, like the 20 `Box of Pencils`, are packaged."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:122
msgid "Type in `10` under the :guilabel:`Done` field to package 10 products into the :guilabel:`Destination Package`. To specify the destination package, type the name of an existing package (such as `PACK0000006`) under the field, :guilabel:`Destination Package`. If the package does not exist, Odoo displays the :guilabel:`Create` button to create a new package. Click :guilabel:`Add a line` to assign the remaining products in another package, `PACK0000007`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:0
msgid "Detailed operations pop-up where the amount of product going in a pack can be specified."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:132
msgid "Select :guilabel:`Detailed Operations` on the product line for `Box of Erasers` and similarly set 2 :guilabel:`Done` products to `PACK0000006` and `PACK0000007` each."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:0
msgid "Put in pack button to match the done amount matches the demand."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:139
msgid "Once all the products for each line have been entered, click :guilabel:`Confirm` to return to the :abbr:`DO (Delivery Order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:142
msgid "The :guilabel:`Done` quantity on the :abbr:`DO (Delivery Order)` updates as products are selected for each package. When the :guilabel:`Done` amount matches the :guilabel:`Demand` amount, click the :guilabel:`Validate` button to complete the delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:147
msgid "The :guilabel:`Put In Pack` button is intended to quickly package all products in the :abbr:`DO (Delivery Order)` into one new package. The option to rename the package, or modify its contents, is available in the :guilabel:`Detailed Operations` pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:151
msgid "Clicking on the :guilabel:`Packages` smart button in the upper-right corner of the delivery order reveals a separate page, showing all the packages used in that :abbr:`DO (Delivery Order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:155
msgid "Packagings"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:157
msgid "*Packaging* is product specific, and refers to a disposable container that holds several units of a specific product. Unlike packages, packagings cannot be reusable, and each specific packaging must be defined on the individual product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:161
msgid "For example, different packages for cans of soda can be configured as a 6-pack, a 12-pack, or a case of 36. Each flavor of soda would need a `6`, `12`, and `36` can packaging configured on the individual product since packagings are product specific, not generic."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:166
msgid "Set up packagings"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:168
msgid "To use packagings, ensure the :guilabel:`Product Packagings` feature is enabled. To do that, navigate to :menuselection:`Inventory app --> Configuration --> Settings`. Then, under the :guilabel:`Products` heading, check the box next to :guilabel:`Product Packagings`, and click :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:173
msgid "In Odoo, product packagings are used on sales/purchase orders and inventory transfers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:175
msgid "Next, to create packagings, navigate to :menuselection:`Inventory app --> Products --> Products` and click on the desired product, then click :guilabel:`Edit` on the product page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:178
msgid "Under the :guilabel:`Inventory` tab, scroll down to the :guilabel:`Packaging` section, and click :guilabel:`Add a line`. Then, a pop-up window appears, in which the following information for each packaging should be entered:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:182
msgid ":guilabel:`Packaging`: name of packaging that appears on sales/purchase orders as a packaging option for the product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:184
msgid ":guilabel:`Contained quantity`: amount of product in the packaging"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:185
msgid ":guilabel:`Barcode`: identifier used with the :ref:`Barcode app <barcode/operations/intro>` to trace the packaging of a product during stock moves or pickings. Leave blank if not in use"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:187
msgid ":guilabel:`Company`: indicates the packaging is only available at the selected company. Leave blank to make the packaging available across all companies."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:191
msgid "Create a packaging type for 6 cans of the product, `Grape Soda`, by naming the :guilabel:`Packaging` to `6-pack` and setting the :guilabel:`Contained quantity` to `6` in the pop-up window that appears after clicking on :guilabel:`Add a line`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:0
msgid "Create 6-pack case for product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:199
msgid "When all the necessary information has been entered, either click :guilabel:`Save & Close` to save the packaging and return to the product detail form, or :guilabel:`Save & New` to save the packaging and create another one in a fresh pop-up window."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:204
msgid "View all product packagings in the :guilabel:`Inventory` tab of the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:0
msgid "Show packaging and contained quantities, specified on the product page form in the\n"
"Inventory tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:212
msgid "View all packagings"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:214
msgid "To view all packagings that have been created, go to :menuselection:`Inventory app --> Configuration --> Product Packagings`. Doing so reveals the :guilabel:`Product Packagings` page with a complete list of all packagings that have been created for all products. Create new packagings by clicking :guilabel:`Create`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:220
msgid "Two soda products, `Grape Soda` and `Diet Coke`, have three types of packaging configured. On the :guilabel:`Product Packagings` page, each product can sold as a `6-Pack` that contains 6 products, `12-Pack` of 12 products, or a `Case` of 32 products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:0
msgid "List of different packagings for products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:229
msgid "Apply packagings"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:231
msgid "When creating a sales order in the :menuselection:`Sales` app, specify the packagings that should be used for the product(s). The chosen packaging is displayed on the :abbr:`SO (Sales Order)` under the :guilabel:`Package` field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:236
msgid "18 cans of the product, `Grape Soda`, is packed using three 6-pack packagings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:0
msgid "Assign packagings on the Sales Order Line."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/products/usage.rst:243
msgid "Packaging can be used in conjunction with Odoo :ref:`Barcode <inventory/barcode/software>`. When receiving products from suppliers, scanning the packaging barcode automatically adds the number of units in the packaging to the internal count of the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting.rst:5
msgid "Valuation Methods"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:3
msgid "Landed costs: add additional costs to products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:5
msgid "When companies perform profit analyses, the data being examined must be as accurate as possible. To ensure that, **all** costs and expenses need to be accounted for, including the sum of expenses associated with shipping a product, which is also known as *landed costs*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:9
msgid "In Odoo, the landed costs feature allows the user to add and include additional costs on goods purchased. This includes the cost of freight, shipping, insurance, taxes, and more."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:13
msgid "Enable landed costs"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:15
msgid "To use landed costs, go to the :menuselection:`Inventory app --> Configuration --> Settings`, scroll down to the :guilabel:`Valuation` header, and click the checkbox beside :guilabel:`Landed Costs` to enable the feature."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:19
msgid "In this same section, a default accounting journal can also be set, in which entries involving landed costs will be recorded."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:22
msgid "To configure a default accounting journal, click the blank field next to :guilabel:`Default Journal` to reveal a drop-down menu, in which an existing journal can be selected. A new journal can be created from this drop-down, as well, by typing the desired name of a new journal in the blank field, and selecting either the :guilabel:`Create` or :guilabel:`Create and edit...` option."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:27
msgid "Clicking :guilabel:`Create` instantly creates the journal, which can be customized later. Clicking :guilabel:`Create and edit...` reveals a pop-up window on the :guilabel:`Settings` page, wherein the newly-created journal's details can be configured right away. When the configurations are complete, click :guilabel:`Save` on the pop-up window to complete the journal creation process, and return to the :guilabel:`Settings` page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:33
msgid "After the setting has been enabled, and if a journal has been created or applied, click the :guilabel:`Save` button to save all changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:-1
msgid "Enabled Landed Costs feature in Inventory settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:41
msgid "Landed costs can **only** be applied to products using a :abbr:`FIFO (First In First Out)` or :abbr:`AVCO (Average Cost)` costing method, **and** automated inventory valuation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:45
msgid "Create a landed cost product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:47
msgid "Landed costs can be manually entered each time a vendor bill is created. However, some products may always have the same types of charges applied to them, and thus, the vendor bills may always list the same landed costs. In this case, it's beneficial to create a specific landed cost product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:51
msgid "To create a landed cost product, first navigate to :menuselection:`Inventory app --> Products --> Products`, and click the :guilabel:`Create` button, which reveals a blank product template page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:54
msgid "On the blank product template form, fill out the necessary product information, and change the :guilabel:`Product Type` to :guilabel:`Service`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:57
msgid "Then, click the :guilabel:`Purchase` tab, and under the :guilabel:`Landed Costs` section, select the checkbox beside :guilabel:`Is a Landed Cost`. Once selected, a new field appears, in which a :guilabel:`Default Split Method` can be selected."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:61
msgid "Clicking the blank field beside :guilabel:`Default Split Method` reveals a drop-down menu. From this drop-down menu, select :guilabel:`Equal`, then click :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:65
msgid "When the :guilabel:`Default Split Method` is set to :guilabel:`Equal`, the landed cost will be split equally between all items included on the purchase order. If a :abbr:`PO (purchase order)` has just one item, the full amount will be applied to this item."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:-1
msgid "Landed costs and split method enabled on product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:74
msgid "Depending on the landed cost of each shipment, the price of a landed cost product can change with each order. Therefore, a price (or cost) should **not** be set on landed cost products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:78
msgid "Create a request for quotation"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:80
msgid "Before adding a specific landed cost on a product, a new :abbr:`RFQ (request for quotation)` for that product must be created. To do that, navigate to the :menuselection:`Purchase` app, and click :guilabel:`Create`. Doing so reveals a blank :abbr:`RFQ (request for quotation)` template form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:84
msgid "On the blank :abbr:`RFQ (request for quotation)` template form, add a :guilabel:`Vendor`, then add the desired product to the product lines (under the :guilabel:`Product` tab), by clicking :guilabel:`Add a line`, and selecting the desired product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:88
msgid "Then, fill out the remaining information on the new :abbr:`RFQ (request for quotation)`. Lastly, click :guilabel:`Confirm Order` to confirm the order. Once the quotation has been confirmed, it turns into a :abbr:`PO (purchase order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:92
msgid "Next, click :guilabel:`Receive Products` to receive the ordered products, then click :guilabel:`Validate`, which reveals a pop-up. In the pop-up, select :guilabel:`Apply` to set the :guilabel:`Done` quantities. Then, navigate back to the initial :abbr:`PO (purchase order)` (via the breadcrumbs)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:98
msgid "Create a vendor bill"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:100
msgid "Once goods have been received from the purchase order, a vendor bill can be created directly from the :abbr:`PO (purchase order)`. To do so, click :guilabel:`Create Bill`. Doing so reveals a vendor bill draft page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:104
msgid "On this vendor bill draft page, the information from the :abbr:`PO (purchase order)` is automatically populated. To add a landed cost to the bill, first click :guilabel:`Edit`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:107
msgid "Next, click :guilabel:`Add a line` in the :guilabel:`Invoice Lines` tab to add the newly-created landed cost product to the vendor bill. And, since this product was specifically created as a landed cost, the checkbox under the :guilabel:`Landed Costs` column is selected by default."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:-1
msgid "Landed cost added on product lines on vendor bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:116
msgid "Since no :guilabel:`Price` was set on the product template form for the landed cost product, it **must** be set manually on the vendor bill, in the :guilabel:`Price` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:120
msgid "Create landed costs"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:122
msgid "Once all the necessary information on the bill has been filled out, click :guilabel:`Create Landed Costs` at the top of the bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:125
msgid "Doing so reveals a separate page, wherein the necessary landed cost information is entered. From this page, next to the greyed-out :guilabel:`Transfers` field, the warehouse receipt that this landed cost is associated with must be specified. To adjust the :guilabel:`Transfers` field, click :guilabel:`Edit` to make that field accessible."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:130
msgid "Additionally, an expenses :guilabel:`Account` (located in the :guilabel:`Additional Costs` tab) must be selected, as well."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:133
msgid "To see how the landed costs affect the items on the :abbr:`PO (purchase order)`, click the :guilabel:`Valuation Adjustments` tab. From this tab, the :guilabel:`Original Value` of the purchase order and the :guilabel:`New Value` of the order can be seen and compared, as well as the :guilabel:`Additional Landed Cost` that was added to change the original :abbr:`PO (purchase order )`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:-1
msgid "Valuation adjustments tab for landed costs on vendor bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:143
msgid "Once ready, click :guilabel:`Validate` at the top of the page, then click :guilabel:`Save` to save all changes. Finally, click back to the vendor bill form (via the breadcrumbs)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:146
msgid "To complete the vendor bill, click :guilabel:`Confirm` to confirm the bill. Then, click the :guilabel:`Register Payment` button at the top of the vendor bill form. Doing so reveals a pop-up. From this pop-up, click :guilabel:`Create Payment`. Once clicked, this reveals a green *In Payment* banner at the top of the vendor bill form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/integrating_landed_costs.rst:152
msgid "Landed costs don't always need to be created from the vendor bill. They can also be created by going to :menuselection:`Inventory app --> Operations --> Landed Costs`, and clicking :guilabel:`Create`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:3
msgid "Inventory valuation configuration"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:7
msgid "All of a company's stock on-hand contributes to the valuation of its inventory. That value should be reflected in the company's accounting records to accurately show the value of the company and all of its assets."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:11
msgid "By default, Odoo uses a periodic inventory valuation (also known as manual inventory valuation). This method implies that the accounting team posts journal entries based on the physical inventory of the company, and that warehouse employees take the time to count the stock. In Odoo, this method is reflected inside each product category, where the :guilabel:`Costing Method` field will be set to `Standard Price` by default, and the :guilabel:`Inventory Valuation` field will be set to `Manual`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:-1
msgid "The Inventory Valuation fields are located on the Product Categories form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:22
msgid "Alternatively, automated inventory valuation is an integrated valuation method that updates the inventory value in real-time by creating journal entries whenever there are stock moves initiated between locations in a company's inventory."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:27
msgid "Automated inventory valuation is a method recommended for expert accountants, given the extra steps involved in journal entry configuration. Even after the initial setup, the method will need to be periodically checked to ensure accuracy, and adjustments may be needed on an ongoing basis depending on the needs and priorities of the business."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:33
msgid "Types of accounting"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:35
msgid "Accounting entries will depend on the accounting mode: *Continental* or *Anglo-Saxon*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:38
msgid "Verify the accounting mode by activating the :ref:`developer-mode` and navigating to :menuselection:`Accounting --> Configuration --> Settings`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:41
msgid "In *Anglo-Saxon* accounting, the costs of goods sold (COGS) are reported when products are sold or delivered. This means that the cost of a good is only recorded as an expense when a customer is invoiced for a product. *Interim Stock Accounts* are used for the input and output accounts, and are both *Asset Accounts* in the balance sheet."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:46
msgid "In *Continental* accounting, the cost of a good is reported as soon as a product is received into stock. Additionally, a single *Expense* account is used for both input and output accounts in the balance sheet."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:51
msgid "Costing methods"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:53
msgid "Below are the three costing methods that can be used in Odoo for inventory valuation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:55
msgid "**Standard Price**: is the default costing method in Odoo. The cost of the product is manually defined on the product form, and this cost is used to compute the valuation. Even if the purchase price on a purchase order differs, the valuation will still use the cost defined on the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:59
msgid "**Average Cost (AVCO)**: calculates the valuation of a product based on the average cost of that product, divided by the total number of available stock on-hand. With this costing method, inventory valuation is *dynamic*, and constantly adjusts based on the purchase price of products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:62
msgid "**First In First Out (FIFO)**: tracks the costs of incoming and outgoing items in real-time and uses the real price of the products to change the valuation. The oldest purchase price is used as the cost for the next good sold until an entire lot of that product is sold. When the next inventory lot moves up in the queue, an updated product cost is used based on the valuation of that specific lot. This method is arguably the most accurate inventory valuation method for a variety of reasons, however, it's highly sensitive to input data and human error."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:70
msgid "Changing the costing method greatly impacts inventory valuation. It's highly recommended to consult an accountant first before making any adjustments here."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:74
msgid "Configure automated inventory valuation in Odoo"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:76
msgid "Make changes to inventory valuation options by navigating to :menuselection:`Inventory --> Configuration --> Product Categories`, and choose the category/categories where the automated valuation method should apply."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:81
msgid "It is possible to use different valuation settings for different product categories."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:83
msgid "Under the :guilabel:`Inventory Valuation` heading are two labels: :guilabel:`Costing Method` and :guilabel:`Inventory Valuation`. Pick the desired :guilabel:`Costing Method` using the drop-down menu (e.g. :guilabel:`Standard`, :guilabel:`Average Cost (AVCO)`, or :guilabel:`First In First Out (FIFO)`) and switch the :guilabel:`Inventory Valuation` to :guilabel:`Automated`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:89
msgid ":doc:`Using the inventory valuation </applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:93
msgid "When choosing :guilabel:`Average Cost (AVCO)` as the :guilabel:`Costing Method`, changing the numerical value in the :guilabel:`Cost` field for products in the respective product category creates a new record in the *Inventory Valuation* report to adjust the value of the product. The :guilabel:`Cost` amount will then automatically update based on the average purchase price both of inventory on hand and the costs accumulated from validated purchase orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:99
msgid "When the :guilabel:`Costing Method` is changed, products already in stock that were using the :guilabel:`Standard` costing method **do not** change value; rather, the existing units keep their value, and any product moves from then on affect the average cost, and the cost of the product will change. If the value in the :guilabel:`Cost` field on a product form is changed manually, Odoo will generate a corresponding record in the *Inventory Valuation* report."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:105
msgid "On the same screen, the :guilabel:`Account Stock Properties` fields will appear, as they are now required fields given the change to automated inventory valuation. These accounts are defined as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:109
msgid ":guilabel:`Stock Valuation Account`: when automated inventory valuation is enabled on a product, this account will hold the current value of the products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:111
msgid ":guilabel:`Stock Input Account`: counterpart journal items for all incoming stock moves will be posted in this account, unless there is a specific valuation account set on the source location. This is the default value for all products in a given category, and can also be set directly on each product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:115
msgid ":guilabel:`Stock Output Account`: counterpart journal items for all outgoing stock moves will be posted in this account, unless there is a specific valuation account set on the destination location. This is the default value for all products in a given category, and can also be set directly on each product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:121
msgid "Access reporting data generated by inventory valuation"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:123
msgid "To start, go to :menuselection:`Accounting --> Reporting --> Balance Sheet`. At the top of the dashboard, change the :guilabel:`As of` field value to :guilabel:`Today`, and adjust the filtering :guilabel:`Options` to :guilabel:`Unfold All` in order to see all of the latest data displayed, all at once."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:128
msgid "Under the parent :guilabel:`Current Assets` line item, look for the nested :guilabel:`Stock Valuation Account` line item, where the total valuation of all of the inventory on hand is displayed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:132
msgid "Access more specific information with the :guilabel:`Stock Valuation Account` drop-down menu, by selecting either the :guilabel:`General Ledger` to see an itemized view of all of the journal entries, or by selecting :guilabel:`Journal Items` to review all of the individualized journal entries that were submitted to the account. As well, annotations to the :guilabel:`Balance Sheet` can be added by choosing :guilabel:`Annotate`, filling in the text box, and clicking :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/inventory_valuation_config.rst:-1
msgid "See the full inventory valuation breakdown in Odoo Accounting app."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:3
msgid "Using inventory valuation"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:5
msgid "*Inventory valuation* is a quintessential accounting procedure that calculates the value of on-hand stock. Once determined, the inventory valuation amount is then incorporated into a company's overall value."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:9
msgid "In Odoo, this process can be conducted manually— by warehouse employees physically counting the products— or automatically through the database."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:13
msgid ":ref:`Inventory valuation configuration <inventory/inventory_valuation_config>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:16
msgid "Understand the basics of inventory valuation"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:18
msgid "In order to understand how moving products in and out of stock affects the company's overall value, consider the following product and stock moves scenario below."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:22
msgid "Receive a product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:24
msgid "For example, consider an physical product, a simple *table*, which is categorized as `Office Furniture` in the product form's :guilabel:`Product Category` field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:27
msgid "Navigate to the the product category itself by going to :menuselection:`Inventory app --> Configuration --> Product Categories`, and on the form, set the :guilabel:`Costing Method` as `First In First Out (FIFO)` and the :guilabel:`Inventory Valuation` field as `Automated`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:32
msgid "Alternatively access the :guilabel:`Product Categories` dashboard by clicking on the :guilabel:`internal link` arrow on the individual product's form, by hovering over the :guilabel:`Product Category` field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:36
msgid "Next, assume 10 tables are purchased at a price of $10.00, each. The :abbr:`PO (Purchase Order)` for those tables will show the subtotal of the purchase as $100, plus any additional costs or taxes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:-1
msgid "Purchase order with 10 tables products valued at $10 each."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:43
msgid "After selecting :guilabel:`Validate` on the :abbr:`PO (Purchase Order)`, use the :guilabel:`Valuation` smart button to view how the value of inventory was impacted."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:-1
msgid "Valuation smart button on a receipt."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:51
msgid ":ref:`Developer mode <developer-mode>` must be turned on to see the *Valuation* smart button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:54
msgid "The :doc:`consignment </applications/inventory_and_mrp/inventory/management/misc/owned_stock>` feature allows ownership to items in stock. Thus, products owned by other companies are not accounted for in the host company's inventory valuation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:58
msgid "The :guilabel:`Stock Valuation` dashboard then displays valuation of all products in the shipment, along with their quantities and valuation. In the example of 10 tables being purchased, the :guilabel:`Total Value` column of the dashboard would display a calculated valuation of $100."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:-1
msgid "Stock valuation page depicting the products within a shipment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:66
msgid "In Odoo, automatic inventory valuation records are also recorded in the *Accounting* app. To access these accounting entries, navigate to :menuselection:`Accounting --> Journal Entries`, and look for inventory valuation entries with the `STJ` prefix in the :guilabel:`Journal` and :guilabel:`Number` columns, respectively."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:-1
msgid "Accounting entry for the inventory valuation of 10 tables."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:76
msgid "Deliver a product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:78
msgid "In the same logic, when a table is shipped to a customer and leaves the warehouse, the stock valuation decreases. The :guilabel:`Valuation` smart button on the :abbr:`DO (Delivery Order)`, likewise, displays the stock valuation record as it does on a :abbr:`PO (Purchase Order)`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:-1
msgid "Decreased stock valuation after a product is shipped."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:87
msgid "The inventory valuation report"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:89
msgid "To view the current value of all products in the warehouse, go to :menuselection:`Inventory app --> Reporting --> Inventory Valuation`. The records in the table are organized by product, and selecting a product's drop-down menu displays detailed records with the :guilabel:`Date`, :guilabel:`Quantity`, and :guilabel:`Total Value` of the inventory."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:-1
msgid "Inventory valuation report showing multiple products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:99
msgid "The :guilabel:`Inventory At Date` button, located in the top-left corner of the :guilabel:`Stock Valuation` dashboard, shows the inventory valuation of products available during a prior specified date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:104
msgid "Update product unit price"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:106
msgid "For any company: lead times, supply chain failures, and other risk factors can contribute to invisible costs. Although Odoo attempts to accurately represent the stock value, *manual valuation* serves as an additional tool to update the unit price of products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:111
msgid "Manual valuation is intended for products that can be purchased and received for a cost greater than 0, or have product categories set with :guilabel:`Costing Method` set as either `Average Cost (AVCO)` or `First In First Out (FIFO)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:-1
msgid "Add manual valuation of stock value to a product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:119
msgid "Create manual valuation entries on the :guilabel:`Stock Valuation` dashboard by first navigating to :menuselection:`Inventory app --> Reporting --> Inventory Valuation`, and then click the little gray drop-down icon to the left of a product's name, to then reveal stock valuation line items below as well as a teal :guilabel:`+ (plus)` button on the right."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:124
msgid "Click the teal :guilabel:`+ (plus)` button to open up the :guilabel:`Product Revaluation` form, where updates to the calculation of inventory valuation can be made, by increasing or decreasing the unit price of each product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/reporting/using_inventory_valuation.rst:-1
msgid "Product revaluation form adding a value of $1.00 with the reason being inflation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:6
msgid "Incoming shipments and delivery orders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:8
msgid "There are several ways to handle how a warehouse receives products (receipts) and ships products (deliveries). Depending on several factors, such as the type of products stocked and sold, warehouse size, and the amount of daily confirmed receipts and delivery orders, the way products are handled when coming in and out of the warehouse can vary a lot. Different settings can be configured for receipts and deliveries; they do not have to be configured to have the same number of steps."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:15
msgid "`Using Routes (eLearning Tutorial) <https://www.odoo.com/slides/slide/using-routes-1018>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:16
msgid "`Push & Pull Rules (eLearning Tutorial) <https://www.odoo.com/slides/slide/push-pull-rules-1024>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:20
msgid "Choosing the right inventory flow to handle receipts and deliveries"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:22
msgid "By default, Odoo handles shipping and receiving in three different ways: in one, two, or three steps. The simplest configuration is one step, which is the default. Each additional step required for a warehouse for either the receiving or shipping process will add an additional layer of operations to perform before a product is either received or shipped. These configurations depend entirely on the requirements for the products stored, such as performing quality checks on received products, or using special packaging on shipped products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:30
msgid "One-step flow"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:32
msgid "The receiving and shipping rules for a one-step configuration are as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:34
msgid "**Receipt**: Receive products directly into stock. No intermediate steps between receipt and stock occur, such as a transfer to a quality control location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:36
msgid "**Shipping**: Ship products directly from stock.  No intermediate steps between stock and shipping occur, such as a transfer to a packing location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:38
msgid "Can only be used if not using :abbr:`FIFO (First In, First Out)`, :abbr:`LIFO (Last In, First Out)`, or :abbr:`FEFO (First Expired, First Out)` removal strategies."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:40
msgid "Receipts and/or deliveries are handled quickly."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:41
msgid "Recommended for small warehouses with low stock levels, and for non-perishable items."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:42
msgid "Items are received or shipped directly into/from stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:45
msgid ":ref:`Process receipts and deliveries in one step <inventory/receipts_delivery_one_step>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:48
msgid "Two-step flow"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:50
msgid "The receiving and shipping rules for a two-step configuration are as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:52
msgid "**Input + stock**: Bring products to an input location *before* moving into stock. Products can be organized by different internal storage locations, such as various shelves, freezers, and locked areas, before being stocked in the warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:55
msgid "**Pick + ship**: Bring products to an output location before shipping. Packages can be organized by different carriers or shipping docks before being shipped."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:57
msgid "Minimum requirement to use lot numbers or serial numbers to track products with a :abbr:`FIFO (First In, First Out)`, :abbr:`LIFO (Last In, First Out)` or :abbr:`FEFO (First Expired, First Out)` removal strategy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:60
msgid "Recommended for larger warehouses with high stock levels, or when stocking large items (such as mattresses, large furniture, heavy machinery, etc.)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:62
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:83
msgid "Products received will not be available for manufacturing, shipping, etc., until they are transferred into stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:66
msgid ":ref:`Process receipts and deliveries in two steps <inventory/receipts_delivery_two_steps>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:69
msgid "Three-step flow"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:71
msgid "The receiving and shipping rules for a three-step configuration are as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:73
msgid "**Input + quality + stock**: Receive products at the input location, transfer them to a quality control area, and move the ones that pass inspection into stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:75
msgid "**Pick + pack + ship**: Pick products according to their removal strategy, pack them in a dedicated packing area, and bring them to an output location for shipping."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:77
msgid "Can be used when tracking products by lot or serial numbers when using a :abbr:`FIFO (First In, First Out)`, :abbr:`LIFO (Last In, First Out)`, or :abbr:`FEFO (First Expired, First Out)` removal strategy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:80
msgid "Recommended for very large warehouses with very high stock levels."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:81
msgid "Required for any warehouse needing to perform quality control inspections before receiving items into stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:87
msgid ":ref:`Process receipts in three steps <inventory/receipts_three_steps>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:88
msgid ":ref:`Process deliveries in three steps <inventory/delivery_three_steps>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries.rst:91
msgid "Inventory flow table of contents"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:3
msgid "Process deliveries in three steps"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:7
msgid "Some companies process large amounts of deliveries every day, many of which include multiple products or require special packaging. To make this efficient, a packing step is needed before shipping out products. For this, Odoo has a three step process for delivering goods."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:11
msgid "In the default three-step delivery process, products that are part of a delivery order are picked in the warehouse according to their removal strategy, and brought to a packing zone. After the items have been packed into the different shipments in the packing zone, they are brought to an output location before being shipped. These steps can be modified if they do not fit the needs of the business."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:20
msgid "Odoo is configured by default to :ref:`receive and deliver goods in one step <inventory/receipts_delivery_one_step>`, so the settings need to be changed in order to utilize three step deliveries. First, make sure the *Multi-Step Routes* option is enabled in :menuselection:`Inventory --> Configuration --> Settings --> Warehouse`. Note that activating :guilabel:`Multi-Step Routes` will also activate *Storage Locations*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "Activate multi-step routes and storage locations in inventory settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:30
msgid "Next, the warehouse needs to be configured for three step deliveries. To do this, go to :menuselection:`Inventory --> Configuration --> Warehouses`, and click :guilabel:`Edit` to edit the :guilabel:`Warehouse`. Then, select :guilabel:`Pack goods, send goods in output and then deliver (3 steps)` for :guilabel:`Outgoing Shipments`. Then :guilabel:`Save` the changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
msgid "Set outgoing shipment option to deliver in three steps."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:39
msgid "Activating three-step receipts and deliveries will create two new internal locations: a *Packing Zone* (WH/Packing Zone), and *Output* (WH/Output). To rename these locations, go to :menuselection:`Configuration --> Locations`, select the :guilabel:`Location` to change, click :guilabel:`Edit`, update the name, and finally, click :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:45
msgid "Process a delivery order in three steps (pick + pack + ship)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:48
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:90
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:143
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:35
msgid "Create a sales order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:50
msgid "In the :menuselection:`Sales` application, create a new quote by clicking :guilabel:`Create`. Select a :guilabel:`Customer`, add a storable :guilabel:`Product`, and click :guilabel:`Confirm`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:53
msgid "A :guilabel:`Delivery` smart button will appear in the top right. Clicking on it will show the picking order, packing order, and the delivery order, which are all associated with the sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
msgid "After confirming the sales order, the Delivery smart button appears showing three items\n"
"associated with it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:62
msgid "Process a picking"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:64
msgid "The picking, packing, and delivery orders will be created once the sales order is confirmed.  To view these transfers, go to :menuselection:`Inventory --> Operations --> Transfers`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
msgid "Ready status for the pick operation while the packing and delivery operations are waiting\n"
"another operation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:72
msgid "The status of the picking will be :guilabel:`Ready`, since the product must be picked from stock before it can be packed. The status of the packing order and delivery order will both be :guilabel:`Waiting Another Operation`, since the packing and delivery cannot happen until the picking is completed. The status of the delivery order will only change to :guilabel:`Ready` when the packing has been marked :guilabel:`Done`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:78
msgid "The receipt can also be found in the *Inventory* application. In the :guilabel:`Overview` dashboard, click the :guilabel:`1 To Process` smart button in the :guilabel:`Pick` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
msgid "The pick order can be seen in the Inventory Kanban view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:85
msgid "Click on the picking to process. If the product is in stock, Odoo will automatically reserve the product. Click :guilabel:`Validate` to mark the picking as done, and complete the transfer to the :guilabel:`Packing Zone`. Then the packing order will be ready. Since the documents are linked, the products which have been previously picked are automatically reserved on the packing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "Validate the picking by clicking Validate."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:95
msgid "Process a packing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:97
msgid "The packing order will be ready to be processed once the picking is completed, and can be found in the :menuselection:`Inventory` application :guilabel:`Overview` dashboard. Click the :guilabel:`1 To Process` smart button in the :guilabel:`Pack` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
msgid "The packing order can be seen in the Inventory kanban view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:105
msgid "Click on the packing order associated with the sales order, then click on :guilabel:`Validate` to complete the packing."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
msgid "Click Validate on the packing order to transfer the product from the packing zone to the\n"
"output location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:113
msgid "Once the packing order is validated, the product leaves the :guilabel:`WH/Packing Zone` location and moves to the :guilabel:`WH/Output` location. Then, the status of the document will change to :guilabel:`Done`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:118
msgid "Process a delivery"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:120
msgid "The delivery order will be ready to be processed once the packing is completed, and can be found in the :menuselection:`Inventory` application :guilabel:`Overview` dashboard. Click the :guilabel:`1 To Process` smart button in the :guilabel:`Delivery Orders` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
msgid "The delivery order can be seen in the Delivery Orders Kanban view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:128
msgid "Click on the delivery order associated with the sales order, then click on :guilabel:`Validate` to complete the move."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:-1
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "Click Validate on the delivery order to transfer the product from the output location to\n"
"the customer location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/delivery_three_steps.rst:136
msgid "Once the delivery order is validated, the product leaves the :guilabel:`WH/Output` location and moves to the :guilabel:`Partners/Customers` location. Then, the status of the document will change to :guilabel:`Done`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:3
msgid "Process receipts and deliveries in one step"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:7
msgid "By default, incoming shipments are configured to be received directly into stock, and outgoing shipments are configured to be delivered directly from stock to the customer; the default setting for warehouses in Odoo is one step receipts and deliveries."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:12
msgid "Incoming and outgoing shipments do not need to be configured with the same steps. For example, products can be received in one step, but shipped in three steps."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:15
msgid "In the following example, one step will be used for both receipts and deliveries."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:18
msgid "Configure the warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:20
msgid "If another receiving or shipping configuration is set on the warehouse, they can easily be set back to the one step setting."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:23
msgid "Begin by navigating to :menuselection:`Inventory --> Configuration --> Warehouses`, click on the desired warehouse, and click :guilabel:`Edit`. Next, on the :guilabel:`Warehouse Configuration` tab, under the :guilabel:`Shipments` section, select :guilabel:`Receive goods directly (1 step)` for :guilabel:`Incoming Shipments` and/or :guilabel:`Deliver goods directly (1 step)` for :guilabel:`Outgoing Shipments`, and :guilabel:`Save` the changes to finish."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:-1
msgid "Set incoming and outgoing shipment options to receive and deliver in one step."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:35
msgid "Receive goods directly (1 step)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:38
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:70
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:46
msgid "Create a purchase order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:40
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:72
msgid "On the main :menuselection:`Purchase` application dashboard, start by making a new quote by clicking :guilabel:`Create`. Then, select (or create) a :guilabel:`Vendor` from the drop-down field, add a storable :guilabel:`Product` to the order lines, and click :guilabel:`Confirm Order` to finalize the quote as a new purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:45
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:97
msgid "A :guilabel:`Receipt` smart button will appear in the top-right corner of the :abbr:`PO (purchase order)` form — click it to reveal the associated receipt for the purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:-1
msgid "Receipt smart button appears on the confirmed purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:53
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:93
msgid "Purchase order receipts can also be found in the :menuselection:`Inventory` application. In the :guilabel:`Overview` dashboard, click the :guilabel:`# to Process` smart button in the :guilabel:`Receipts` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:0
msgid "Receipt kanban card's 1 to Process smart button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:62
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:102
#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:97
msgid "Process the receipt"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:64
msgid "When viewing the receipt (associated with the purchase order above), click :guilabel:`Validate` to then complete the receipt."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:-1
msgid "Validate the purchase order via the Validate smart button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:72
msgid "If :guilabel:`Storage Locations` are activated, clicking the :guilabel:`≣ (bullet list)` details icon next to the :guilabel:`🗑️ (trash)` delete icon enables the :guilabel:`Detailed Operations` screen to pop-up. This allows the location(s) to be specified for the received product(s)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:0
msgid "Select the Storage Location for the products being received in the Detailed Operations\n"
"pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:81
msgid "Once the receipt is validated, the product leaves the :guilabel:`Supplier Location` and enters the :guilabel:`WH/Stock Location`. Once it arrives here, it will be available for manufacturing, sales, etc. Then, the status of the document will change to :guilabel:`Done`, thus completing the reception process in one step."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:87
msgid "Deliver goods directly (1 step)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:92
msgid "Start my navigating to the main :menuselection:`Sales` app dashboard, and make a new quote by clicking :guilabel:`Create`. Then select (or create) a :guilabel:`Customer` from the drop-down field, add a storable :guilabel:`Product` that is in stock to the order lines, and click :guilabel:`Confirm` to finalize the quotation as a sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:100
msgid "A :guilabel:`Delivery` smart button will appear in the top-right corner of the :abbr:`SO (Sales Order)` form — click it to reveal the associated delivery order for the sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:-1
msgid "The Delivery smart button appears after the sales order is confirmed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:108
msgid "Delivery orders can also be found in the :menuselection:`Inventory` application. In the :guilabel:`Overview` dashboard, click the :guilabel:`# to Process` smart button in the :guilabel:`Delivery Orders` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:0
msgid "Delivery Orders kanban card's 1 to Process smart button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:117
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:196
msgid "Process the delivery"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:119
msgid "When viewing the delivery order (associated with the sales order above), click :guilabel:`Validate` to then complete the delivery."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:-1
msgid "Validate the delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_one_step.rst:126
msgid "Once the picking order is validated, the product leaves the :guilabel:`WH/Stock location` and moves to the :guilabel:`Partners/Customers location`. Then, the status of the document will change to :guilabel:`Done`, thus completing delivery in one step."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:3
msgid "Process receipts and deliveries in two steps"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:7
msgid "Depending on a company's business processes, multiple steps may be needed before receiving or shipping products. In the two-step receipt process, products are received in an input area, then transferred to stock. Two-step receipts work best when various storage locations are being used, such as locked or secured areas, freezers and refrigerators, or various shelves."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:12
msgid "Products can be sorted according to where they are going to be stored, and employees can stock all the products going to a specific location. The products are not available for further processing until they are transferred into stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:16
msgid "In the two-step delivery process, products that are part of a delivery order are picked from the warehouse according to their removal strategy, and brought to an output location before being shipped."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:20
msgid "One situation where this would be useful is when using either a :abbr:`FIFO (First In, First Out)`, :abbr:`LIFO (Last In, First Out)`, or :abbr:`FEFO (First Expired, First Out)` removal strategy, where the products that are being picked need to be selected based on their receipt date or expiration date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:25
msgid "Odoo is configured by default to :ref:`receive and deliver goods in one step <inventory/receipts_delivery_one_step>`, so the settings need to be changed in order to utilize two-step receipts and deliveries. Incoming and outgoing shipments do not need to be set to have the same steps. For example, products can be received in two steps, but shipped in one step. In the following example, two steps will be used for both receipts and deliveries."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:32
msgid "Configure multi-step routes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:34
msgid "First, make sure the :guilabel:`Multi-Step Routes` option is enabled in :menuselection:`Inventory --> Configuration --> Settings`, under the :guilabel:`Warehouse` heading. After enabling the setting, :guilabel:`Save` the changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:39
msgid "Activating the :guilabel:`Multi-Step Routes` setting will also activate the :guilabel:`Storage Locations` feature."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:46
msgid "Next, the warehouse needs to be configured for two-step receipts and deliveries. Go to :menuselection:`Inventory --> Configuration --> Warehouses`, and click :guilabel:`Edit` to change the warehouse settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:50
msgid "Then, select :guilabel:`Receive goods in input and then stock (2 steps)` for :guilabel:`Incoming Shipments`, and :guilabel:`Send goods in output and then deliver (2 steps)` for :guilabel:`Outgoing Shipments`. :guilabel:`Save` the changes to finish."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "Set incoming and outgoing shipment options to receive and deliver in two steps."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:59
msgid "Activating two-step receipts and deliveries will create new *input* and *output* locations, which by default, are labeled :guilabel:`WH/Input` and :guilabel:`WH/Output`, respectively, on the :guilabel:`Locations` dashboard. To rename these locations, go to :menuselection:`Configuration --> Locations`, select the :guilabel:`Location` to change, and then click :guilabel:`Edit`. On the location form, update the :guilabel:`Location Name`, make any other changes (if necessary) and :guilabel:`Save` the changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:67
msgid "Process a receipt in two steps (input + stock)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:78
msgid "For businesses with multiple warehouses that have different step configurations, the :guilabel:`Deliver To` field on the :abbr:`PO (Purchase Order)` form may need to be specified as the correct *input location* connected to the two-step warehouse, which can be done by selecting the warehouse from the drop-down selection that includes the `Receipts` label at the end of the name."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:84
msgid "After confirming the :abbr:`PO (Purchase Order)`, a :guilabel:`Receipt` smart button will appear in the top-right corner of the :abbr:`PO (Purchase Order)` form — click it to reveal the associated receipt."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:-1
msgid "After confirming a purchase order, a Receipt smart button will appear."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:0
msgid "One receipt ready to process in the Inventory Overview kanban view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:104
msgid "The receipt and internal transfer will be created once the purchase order is confirmed. The status of the receipt will be :guilabel:`Ready`, since the receipt must be processed first. The status of the internal transfer will be :guilabel:`Waiting Another Operation`, since the transfer cannot happen until the receipt is completed. The status of the internal transfer will only change to :guilabel:`Ready` once the receipt has been marked as :guilabel:`Done`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:110
msgid "Click on the :guilabel:`Receipt` associated with the purchase order, then click :guilabel:`Validate` to complete the receipt and move the product to the :guilabel:`Input Location`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "Validate the receipt by clicking Validate, then the product will be transferred to the\n"
"WH/Input location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:119
msgid "Process the internal transfer"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:121
msgid "Once the product is in the :guilabel:`Input Location`, the internal transfer is ready to move the product into stock. Navigate to the :menuselection:`Inventory` app, and on the :guilabel:`Inventory Overview` dashboard, click the :guilabel:`# To Process` smart button in the :guilabel:`Internal Transfers` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:-1
msgid "One Internal Transfer ready to process in the Inventory Overview kanban view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:130
msgid "Click on the :guilabel:`Transfer` associated with the purchase order, then click :guilabel:`Validate` to complete the receipt and move the product to stock. Once the transfer is validated, the product enters the stock and is available for customer deliveries or manufacturing orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "Validate the internal transfer to move the item to stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:140
msgid "Process a delivery order in two steps (pick + ship)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:145
msgid "In the :menuselection:`Sales` application, create a new quote by clicking :guilabel:`Create`. Select or create a :guilabel:`Customer`, add a storable :guilabel:`Product` to the order lines, and then click :guilabel:`Confirm`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:149
msgid "After confirming the :abbr:`SO (Sales Order)`, a :guilabel:`Delivery` smart button will appear in the top-right corner of the :abbr:`SO (Sales Order)` form. Click it to reveal the associated delivery forms."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "After confirming the sales order, the Delivery smart button appears showing two items\n"
"associated with it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:159
msgid "Sales order receipts can also be found in the :menuselection:`Inventory` application. In the :guilabel:`Overview` dashboard, click the :guilabel:`# To Process` smart button in the :guilabel:`Pick` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:0
msgid "The pick order can be seen in the Inventory kanban view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:168
msgid "Process the picking"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:170
msgid "The picking and delivery order will be created once the sales order is confirmed. When the :guilabel:`Delivery` smart button appears, click it to reveal the :guilabel:`Transfers` dashboard, which lists both the picking and the delivery orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:174
msgid "The status of the picking will be :guilabel:`Ready`, since the product must be picked from stock before it can be shipped. The status of the delivery order will be :guilabel:`Waiting Another Operation`, since the delivery cannot happen until the picking is completed. The status of the delivery order will only change to :guilabel:`Ready` once the picking has been marked as :guilabel:`Done`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "Ready status for the pick operation while the delivery operation is Waiting Another\n"
"Operation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:185
msgid "Click on the picking delivery order to begin processing it. If the product is in stock, Odoo will automatically reserve the product. Click :guilabel:`Validate` to mark the picking as :guilabel:`Done`, then the delivery order will be ready for processing. Since the documents are linked, the products which have been previously picked are automatically reserved on the delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:198
msgid "The delivery order will be ready to be processed once the picking is completed, and can be found in the :menuselection:`Inventory` application, on the :guilabel:`Inventory Overview` dashboard. Click the :guilabel:`# To Process` smart button in the :guilabel:`Delivery Orders` kanban card to begin."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:203
msgid "The delivery order associated with the :abbr:`SO (Sales Order)` can also be quickly accessed by clicking on the :guilabel:`Delivery` smart button again, and choosing the delivery order on the :guilabel:`Transfers` page (which should now be marked as :guilabel:`Ready`)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:-1
msgid "The delivery order can be seen in the Inventory Kanban view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:211
msgid "Click on the delivery order associated with the :abbr:`SO (Sales Order)`, then click on :guilabel:`Validate` to complete the move."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_delivery_two_steps.rst:219
msgid "Once the delivery order is validated, the product leaves the :guilabel:`WH/Output` location on the :guilabel:`Transfers` dashboard and moves to the :guilabel:`Partners/Customers` location. Then, the status of the document will change to :guilabel:`Done`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:3
msgid "Process receipts in three steps"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:7
msgid "Some companies require a quality control process before receiving goods from suppliers. To accomplish this, Odoo has a three-step process for receiving goods."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:10
msgid "In the three-step receipt process, products are received in an input area, then transferred to a quality area for inspection. Products that pass the quality inspection are then transferred into stock. The products are not available for further processing until they are transferred out of the quality area and into stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:18
msgid "Odoo is configured by default to :ref:`receive and deliver goods in one step <inventory/receipts_delivery_one_step>`, so the settings need to be changed in order to utilize three-step receipts. First, make sure the *Multi-Step Routes* option is enabled in :menuselection:`Inventory --> Configuration --> Settings --> Warehouse`. Note that activating :guilabel:`Multi-Step Routes` will also activate *Storage Locations*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:-1
msgid "Activate multi-step routes and storage locations in Inventory settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:28
msgid "Next, the warehouse needs to be configured for three-step receipts. Go to :menuselection:`Inventory --> Configuration --> Warehouses`, and click :guilabel:`Edit` to edit the warehouse. Then, select :guilabel:`Receive goods in input, then quality and then stock (3 steps)` for :guilabel:`Incoming Shipments`. Then, :guilabel:`Save` the changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:-1
msgid "Set incoming shipment option to receive in three steps."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:37
msgid "Activating three-step receipts and deliveries will create two new internal locations: *Input* (WH/Input), and *Quality Control* (WH/Quality Control). To rename these locations, go to :menuselection:`Configuration --> Locations`, select the :guilabel:`Location` to change, click :guilabel:`Edit`, update the name, and finally, click :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:43
msgid "Process a receipt in three steps (input + quality + stock)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:48
msgid "In the :menuselection:`Purchase` application, create a new quote by clicking :guilabel:`Create`. Select a :guilabel:`Vendor`, add a storable :guilabel:`Product`, and click :guilabel:`Confirm Order`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:52
msgid "A :guilabel:`Receipt` smart button will appear in the top right, and the receipt will be associated with the purchase order. Clicking on the :guilabel:`Receipt` smart button will show the receipt order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:61
msgid "Process a receipt"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:63
msgid "One receipt and two internal transfers (one transfer to quality, and a subsequent transfer to stock) will be created once the purchase order is confirmed. To view these transfers, go to :menuselection:`Inventory --> Operations --> Transfers`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:-1
msgid "The status of the three receipt transfers will show which operation is ready and which ones\n"
"are waiting another operation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:72
msgid "The status of the receipt transferring the product to the input location will be :guilabel:`Ready`, since the receipt must be processed before any other operation can occur. The status of the two internal transfers will be :guilabel:`Waiting Another Operation`, since the transfers cannot be processed until the linked step before each transfer is completed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:77
msgid "The status of the first internal transfer to *quality* will only change to :guilabel:`Ready` when the receipt has been marked :guilabel:`Done`. The status for the second internal transfer to *stock* will be marked :guilabel:`Ready` only after the transfer to quality has been marked :guilabel:`Done`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:82
msgid "The receipt can also be found in the :menuselection:`Inventory` application. In the :guilabel:`Overview` dashboard, click the :guilabel:`1 To Process` smart button in the :guilabel:`Receipts` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:-1
msgid "One Receipt ready to process in the Inventory Overview kanban view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:90
msgid "Click on the receipt associated with the purchase order, then click :guilabel:`Validate` to complete the receipt and move the product to the :guilabel:`Input Location`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:-1
msgid "Validate the receipt by clicking Validate, and the product will be transferred to the\n"
"WH/Quality location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:99
msgid "Process a transfer to Quality Control"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:101
msgid "Once the product is in the :guilabel:`Input Location`, the internal transfer is ready to move the product to :guilabel:`Quality Control`. In the :menuselection:`Inventory` :guilabel:`Overview` dashboard, click the :guilabel:`1 To Process` smart button in the :guilabel:`Internal Transfers` kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:110
msgid "Click on the :guilabel:`Transfer` associated with the purchase order, then click :guilabel:`Validate` to complete the transfer and move the product to the :guilabel:`Quality Control` location. Once the transfer is validated, the product is ready for the quality inspection, but is not available for manufacturing or delivery orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:-1
msgid "Validate the internal transfer to move the item to the Quality Control location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:120
msgid "Process a transfer to stock"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:122
msgid "Once the product is in the :guilabel:`Quality Control` location, the final internal transfer is ready to move the product to :guilabel:`Stock`. In the :guilabel:`Inventory` overview dashboard, click the :guilabel:`1 To Process` smart button in the :guilabel:`Internal Transfers` Kanban card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/shipments_deliveries/receipts_three_steps.rst:126
msgid "Click on the final :guilabel:`Transfer` associated with the purchase order, then click :guilabel:`Validate` to complete the transfer and move the product to stock. Once the transfer is validated, the product enters the stock and is available for customer deliveries or manufacturing orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses.rst:5
msgid "Warehouses"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:3
msgid "Create a second warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:5
msgid "A *warehouse* is a physical building or space where items are stored. In Odoo, it is possible to set up multiple warehouses and transfer stored items between them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:8
msgid "By default, the Odoo platform has one warehouse that is already configured, with the address set as the company's address. To create a second warehouse, select :menuselection:`Configuration --> Warehouses`, then click :guilabel:`Create` and configure the form as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:12
msgid ":guilabel:`Warehouse`: the full name of the warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:13
msgid ":guilabel:`Short Name`: the abbreviated code by which the warehouse is referred to; the short name for the default warehouse in Odoo is **WH**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:15
msgid ":guilabel:`Company`: the company that owns the warehouse; this can be set as the company that owns the Odoo database or the company of a customer or vendor"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:17
msgid ":guilabel:`Address`: the address where the warehouse is located"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:20
msgid "The options below will only appear if the :guilabel:`Multi-Step Routes` checkbox is enabled in :menuselection:`Configuration --> Settings` under the :guilabel:`Warehouse` heading. For more information about routes and how they work in Odoo, see :ref:`Using Routes and Pull/Push Rules <use-routes>`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:25
msgid ":guilabel:`Incoming/Outgoing Shipments`: select the routes that incoming and outgoing shipments should follow"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:27
msgid ":guilabel:`Resupply Subcontractors`: allow subcontractors to be resupplied from this warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:28
msgid ":guilabel:`Manufacture to Resupply`: allow for items to be manufactured in this warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:29
msgid ":guilabel:`Manufacture`: select the route that should be followed when manufacturing goods inside the warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:31
msgid ":guilabel:`Buy to Resupply`: check the box to allow for purchased products to be delivered to the warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:33
msgid ":guilabel:`Resupply From`: select warehouses that can be used to resupply the warehouse being created"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:-1
msgid "A filled out form for creating a new warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:41
msgid "Creating a second warehouse will automatically enable the *Storage Locations* setting, which allows location tracking of products within a warehouse. To toggle this setting, navigate to :menuselection:`Configuration --> Settings` and click the checkbox under the :guilabel:`Warehouse` heading."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:46
msgid "After filling out the form, click :guilabel:`Save` and the new warehouse will be created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:49
msgid "Add inventory to a new warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:51
msgid "If a new warehouse is created that has existing inventory in it, the inventory counts should be added to Odoo so that the stock listed in the Odoo database reflects what is in the physical warehouse. To add inventory to a new warehouse, navigate to :menuselection:`Inventory --> Operations --> Inventory Adjustments`, and then click :guilabel:`Create`. The inventory adjustment form can then be filled out as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:57
msgid ":guilabel:`Inventory Reference`: the name or code that the inventory adjustment can be referred to by"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:59
msgid ":guilabel:`Locations`: the location(s) where the inventory is stored; include the new warehouse and any locations within it that inventory will be added to"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:61
msgid ":guilabel:`Products`: include all products that will be added to inventory or leave blank to select any product during the next step"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:63
msgid ":guilabel:`Include Exhausted Products`: include products with a quantity of zero; does not affect inventory adjustments for new warehouses since they have no existing inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:65
msgid ":guilabel:`Accounting Date`: the date used by accounting teams for bookkeeping related to the inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:67
msgid ":guilabel:`Company`: the company that owns the inventory; can be set as the user's company or as a customer or vendor"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:69
msgid ":guilabel:`Counted Quantities`: choose whether the counted quantities for products being added should default to stock on hand or zero; does not affect inventory adjustments for new warehouses since they have no existing inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:-1
msgid "A filled out form for an inventory adjustment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:77
msgid "Once the form is properly configured, click on :guilabel:`Start Inventory` to be taken to the next page where products can be added to the inventory adjustment. Add a new product by clicking on :guilabel:`Create` and then fill out the product line as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:81
msgid ":guilabel:`Product`: the product being added to inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:82
msgid ":guilabel:`Location`: the location where the product is currently stored in the new warehouse; this can be set as the overall warehouse or a location within the warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:84
msgid ":guilabel:`Lot/Serial Number`: the lot that the product belongs to or the serial number used to identify it"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:86
msgid ":guilabel:`On Hand`: the total quantity of the product stored in the location for which inventory is being adjusted; this should be zero for a new location or warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:88
msgid ":guilabel:`Counted`: the amount of the product that is being added to inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:89
msgid ":guilabel:`Difference`: the difference between the *On Hand* and *Counted* values; this will automatically update to reflect the value entered in the :guilabel:`Counted` column"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:91
msgid ":guilabel:`UoM`: the unit of measure used for counting the product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:-1
msgid "Include a line for each product being added to inventory."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/create_a_second_warehouse.rst:97
msgid "After adding all the products already stored in the new warehouse, click :guilabel:`Validate Inventory` to complete the inventory adjustment. The values in the :guilabel:`On Hand` column will update to reflect those in the :guilabel:`Counted` column and the products added will appear in the inventory of the new warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/difference_warehouse_location.rst:3
msgid "What is the difference between warehouses and locations?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/difference_warehouse_location.rst:7
msgid "In Odoo, a **Warehouse** is the actual building/place in which your items are stocked. You can setup multiple warehouses and create moves between warehouses."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/difference_warehouse_location.rst:13
msgid "A **Location**, is a specific space within your warehouse. It can be considered as a sublocation of your warehouse, as a shelf, a floor, an aisle, etc. Therefore, a location is part of one warehouse only and it is not possible to link one location to multiple warehouses. You can configure as many locations as you need under one warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/difference_warehouse_location.rst:19
msgid "There are 3 types of locations:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/difference_warehouse_location.rst:21
msgid "The **Physical Locations** are internal locations that are part of the warehouses for which you are the owner. They can be the loading and unloading area of your warehouse, a shelf or a department, etc."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/difference_warehouse_location.rst:25
msgid "The **Partner Locations** are spaces within a customer and/or vendor's warehouse. They work the same way as Physical Locations with the only difference being that you are not the owner of the warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/difference_warehouse_location.rst:29
msgid "The **Virtual Locations** are places that do not exist, but in which products can be placed when they are not physically in an inventory yet (or anymore). They come in handy when you want to place lost products out of your stock (in the **Inventory loss**), or when you want to take into account products that are on their way to your warehouse (**Procurements**)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/difference_warehouse_location.rst:35
msgid "In Odoo, locations are structured hierarchically. You can structure your locations as a tree, dependent on a parent-child relationship. This gives you more detailed levels of analysis of your stock operations and the organization of your warehouses."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:3
msgid "Transfer products between warehouses using replenishment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:5
msgid "For companies that use multiple warehouses, it is often necessary to transfer items between them. This is referred to as an *inter-warehouse transfer*. Odoo *Inventory* handles the administrative process of inter-warehouse transfers to ensure that inventory counts remain accurate during and after the transfer. This document will detail the method for conducting an inter-warehouse transfer using replenishment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:12
msgid "Configure warehouses for inter-warehouse replenishment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:14
msgid "First, ensure the :guilabel:`Multi-Step Routes` setting is enabled by navigating to :menuselection:`Inventory --> Configuration --> Settings`, and then check the box under the :guilabel:`Warehouse` tab. This will provide additional configuration options when creating a second warehouse that are needed for inter-warehouse replenishment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:19
msgid "By default, Odoo comes with a main warehouse already configured. If an additional warehouse has not already been created, do so now from the :guilabel:`Inventory` module by selecting :menuselection:`Configuration --> Warehouses --> Create`. Otherwise, select the warehouse that products will be transferred to from the :guilabel:`Warehouses` page and then click :guilabel:`Edit` to change its settings. Configure the warehouse as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:25
msgid ":guilabel:`Warehouse`: choose a name that is not already being used for another warehouse (e.g. `Alternative Warehouse`)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:27
msgid ":guilabel:`Short Name`: choose a short name by which the warehouse will be identified (e.g. `ALT_WH`)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:30
msgid "Click :guilabel:`Save` and the new warehouse will be created. In addition, a new :guilabel:`Resupply From` field will appear on the warehouse's form. Click :guilabel:`Edit` and then check the box next to the warehouse that will be used to resupply the warehouse that is currently being configured."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:-1
msgid "A warehouse settings form configured to allow resupplying between warehouses."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:39
msgid "For the purposes of this demonstration, the warehouse that products are transferred from (outgoing) will be titled \"San Francisco\", and the warehouse that products are transferred to (incoming) will be titled \"San Francisco 2\"."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:44
msgid "Configure products for inter-warehouse replenishment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:46
msgid "Products must also be configured properly in order for them to be transferred between warehouses. Navigate to :menuselection:`Inventory --> Products --> Products` and select an existing product or :guilabel:`Create` a new one, if necessary."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:50
msgid "Then, on the product form, go to the :guilabel:`Inventory` tab and enable the checkbox for :guilabel:`X: Supply Product from Y`, with *X* being the warehouse receiving the transferred products and *Y* being the warehouse that products are transferred from."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:-1
msgid "Enable the checkbox to resupply one warehouse from another."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:59
msgid "Replenish one warehouse from another"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:61
msgid "Starting in the :menuselection:`Inventory` module, select :menuselection:`Products --> Products` and then choose the product that will be replenished. Click the :guilabel:`Replenish` button on the top left of the product page and fill out the pop-up form as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:65
msgid ":guilabel:`Quantity`: the number of units that will be sent to the warehouse being replenished"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:66
msgid ":guilabel:`Scheduled Date`: the date that the replenishment is scheduled to take place"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:67
msgid ":guilabel:`Warehouse`: the warehouse that will be replenished"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:68
msgid ":guilabel:`Preferred Routes`: select `X: Supply Product from Y`, with *X* being the warehouse to be replenished and *Y* being the warehouse that the product will be transferred from"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:-1
msgid "The form for replenishing a product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:75
msgid "Click :guilabel:`Confirm` and a delivery order will be created for the outgoing warehouse along with a receipt for the warehouse that will receive the product. Depending on the configuration settings for the outgoing and incoming warehouses, processing delivery orders and receipts will require between one and three steps. This document will detail how to process one-step deliveries and receipts."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:82
msgid "Process the delivery order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:84
msgid "The first stage of a replenishment order is processing the delivery from the warehouse that the product is being transferred from. On the :menuselection:`Inventory` dashboard, select the :guilabel:`X to Process` button on the :guilabel:`Delivery Orders` card for the outgoing warehouse, then the delivery order created for the replenishment. On the delivery order page, click the :guilabel:`Check Availability` button in the top left to reserve the quantity of the product to be transferred. Once the delivery has been dispatched, click the :guilabel:`Validate` button to register the quantities shipped."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:-1
msgid "The delivery orders card for the outgoing warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:99
msgid "Once the goods arrive at the incoming warehouse, the receipt created for that warehouse must be processed as well. Return to the :menuselection:`Inventory` dashboard and select the :guilabel:`X to Process` button on the :guilabel:`Receipts` card for the incoming warehouse, then the receipt created for the replenishment. On the receipt page, click the :guilabel:`Validate` button in the top left of the page to register the quantities received."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:109
msgid "After processing the receipt, the products transferred will now appear in the inventory of the incoming warehouse. The stock numbers for both warehouses can be viewed by returning to the product page and selecting the :guilabel:`X Units On Hand` button at the top of the screen."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:114
msgid "Automate inter-warehouse replenishment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:116
msgid "Using reordering rules, it is possible to automate the process of replenishing one warehouse from another."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:119
msgid "To get started, navigate to :menuselection:`Inventory --> Products --> Products`, and then choose the product that will be replenished. From the product page, select the :guilabel:`Reordering Rules` smart button at the top of the form, and then on the next page, click :guilabel:`Create` to configure the form as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:124
msgid ":guilabel:`Location`: the location that the reordering rule will replenish when triggered, in this case, the incoming warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:126
msgid ":guilabel:`Min Quantity`: when the quantity on hand at the incoming warehouse falls below this number, the reordering rule will be triggered"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:128
msgid ":guilabel:`Max Quantity`: when the reordering rule is triggered, the product will be replenished at the incoming warehouse up to this quantity"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:130
msgid ":guilabel:`Multiple Quantity`: specify if the product should be replenished in batches of a certain quantity; for example, a product could be replenished in batches of 20"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:132
msgid ":guilabel:`UoM`: the unit of measure used for reordering the product; this value can simply be `Units`, or a specific unit of measurement for weight, length, etc."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:-1
msgid "A fully configured reordering rule."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:139
msgid "Finish by clicking :guilabel:`Save` and the reordering rule will be created. Now, when the scheduler runs automatically each day, a transfer will be created for each reordering rule that has been triggered."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:144
msgid "To manually trigger reordering rules, start from the :menuselection:`Inventory` module and select :menuselection:`Operation --> Run Scheduler`, then click the green :guilabel:`Run Scheduler` button in the pop-up that appears."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/management/warehouses/warehouse_replenishment_transfer.rst:148
msgid "After the scheduler runs, a delivery order and receipt will be created for the outgoing and incoming warehouses, respectively. Both the delivery order and receipt should be processed using the same method as detailed above."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes.rst:5
msgid "Advanced Routes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts.rst:5
msgid "Concepts"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:3
msgid "Organize a cross-dock in a warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:5
msgid "Cross-docking is the process of sending products that are received directly to the customers, without making them enter the stock. The trucks are simply unloaded in a *Cross-Dock* area in order to reorganize products and load another truck."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:13
msgid "For more information on how to organize your warehouse, read our blog: `What is cross-docking and is it for me? <https://www.odoo.com/blog/business-hacks-1/post/what-is-cross-docking-and-is-it-for-me-270>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:20
msgid "In the *Inventory* app, open :menuselection:`Configuration --> Settings` and activate the *Multi-Step Routes*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:27
msgid "Doing so will also enable the *Storage Locations* feature."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:29
msgid "Now, both *Incoming* and *Outgoing* shipments should be configured to work with 2 steps. To adapt the configuration, go to :menuselection:`Inventory --> Configuration --> Warehouses` and edit your warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:36
msgid "This modification will lead to the creation of a *Cross-Docking* route that can be found in :menuselection:`Inventory --> Configuration --> Routes`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:43
msgid "Configure products with Cross-Dock Route"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:45
msgid "Create the product that uses the *Cross-Dock Route* and then, in the inventory tab, select the routes *Buy* and *Cross-Dock*. Now, in the purchase tab, specify the vendor to who you buy the product and set a price for it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:55
msgid "Once done, create a sale order for the product and confirm it. Odoo will automatically create two transfers which will be linked to the sale order. The first one is the transfer from the *Input Location* to the *Output Location*, corresponding to the move of the product in the *Cross-Dock* area. The second one is the delivery order from the *Output Location* to your *Customer Location. Both are in state *Waiting Another Operation* because we still need to order the product to our supplier."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:68
msgid "Now, go to the *Purchase* app. There, you will find the purchase order that has been automatically triggered by the system. Validate it and receive the products in the *Input Location*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:77
msgid "When the products have been received from the supplier, you can go back to your initial sale order and validate the internal transfer from *Input* to *Output*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/cross_dock.rst:86
msgid "The delivery order is now ready to be processed and can be validated too."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:3
msgid "Sell stock from multiple warehouses using virtual locations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:5
msgid "While keeping stock and selling inventory from one warehouse might work for smaller companies, bigger companies might need to keep stock in, or sell from, multiple warehouses in multiple locations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:9
msgid "In Odoo, sometimes products included in a single sales order might take stock from two (or more) warehouses. In Odoo, pulling products from multiple warehouses to satisfy sales demands can be done by using *virtual locations*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:14
msgid "In order to create virtual locations in warehouses and proceed to the following steps, the :guilabel:`Storage Locations` and :guilabel:`Multi-Step Routes` features will need to be enabled in the :menuselection:`Settings` app."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:18
msgid "To do so, go to :menuselection:`Inventory --> Configuration --> Settings`, scroll down to the :guilabel:`Warehouse` section, and click the checkboxes next to :guilabel:`Storage Locations` and :guilabel:`Multi-Step Routes`. Then, :guilabel:`Save` the changes to finish."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:23
msgid "Create and configure a virtual parent location"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:25
msgid "Before creating any virtual stock locations, a new warehouse will need to be created. This new warehouse will act as a *virtual* warehouse, and will be the *parent* location of other physical warehouses."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:31
msgid "Virtual warehouses are great for companies with multiple physical warehouses. This is because a situation might arise when one warehouse runs out of stock of a particular product, but another warehouse still has stock on-hand. In this case, stock from these two (or more) warehouses could be used to fulfill a single sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:36
msgid "The \"virtual\" warehouse acts as a single aggregator of all the inventory stored in a company's physical warehouses, and is used (for traceability purposes) to create a hierarchy of locations in Odoo."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:41
msgid "Create a new warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:43
msgid "To create a new warehouse, go to :menuselection:`Inventory --> Configuration --> Warehouses`, and click :guilabel:`Create`. From here, the warehouse :guilabel:`Name` and :guilabel:`Short Name` can be changed, and other warehouse details can be changed under the :guilabel:`Warehouse Configuration` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:48
msgid "Under the :guilabel:`Shipments` heading, set the number of steps used to process :guilabel:`Incoming Shipments` and :guilabel:`Outgoing Shipments` by selecting between the :guilabel:`1 step`, :guilabel:`2 steps`, and :guilabel:`3 steps` radio buttons. The desired option for :guilabel:`Incoming Shipments` and :guilabel:`Outgoing Shipments` will depend on the warehouse's procurement process, and might differ for individual products or product categories."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:55
msgid ":doc:`How to choose the right flow to handle receipts and deliveries? </applications/inventory_and_mrp/inventory/management/shipments_deliveries>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:58
msgid "Under the :guilabel:`Resupply` heading, configure the method(s) for how the warehouse resupplies its inventory:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:61
msgid ":guilabel:`Resupply Subcontractors`: resupply subcontractors with components from this warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:62
msgid ":guilabel:`Manufacture to Resupply`: when products are manufactured, they can be manufactured in this warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:64
msgid ":guilabel:`Manufacture`: to produce right away, move the components to the production location directly and start the manufacturing process; to pick first and then produce, unload the components from the stock to input location first, and then transfer it to the production location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:68
msgid ":guilabel:`Buy to Resupply`: when products are bought, they can be delivered to this warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:69
msgid ":guilabel:`Resupply From`: automatically create routes to resupply this warehouse from another chosen warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:73
msgid "*Routes* can be set and configured directly from the :guilabel:`Warehouse` form, by clicking on the :guilabel:`Routes` smart button. Once the warehouse is configured, virtual *Locations* can be created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:-1
msgid "The edit screen for creating a new warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:81
msgid "In order to apply this virtual warehouse as the *parent* location of two *child* location warehouses, there need to be two warehouses configured with physical stock locations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:0
msgid "**Parent Warehouse**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:0
msgid ":guilabel:`Warehouse`: `Virtual Warehouse`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:0
msgid ":guilabel:`Location`: `VWH`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:0
msgid "**Child Warehouses**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:0
msgid ":guilabel:`Warehouses`: `Warehouse A` and `Warehouse B`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:0
msgid ":guilabel:`Locations`: `WHA/Stock` and `WHB/Stock`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:95
msgid "Create a virtual parent location"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:98
msgid "In order to take stock from multiple warehouses to fulfill a sales order, there need to be at least **two** warehouses acting as *child locations* of the *virtual parent location* warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:101
msgid "To create and edit *Locations*, go to :menuselection:`Inventory --> Configuration --> Locations`. All :guilabel:`Locations` are listed here, including the *Stock* :guilabel:`Location` of the virtual warehouse that was created. Click into the *Stock* :guilabel:`Location` for the virtual warehouse that was previously created (:dfn:`Warehouse Name/Stock`)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:106
msgid "Then, under the :guilabel:`Additional Information` section, change the :guilabel:`Location Type` from :guilabel:`Internal Location` to :guilabel:`View`. :guilabel:`Save` the changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:109
msgid "This identifies this :guilabel:`Location` as a *virtual location*, which is used to create a hierarchical structure for a warehouse and aggregate its *child locations*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:113
msgid "Products can *not* be stored in a :guilabel:`View` :guilabel:`Location Type`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:-1
msgid "Warehouse location types in location creation screen."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:120
msgid "Configure physical warehouse locations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:122
msgid "Navigate back to the :guilabel:`Locations` overview (via the breadcrumbs), and remove any filters in the :guilabel:`Search Bar`. Then, click into the first physical warehouse :guilabel:`Location` that was previously created to be a *child location*, and click :guilabel:`Edit`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:126
msgid "Under :guilabel:`Parent Location`, select the virtual warehouse from the drop-down menu, and :guilabel:`Save` changes. Then, navigate back to the :guilabel:`Locations` overview, and repeat this step for the second physical warehouse stock location. Be sure to :guilabel:`Save` changes again."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:130
msgid "Both locations are now *child locations* of the virtual warehouse *parent location*. This allows stock to be taken from multiple locations to fulfill a single sales order, if there is not enough stock in any one location (provided they are both tied to the same virtual warehouse *parent location*)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:136
msgid "Example flow: Sell a product from a virtual warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:139
msgid "To sell products from multiple warehouses using a virtual *parent* location in this flow, there must be at least **two** products and at least **two** warehouses configured - with at least **one** product with quantity on-hand in each warehouse, respectively."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:143
msgid "To create a new request for quotation, or RFQ, navigate to the :menuselection:`Sales` app, and click :guilabel:`Create` from the :guilabel:`Quotations` overview. Fill out the information on the new quotation by adding a :guilabel:`Customer`, and click :guilabel:`Add a product` to add the two products stored in the two warehouses."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:148
msgid "Then, click the :guilabel:`Other Info` tab on the sales order form. Under the :guilabel:`Delivery` section, change the :guilabel:`Warehouse` field value listed to the virtual warehouse that was previously created. Once the warehouse has been changed, click :guilabel:`Confirm` to convert the quotation into a sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:153
msgid "Now that the quotation has been confirmed as a sales order, click the :guilabel:`Delivery` smart button. From the warehouse delivery form, confirm that the :guilabel:`Source Location` value matches the :guilabel:`Warehouse` field value from the sales order. Both should list the virtual warehouse location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:159
msgid "The :guilabel:`Source Location` on the warehouse delivery form and the :guilabel:`Warehouse` under the :guilabel:`Other Info` tab on the sales order form *must* match in order for the products included in the sales order to be pulled from different warehouses."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:163
msgid "If the virtual warehouse is not the value in the :guilabel:`Source Location` field on the warehouse delivery form, then click :guilabel:`Edit`, make the change, and click :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:166
msgid "If the virtual warehouse is not the value in the :guilabel:`Warehouse` field on the sales order, then a new quotation may need to be generated."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:168
msgid "If whe :guilabel:`Warehouse` field is missing on the sales order form, then the virtual warehouse (and its children warehouses) may not have been set up correctly, in which case, review the documentation above again to make sure all settings/configuration were done properly."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:-1
msgid "Delivery order with matching source and child locations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:176
msgid "Finally, on the warehouse delivery form, under the :guilabel:`Detailed Operations` tab, confirm that the *Locations* values under the :guilabel:`From` column for each product matches to the *child locations* that are tied to the virtual *parent location*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:181
msgid "To view which *Locations* the products are coming from on the drop-down menus, click the :guilabel:`internal link (arrow)` icon to expand the *Location* information. If needed, it can be changed from here (granted there is quantity on hand for the product in that location)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:185
msgid "Once everything has been properly set, click :guilabel:`Validate` and then :guilabel:`Apply` to validate the delivery. Then, navigate back to the sales order form (via the breadcrumbs), and click :guilabel:`Create Invoice` to invoice for the sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:190
msgid "To use a virtual *parent* location as the default warehouse for sales orders, each salesperson can have the virtual warehouse assigned to them from the drop-down menu next to :guilabel:`Default Warehouse` on their employee form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/stock_warehouses.rst:-1
msgid "Default warehouse location on employee form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:5
msgid "Using Routes and Pull/Push Rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:7
msgid "In inventory management, the supply chain strategy determines when products should be fabricated, delivered to distribution centers, and made available in the retail channel."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:11
msgid "This kind of strategic process can be configured using *Routes*, featuring *Pull and Push Rules*. Once everything is properly configured, the inventory app can automatically generate transfers following the instructions given by the rules. Yes, Odoo simplifies your life."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:18
msgid "Inside the warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:20
msgid "Let’s imagine a generic warehouse plan, where you can find receiving docks, a quality control area, storage locations, picking and packing areas, and shipping docks. All products go through all these locations, which also trigger all the route's rules."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of a generic warehouse with stock and quality control area"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:29
msgid "In this example, vendor trucks unload pallets of ordered goods at receiving docks. Operators then scan the products in the receiving area. Some of these products are sent to a quality control area (those devoted to being used during the manufacturing process, for example), while others are directly stored in their respective locations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of a generic push to rule when receiving products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:38
msgid "Here is an example of a fulfillment route. In the morning, items are picked for all the orders that need to be prepared during the day. These items are picked from storage locations and moved to the picking area, close to where the orders are packed. Then, the orders are packed in their respective boxes and conveyors bring them close to the shipping docks, ready to be delivered to customers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of a generic pull from rule when preparing deliveries"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:50
#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:45
msgid "How does it work?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:53
msgid "Pull Rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:55
msgid "With *Pull Rules*, a demand for some products triggers procurements, while *Push Rules* are triggered by products arriving in a specific location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:59
msgid "We can say that *Pull Rules* are used to fulfill a customer order, a sale order. So, Odoo generates a need at the *Customer Location* for each product in the order. Because *Pull Rules* are triggered by a need, Odoo looks for a *Pull Rule* defined on the *Customer Location*. In our case, a delivery order pull rule that transfers products from the *Shipping Area* to the *Customer Location* is found, and a transfer between the two locations is created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:67
msgid "Then, Odoo finds another pull rule that tries to fulfill the need for the *Shipping Area*: the *Packing Rule* that transfers products from the *Packing Area* to the *Shipping Area*. And, finally, other rules are triggered until a transfer between the *Stock* and the *Picking Area* is created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:74
msgid "All these transfers are pre-generated by Odoo, starting from the end and going backwards. While working, the operator process these transfers in the opposite order: first the picking, then the packing, then the delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:81
msgid "Push Rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:83
msgid "On the other hand, *Push Rules* are much easier to understand. Instead of pre-generating documents based on needs, they are live-triggered when products arrive in a specific location. *Push Rules* basically say: \"when a product arrives at a specific location, move it to another location.\""
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:88
msgid "A simple example would be: when a product arrives in the *Receipt Area*, move them to the *Storage Location*. As different rules can be applied to different products, you can assign different storage locations for different products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:93
msgid "Another rule could be: when products arrive at a location, move them to the *Quality Control Area*. Then, once the quality check is done, move them to their *Storage Location*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:98
msgid "*Push Rules* can be triggered only if no *Pull Rule* pre-generated the upstream transfers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:102
msgid "Sets of rules like those are called routes. The grouping on the rule defines how products are grouped in the same transfer or not. For example, during the picking operation, all orders are grouped in one transfer, whereas the packing operation respects the grouping per customer order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:109
msgid "Use Routes and Rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:111
msgid "Since *Routes* are a collection of *Push and Pull Rules*, Odoo helps you manage advanced routes configuration such as:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:114
msgid "Manage product manufacturing chains;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:115
msgid "Manage default locations per product;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:116
msgid "Define routes within your warehouse according to business needs, such as quality control, after-sales services, or supplier returns;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:118
msgid "Help rental management by generating automated return moves for rented products."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:121
msgid "To configure a route such as one of those above, open the **Inventory Application** and go to :menuselection:`Configuration --> Settings`. Then, enable the *Multi-Step Routes* feature."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "activation of the multi-steps feature in Odoo Inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:130
msgid "The *Storage Locations* feature is automatically activated with the *Multi-Step Routes*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:133
msgid "Once this first step is completed, you have the choice between pre-configured routes or custom ones. Both are explained below."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:137
msgid "Pre-configured Routes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:139
msgid "Odoo’s pre-configured routes are available in the warehouses’ menu. To find it, go to :menuselection:`Inventory --> Configuration --> Warehouses`. There, open your warehouse and edit it to see the pre-configured routes for incoming and outgoing shipments."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "preconfigured warehouse in Odoo Inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:148
msgid "Some more advanced routes, such as pick-pack-ship, are already configured to make your life easier. Those are based on your choice for shipments. Once you made your choice, head to :menuselection:`Inventory --> Configuration --> Routes` to see the routes Odoo generated for you."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of all the preconfigured routes Odoo offers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:157
msgid "Opening one of those routes allows you to see on what you can apply the route. Here, all the selected product categories in the *YourCompany* warehouse are set up to follow the 3-steps route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of a route example applicable on category and warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:165
msgid "Easier for many businesses, this process might not fit yours. Thus, you can configure custom routes in which you can define your own rules, but also the source and destination location of each action. As an example, here are the rules for the pre-configured route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "rules example with push & pull actions in Odoo Inventory"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:175
msgid "Custom Routes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:177
msgid "To create a custom route, go to :menuselection:`Inventory --> Configuration --> Routes`, click on create, and choose the places where this route can be selected. Of course, combinations are available."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of a pick - pack - ship route as an example"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:186
msgid "Each place has a different behavior, so it is important to tick only the useful ones and adapt each route accordingly."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:189
msgid "When applying the route on a product category (:menuselection:`Inventory --> Configuration --> Product Categories`), all the rules configured in the route are applied to **every** product of the category. For example, this can be useful if you use the dropshipping process for all the products from the same category."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of a route applied to the \"all\" product category"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:199
msgid "The same behavior applies to the warehouses. If you tick *Warehouses*, all the transfers occurring inside the chosen warehouse, and meeting the conditions of the linked rules, then follow that route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the route menu when selecting applicable on warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:207
msgid "For the *Sales Order Lines*, it is more or less the opposite. You have to choose the route yourself when creating a quotation. This is pretty useful if some products go through different routes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the route menu when selecting applicable on sales order lines"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:215
msgid "If you work with this kind of route, it is important to keep in mind that it must be selected on the sales order, such as below."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the menu allowing to add new lines to sales orders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:222
msgid "Then, the route can be chosen on each line of the document."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the routes added to the sales orders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:228
msgid "Finally, there are routes that can be applied to products. Those work more or less like the product categories: once selected, you have to manually set on which product it must be applied."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the menu when selecting applicable on products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:236
msgid "To do so, go to :menuselection:`Inventory --> Master Data --> Products` and open the one on which you want to apply the route. Then go to the *Inventory tab* and select the route you’ve created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of a product form, where the route must be selected"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:244
msgid "If, prima facie, the routes’ configuration can appear quite easy, don’t forget that we haven’t set up any rule yet. If not harder to set up, those are vital to have working routings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:249
msgid "Rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:251
msgid "The rules are to be defined on the routes. To do so, go to :menuselection:`Inventory --> Configuration --> Routes`, then to the *Rules* section, and click on *Add a line* button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the rules menu, where it is possible to add new rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:259
msgid "The available rules trigger various actions. If Odoo offers *Push* and *Pull* rules, others are also available. Here are some explanations for all of them:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:263
msgid "**Pull From**: this rule is triggered by a need for the product in a specific location. The need can come from a sale order which has been validated or from a manufacturing order which requires a specific component. When the need appears in the destination location, Odoo generates a picking to fulfill this need."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:268
msgid "**Push To**: this rule is triggered by the arrival of some products in the defined source location. In the case you move products to the source location, Odoo generates a picking to move those products to the destination location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:272
msgid "**Pull & Push**: this rule allows generating pickings in the two situations explained above. This means that when products are required at a specific location, a transfer is created from the previous location to fulfill that need. This creates a need in the previous location and a rule is triggered to fulfill it. Once the second need is fulfilled, the products are pushed to the destination location and all the needs are fulfilled."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:278
msgid "**Buy**: when products are needed at the destination location, a request for quotation is created to fulfill the need."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:280
msgid "**Manufacture**: when products are needed in the source location, a manufacturing order is created to fulfill the need."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "overview of a transfer requested between the stock and the packing zone"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:287
msgid "You must also define the *Operation Type*. This operation allows defining which kind of picking is created from the rule. With our above screenshot, the created picking is, for example, an internal transfer."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:292
msgid "On the other hand, the *Supply Method*, allows defining what happens at the source location:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:295
msgid "**Take From Stock**: the products are taken from the available stock of the source location;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:297
msgid "**Trigger Another Rule**: the system tries to find a stock rule to bring the products to the source location. The available stock is ignored."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:300
msgid "**Take From Stock, if Unavailable, Trigger Another Rule**: the products are taken from the available stock of the source location. If there is no stock available, the system tries to find a rule to bring the products to the source location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:305
msgid "In the *Scheduling* section, you can determine how Odoo behaves when one of the chain's pickings is rescheduled. In case you decide to **Propagate Rescheduling**, the next move is also to be rescheduled. If you prefer having the choice to reschedule the next move, you can decide to receive an alert in the form of a *next activity*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:313
msgid "What about a full flow?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:315
msgid "Do you remember our Pick - Pack - Ship custom route? Let’s use it to try a full flow with an advanced custom route."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:318
msgid "First, a quick look at our rules and their supply methods: we have three rules, all **Pull From** rules. The supply methods are the following:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:322
msgid "**Take From Stock**: When products are needed in WH/Packing Zone, *Picks* (internal transfers from WH/Stock to WH/Packing Zone) are created from WH/Stock to fulfill the need."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:325
msgid "**Trigger Another Rule**: When products are needed in WH/Output, *Packs* (internal transfers from WH/Packing Zone to WH/Output) are created from WH/Packing Zone to fulfill the need."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:328
msgid "**Trigger Another Rule**: When products are needed in Partner Locations/Customers, Delivery Orders are created from WH/Output to fulfill the need."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "overview of all the transfers created by the pick - pack - ship route"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:336
msgid "This means that, when a customer orders products, a delivery order is created to fulfill the order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the operations created by a pull from transfer"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:344
msgid "If the source document is the same sale order, the status is not the same. In fact, the status is **Waiting Another Operation** if the previous transfer in the list is not done yet."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the transfers various status at the beginning of the process"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:352
msgid "To prepare the order, conveyors need products packed at the output area, so an internal transfer is requested from the packing zone."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the detailed operations for a transfer between the packing and output zones"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:359
msgid "Obviously, the packing zone needs products ready to be packed. So, an internal transfer is requested to the stock and employees can gather the required products from the warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the detailed operations for a transfer between the stock and packing zones"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:367
msgid "As explained in this documentation introduction, the last step in the process (here the delivery order) is the first to be triggered, which then triggers other rules until we reach the first step in the process (here, the internal transfer from to stock to the packing area). Now, everything is ready to be processed so the customer can get the ordered items."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:374
msgid "In our case, the product is delivered to the customer when all the rules have been triggered and the transfers done."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/concepts/use-routes.rst:-1
msgid "view of the transfers' status when all the process is done"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies.rst:5
msgid "Putaway & Removal Strategies"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:3
msgid "Putaway rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:5
msgid "Putaway is the process of routing products to appropriate storage locations upon shipment arrival. Odoo can accomplish this seamlessly using *putaway rules*, which dictate how products move through specified warehouse locations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:9
msgid "Upon shipment arrival, operations are generated based on putaway rules to efficiently move products to specified locations and ensure easy retrieval. Putaway rules can also prevent volatile substances from being stored in close proximity by directing them to different locations determined by the warehouse manager."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:15
msgid ":ref:`How push rules work <inventory/routes/concepts/use-routes/push>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:16
msgid ":ref:`Warehouse locations <inventory/warehouses/location-definition>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:19
msgid "Enable putaway rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:21
msgid "Begin by navigating to :menuselection:`Inventory app --> Configuration --> Settings`, then activate the :guilabel:`Multi-Step Routes` checkbox under the :guilabel:`Warehouse` heading. By doing so, the :guilabel:`Storage Locations` setting is automatically enabled as well. Finally, click :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:-1
msgid "In configs, for the Inventory app, check multi-step routes box to enable Putaway rules."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:31
msgid "Put away products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:33
msgid "Putaway rules are commonly used to move products to specific locations for easy retrieval. Thus, products are grouped in the same *product category* when a single putaway rule captures the group's storage needs."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:37
msgid "To manage where specific products are routed for storage, navigate to :menuselection:`Inventory app --> Configuration --> Putaway Rules`. Use the :guilabel:`Create` button to configure a new putaway rule on a :guilabel:`Product` or :guilabel:`Product Category` that the rule affects."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:41
msgid "In the same line, the :guilabel:`When product arrives in` location is where the putaway rule is triggered to create an operation to move the product to the :guilabel:`Store to` location. The :guilabel:`Store to` location must be a sublocation of the first (e.g. `WH/Stock/Fruits` is a specific, named location inside `WH/Stock` to make the products stored here easier to find)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:47
msgid "Ensure all apples are stored in the fruits section by filling the field :guilabel:`Store to` with the location `WH/Stock/Fruits` when the :guilabel:`Product`, `Apple` arrives in `WH/Stock`. Repeat this for all products and hit :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:0
msgid "Create putaway rules for apples and carrots."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:56
msgid "It is also possible to create and manage putaway rules for a single product by going to the product page and clicking the :guilabel:`Putaway Rules` smart button at the top of the page. If the button is not visible at first glance, select the :guilabel:`More` button at the top right to view additional smart buttons."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:64
msgid "Check whether putaway rules work as intended using the summary of internal product movements. In the :menuselection:`Inventory` app, select :menuselection:`Reporting --> Product Moves` and enable the :guilabel:`Internal` search filter on the :guilabel:`Filters` drop-down menu under the search bar at the top of the page. In this view, confirm that products are moved to the :guilabel:`Store to` location detailed in the putaway rule. More details in :ref:`this section <inventory/routes/strategies/putaway/wrong-location>`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:72
msgid "Use putaway rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:74
msgid "Once a putaway rule is configured, the product it specifies is automatically routed to the :guilabel:`Store to` location upon arriving in the :guilabel:`When product arrives in` location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:77
msgid "For example, on a putaway rule with the :guilabel:`When product arrives in` location set to `WH/Stock`, internal stock moves are automatically created when products first enter the warehouse. To trigger this putaway rule, begin by creating a :ref:`purchase order <inventory/purchase/manage_deals/manage>` (PO) to bring products into the warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:82
msgid "To create a :guilabel:`Request for Quotation` (RFQ), go to the :menuselection:`Purchase` app, and click :guilabel:`Create`. Then, add products to the :abbr:`RFQ (Request for Quotation)` by clicking :guilabel:`Add a line`, and selecting the desired product(s) from the drop-down menu in the :guilabel:`Product` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:87
msgid "Once ready, click :guilabel:`Confirm`. Doing so turns the :abbr:`RFQ (Request for Quotation)` into a :abbr:`PO (Purchase Order)`. Next, click :guilabel:`Send by Email` to send the :abbr:`PO (Purchase Order)` to the vendor, if needed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:-1
msgid "View purchase order for apples and carrots."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:95
msgid "Begin receiving the incoming shipment by selecting the :guilabel:`Receipt` smart button on the :abbr:`PO (Purchase Order)`. Click :guilabel:`Receive products` and then :guilabel:`Validate` to move products into the warehouse. Since the putaway rule is set to trigger when products arrive in stock, internal transfers are automatically created when products arrive in the :guilabel:`Destination Location`, `WH/Stock`. This ensures products entering the warehouse are stored in specific locations suitable for their storage needs."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:-1
msgid "In the WH reception operation, receive package of apples and carrots."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:107
msgid "Verify stock moves"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:109
msgid "Confirm whether the putaway rule worked as intended and that the products have been moved to the correct location using the :guilabel:`Stock On Hand` dashboard. View all products in stock in :menuselection:`Inventory app --> Reporting --> Inventory Report`. By default, the products are grouped by location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:114
msgid "Select a product's collapsable drop-down menu, which displays the current location(s) of the product. Then, select a :guilabel:`Location` drop-down menu to view a list of all stock movements in and out of each location. Each of these lines are records of a stock move, called a *stock move line*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:-1
msgid "Verify stock moves triggered by putaway rule in the Inventory Report."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:126
msgid "Trace products in wrong locations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:128
msgid "To trace products and associated documents for warehouse operations, use the :guilabel:`Product Moves` report in :menuselection:`Inventory app --> Reporting --> Product Moves`. View a product's warehouse operation history by selecting a product's drop-down menu. Each stock move line contains details about any movement of stock, such as manufacturing orders, inventory adjustments, or internal transfers. Click on a stock move line to view all the information in a comprehensive report."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:135
msgid "The stock move line is useful because the :guilabel:`Reference` displays the warehouse operation associated to the :guilabel:`Product`. Use the :guilabel:`From` and :guilabel:`To` location and associated :guilabel:`Source` documents to trace the product path and identify the type of operation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:141
msgid "It is also possible to view the stock moves of a product directly from the product page. Open the desired product page by navigating to :menuselection:`Inventory --> Products --> Products` and select the product. From there, click on the :guilabel:`Product Moves` smart button, then click the product's collapsable drop-down menu from the list. This displays the stock moves history of the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:150
msgid "A putaway rule was purposely set up incorrectly on `Apple`, so the product was moved from `WH/Stock` to `WH/Stock/Shelf 1` instead of the expected location, `WH/Stock/Fruits`. To trace the path the apple moved and identify the cause of the wrong stock move, open the :guilabel:`Product Moves` report in :menuselection:`Inventory app --> Reporting --> Product Moves`. The apple's drop-down menu, when opened, displays a list of stock moves of the apple. line to open a report that is useful to trace the path the product moved and identify the cause of the wrong stock move."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:158
msgid "The :guilabel:`To` field displays where the product currently is, `WH/Stock/Shelf 1`, which is the wrong location. The :guilabel:`From` location is the vendor's location, which is expected since the :guilabel:`Source` of the stock move is a :abbr:`PO (Purchase Order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:162
msgid "The :guilabel:`Reference` operation, `WH/IN/00015`, which is a warehouse reception of products from the vendor, would further explain why the apples were moved to the wrong location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:0
msgid "Open stock move report"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:169
msgid "To follow an operation identified from the :guilabel:`Product Moves` report, navigate to :menuselection:`Inventory --> Operations --> Transfers`. This is the page that displays all warehouse transfers— internal or external. Search for and click on the corresponding :guilabel:`Reference` operation to view the document explaining why the product was moved to the wrong location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:176
msgid "When there are too many records, use either the :guilabel:`Filters` or :guilabel:`Group by` features to sort and :ref:`find desired records <inventory/routes/strategies/putaway/use-advanced-filters>`. It is useful to search exclusively for the receipt operation type because putaway rules store products *into* a specific stock location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:183
msgid "Continuing to diagnose why the product, `Apple`, was placed in `WH/Stock/Shelf 1`, navigate to the list of all transfers in :menuselection:`Inventory --> Operations --> Transfers`. Click on the list item where the :guilabel:`Reference` field matches the `WH/IN/00015` operation identified in the :ref:`previous example <inventory/strategies/putaway/stock-moves>` to open the receipt."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:0
msgid "In the Transfers page in the Inventory app, select the desired transfer to view the\n"
"record."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:194
msgid "This receipt describes which products were received from the supplier, with the affiliated :abbr:`PO (Purchase Order)` linked in the :guilabel:`Source Document` field. On the warehouse reception document, the field :guilabel:`Destination Location` shows where the product is received upon entering the warehouse."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:199
msgid "Clicking on the :guilabel:`≣ (Detailed Operations)` icon to the right of the product line opens a window that shows the product was moved to the wrong location. Based on this information it can be gathered that the putaway rule was triggered but the location was set incorrectly. Rectify this in :menuselection:`Inventory --> Configuration --> Putaway Rules`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:0
msgid "Click Detailed Operations button on the right of warehouse transfers page to the right\n"
"of the WH reception document."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:0
msgid "Show putaway rule in detailed operations popup."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:216
msgid "Advanced filter search"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:218
msgid "Keep track of and trace products on the :guilabel:`Product Moves` report by navigating to :menuselection:`Inventory app --> Reporting --> Product Moves` and use the :guilabel:`Filters` and :guilabel:`Group by` features to stay updated on warehouse operations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:222
msgid "Transfers based on putaway rules can be found by toggling on the :guilabel:`Internal` filter as mentioned in this :ref:`tip <inventory/routes/strategies/putaway/internal-stock-moves>` previously. Other useful filters and groupbys intended for reporting on the company's internal operations include:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:227
msgid "Filter by :guilabel:`Incoming` and :guilabel:`To Do` to display shipments from vendors yet to be processed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:0
msgid "Filter warehouse transfer records by Incoming shipments and processes ToDo."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:234
msgid "Use custom filters to search for a specific product by its name, :ref:`lot/serial number <inventory/management/lots-serial-numbers>` or barcode. Create a custom filter by clicking on :guilabel:`Filters`. Click :guilabel:`Add Custom Filter`, fill in the identifying information, and click :guilabel:`Apply`. Now that the custom filter is active, click on the :guilabel:`Filters` button again to create any additional filters."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:239
msgid "Group by :guilabel:`Date`: View all product moves on a specific date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:240
msgid "Group by :guilabel:`From`: Create a custom filter that displays all locations that currently store at least 1 product. This is useful to view all the locations and sublocations to optimize storage space."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:243
msgid ":guilabel:`Favorite` the current search with filters applied. This feature is useful to apply the filters promptly, especially if this search is often used."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/putaway.rst:0
msgid "Use the star button under the search bar to save current search as a favorite view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:3
msgid "What is a Removal Strategy (FIFO, LIFO, and FEFO)?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:5
msgid "Usually, *Removal Strategies* are defined in picking operations to select the best products to optimize the distance for the worker, for quality control purposes, or to first move the products with the closest expiration date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:9
msgid "When a product movement needs to be done, Odoo finds available products that can be assigned to the transfer. The way Odoo assigns these products depends on the *Removal Strategy* defined in the *Product Category* or on the *Location*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:14
msgid "What happens inside the warehouse?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:16
msgid "Imagine a generic warehouse plan, with receiving docks and area, storage locations, picking and packing areas, and shipping docks. All products go through all these locations, but some rules, such as removal strategies, can have an effect on which products are taken for the pickings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "empty stock waiting for deliveries at the docks."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:24
msgid "Here, vendor trucks unload pallets of goods at the docks. Then, operators scan the products in the receiving area, with the receiving date and, if the product has an expiration date, the expiration date. After that, products are stored in their respective locations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "products entering stock via the receiving area."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:32
msgid "Next, several orders for the same product are made, but you didn’t receive the goods the same day and they don’t have the same expiration date. In that situation, you logically prefer sending those with the closest date first. Depending on the removal strategy you chose, Odoo generates a transfer with the products fitting your settings the best."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "products being packed at packing area for delivery, taking expiration dates into account."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:42
msgid "On the transfer form, you can find the product’s lot/serial number to pick for delivery."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:48
msgid "First In, First Out (FIFO)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:50
msgid "When using a **First In, First Out** strategy, a demand for some products triggers a removal rule which requests a transfer for the lot/serial number that has entered your stock the first."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:53
msgid "To be clearer, let’s imagine that you have three lots of nails in your warehouse. Those three have the following lot numbers: 00001, 00002, 00003, each with 5 nails boxes in it. 00001 entered the stock on the 23rd of May, 00002 on the 25th of May, and 00003 on the 1st of June. A customer orders you 6 boxes on the 11th of June. With the *FIFO* strategy selected, a transfer is requested for the five boxes of 00001 and one of the boxes in 00002 because 00001 has entered your stock before the others. The box from 00002 is taken because it has the oldest enter date after 00001."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:60
msgid "So, for every order of a product with the *FIFO* strategy selected, Odoo requests a transfer for the good that has been in your stock for the longest period."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:64
msgid "Last In, First Out (LIFO)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:66
msgid "The same way as for FIFO, the **Last In, First Out** strategy is based on moving products based on the date they entered the stock. Here, a demand for some products triggers a removal rule that requests a transfer for the lot/serial number that has entered your stock the last."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:70
msgid "To better understand, let’s imagine three lots of screws in your warehouse. Those three have the following numbers: 10001, 10002, 10003, each with 10 screw boxes in it. 10001 has entered the stock on the 1st of June, 10002 on the 3rd of June, and 10003 on the 6th of June. A customer orders 7 boxes on the 8th of June. With the *LIFO* strategy selected, a transfer is requested for seven boxes of 10003 because that lot is the last one to have entered the stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:76
msgid "So, basically, for every order of a product with the *LIFO* strategy used, a transfer for the last one to have entered the stock is requested."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:80
msgid "This strategy is banned in many countries and can lead to only have old or obsolete products in your stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:84
msgid "First Expire, First Out (FEFO)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:86
msgid "The **First Expire, First Out** strategy is a bit different from the two others. Here, it is the expiration date that is important and not the date the product entered the stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:89
msgid "Let’s imagine three lots of 6-eggs boxes (in this specific case, don’t forget to use :doc:`units of measure <../../management/products/uom>`). Those three have the following numbers: 20001, 20002, and 20003, each with 5 boxes in it. 20001 has entered the stock on the 1st of July and expires on the 15th of July, 20002 on the 2nd and expires on the 14th of July, and 20003 on the 4th and expires on the 21st of July. A customer orders 6 boxes on the 5th of July. With the *FEFO* strategy selected, a transfer is requested for the five boxes of 20002 and one from 20001. The transfer for all the boxes of the lot 20002 is because they have the closest expiration date. The transfer also requests one box from 20001 because it’s the lot that expires the sooner after 20002."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:98
msgid "Then, you can remember that for every order of a product with the *FEFO* strategy, a transfer is requested for the product that has the nearest expiration date from the order date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:102
msgid "Use Removal Strategies"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:104
msgid "To identify some units from other ones, you need to track them, either by *lot* or by *serial number*. To do so, go to :menuselection:`Configuration --> Settings`. Then, activate *Storage Location*, *Multi-Steps Routes*, and *Lots & Serial Numbers*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "features to enable in order to properly use removal strategies."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:113
msgid "To work with the *FEFO* strategy, activate the *Expiration Dates* feature."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:115
msgid "Next, you need to define your removal strategy, on *Product Categories* via :menuselection:`Inventory --> Configuration --> Product Categories`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "force removal strategy set up as first in first out."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:123
msgid "FIFO (First In, First Out)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:125
msgid "As said, a *FIFO* strategy implies that products stocked first move out first. Companies should use that method if they are selling products with short demand cycles, such as clothes, and to ensure they are not stuck with outdated styles in stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:129
msgid "For this example, we created three lots of white shirts. Those are from the All/Clothes category, where we put *FIFO* as the removal strategy. In our stock location (WH/Stock), we now find the three lots available."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "view of the white shirt lots inventory valuation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:137
msgid "The lot 000001 contains 5 shirts, 000002 contains 3 shirts, and 000003 contains 2. As it can be seen above, 000001 has entered the stock first. Let’s create a sale order of six white shirts to check that products from that lot are the first ones to move out."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:141
msgid "On the delivery order linked to the picking, you can see that the oldest lot numbers have been reserved thanks to the *FIFO* strategy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "two lots being reserved for sell with the FIFO strategy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:149
msgid "LIFO (Last In, First Out)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:151
msgid "With a *LIFO* strategy, that’s quite the opposite. In fact, the products that are brought the last move out the first. It is mostly used in case of products without a shelf life."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:154
msgid "Even if our white shirts are clothes, we can say that they are timeless. So, let’s use them to test our *LIFO* strategy. Once again, open the product category via :menuselection:`Inventory --> Configuration --> Product Categories` and change the removal strategy to *LIFO*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "last in first out strategy set up as forced removal strategy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:162
msgid "Now, create a sale order for 4 white shirts and check that the reserved products are from lots 000003 and 000002."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "two lots being reserved for sell with the LIFO strategy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:170
msgid "Don’t forget that the *LIFO* strategy is banned in many countries!"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:173
msgid "FEFO (First Expiry, First Out)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:175
msgid "With the *FEFO* strategy, the way products are picked is not based on the reception date. In this particular case, they are dispatched according to their expiration date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:179
msgid "To have more information about Expiration date, please have a look at :doc:`the related doc <../../management/lots_serial_numbers/expiration_dates>`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:182
msgid "By activating *Expiration Dates*, it becomes possible to define different dates on the serial/lot numbers to be used in *FEFO*. These dates can be set by going to :menuselection:`Inventory --> Master Data --> Lots/Serial Numbers`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "view of the removal date for 0000001."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:190
msgid "Lots are picked based on their removal date, from earliest to latest. Lots without a removal date defined are picked after lots with removal dates."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:194
msgid "Other dates are for informational and reporting purposes only. If not removed from the stock, lots that are past the expiration dates may still be picked for delivery orders!"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:197
msgid "To use the *FEFO* strategy, once again go to :menuselection:`Inventory --> Configuration --> Product Categories` and choose *FEFO* as the *Force Removal Strategy*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "view of the FEFO strategy being set up as forced removal strategy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:204
msgid "For this particular case, let’s use hand cream. As usual, we have three lots of them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:207
msgid "**Lot / Serial No**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:207
msgid "**Product**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:207
msgid "**Expiration Date**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:209
msgid "0000001"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:209
#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:211
#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:213
msgid "Hand Cream"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:209
msgid "09/30/2019"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:211
msgid "0000002"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:211
msgid "11/30/2019"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:213
msgid "0000003"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:213
msgid "10/31/2019"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:216
msgid "When we realize a sale for 25 units of Hand Cream, we can see that the lot numbers which have been automatically reserved by Odoo are the ones with the closest expiration date, meaning 0000001 and 0000003."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/routes/strategies/removal.rst:-1
msgid "two hand cream lots reserved for sell with the FEFO strategy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping.rst:5
msgid "Shipping"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation.rst:5
msgid "Shipping Operations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:3
msgid "How to cancel a shipping request to a shipper?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:8
msgid "Odoo can handle various delivery methods, including third party shippers. Odoo will be linked with the transportation company tracking system."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:12
msgid "It will allow you to manage the transport company, the real prices and the destination."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:15
msgid "You can easily cancel the request made to the carrier system."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:18
msgid "How to cancel a shipping request?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:20
msgid "If the delivery order is not **Validated**, then the request hasn't been made. You can choose to cancel the delivery or to change the carrier."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:24
msgid "If you have clicked on **Validate**, the request has been made and you should have received the tracking number and the label. You can still cancel the request. Simply click on the **Cancel** button next to the **Carrier Tracking Ref**:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:32
msgid "You will now see that the shipment has been cancelled."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:37
msgid "You can now change the carrier if you wish."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:40
msgid "How to send a shipping request after cancelling one?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:42
msgid "After cancelling the shipping request, you can change the carrier you want to use. Confirm it by clicking on the **Send to shipper** button. You will get a new tracking number and a new label."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:50
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:115
msgid ":doc:`invoicing`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/cancel.rst:51
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:116
msgid ":doc:`multipack`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:3
msgid "Use dropshipping to ship directly from suppliers to customers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:5
msgid "Dropshipping is an order fulfillment strategy that allows sellers to have items shipped directly from suppliers to customers. Normally, a seller purchases a product from a supplier, stores it in their inventory, and ships it to the end customer once an order is placed. With dropshipping, the supplier is responsible for storing and shipping the item. This benefits the seller by reducing inventory costs, including the price of operating warehouses."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:12
msgid "Configure products to be dropshipped"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:14
msgid "To use dropshipping as a fulfillment strategy, navigate to the :menuselection:`Purchase` app and select :menuselection:`Configuration --> Settings`. Under the :guilabel:`Logistics` heading, click the :guilabel:`Dropshipping` checkbox, and :guilabel:`Save` to finish."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:18
msgid "Next, go to the :menuselection:`Sales` app, click :menuselection:`Products --> Products` and choose an existing product or select :guilabel:`Create` to configure a new one. On the :guilabel:`Product` page, make sure that the :guilabel:`Can be Sold` and :guilabel:`Can be Purchased` checkboxes are enabled."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:-1
msgid "Enable the \"Can be Sold\" and \"Can be Purchased\" checkboxes on the product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:27
msgid "Click on the :guilabel:`Purchase` tab and specify a vendor and the price that they sell the product for. Multiple vendors can be added, but the vendor at the top of the list will be the one automatically selected for purchase orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:-1
msgid "The product form with a vendor specified."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:35
msgid "Finally, select the :guilabel:`Inventory` tab and enable the :guilabel:`Dropship` checkbox in the :guilabel:`Routes` section."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:-1
msgid "Enable the Dropship option in the product inventory tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:43
msgid "Fulfill orders using dropshipping"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:45
msgid "When a customer completes an online purchase for a dropshipped product, a sales order will be automatically created with an associated request for quotation (:abbr:`RFQ (Request for Quotation)`) for the supplier. Sales orders can be viewed in the :menuselection:`Sales` app by selecting :menuselection:`Orders --> Orders`. Click the :guilabel:`Purchase` smart button at the top right of a sales order to view the associated :abbr:`RFQ (Request for Quotation)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:52
msgid "Dropship sales orders can also be created manually through the :menuselection:`Sales` app by selecting :menuselection:`Orders --> Orders --> Create` and adding a product configured for dropshipping."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:-1
msgid "A dropship sales order with the Purchase smart button in the top right corner."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:60
msgid "Once the :abbr:`RFQ (Request for Quotation)` is confirmed, it becomes a purchase order and a dropship receipt is created and linked to it. The receipt can be viewed by clicking the :guilabel:`Receipt` smart button in the top right corner of the purchase order form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:-1
msgid "A dropship purchase order with the Receipt smart button in the top right corner."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:68
msgid "The dropship receipt will list the supplier in the :guilabel:`Receive From` section and the customer in the :guilabel:`Destination Location` section. Upon delivery of the product to the customer, click on the :guilabel:`Validate` button at the top left of the dropship receipt to confirm the delivered quantity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:-1
msgid "Validate the dropship receipt after delivery."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:77
msgid "To view all dropship orders, simply navigate to the :menuselection:`Inventory` :guilabel:`Overview` dashboard and click the teal :guilabel:`# TO PROCESS` button on the :guilabel:`Dropship` card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/dropshipping.rst:-1
msgid "Click the green button on the Dropship card to view all dropship orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:3
msgid "How to invoice the shipping cost to the customer?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:8
msgid "There are two ways to invoice the shipping costs:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:10
msgid "Agree with the customer over a cost and seal it down in the sale order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:13
msgid "Invoice the real cost of the shipping."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:18
msgid "To configure the price of your delivery methods, go to the **Inventory** app, click on :menuselection:`Configuration --> Delivery --> Delivery Methods`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:21
msgid "You can manually set a price for the shipping: It can be fixed or based on rules."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:24
msgid "Or you can use the transportation company computation system. Read the document :doc:`../setup/third_party_shipper`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:28
msgid "How to invoice the shipping costs to the customer?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:31
msgid "Invoice the price set on the sale order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:33
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:55
msgid "On your sale order, choose the carrier that will be used. Click on **Delivery Method** to choose the right one."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:39
msgid "The price is computed when you **save** the sale order or when you click on **Set price**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:42
msgid "To invoice the price of the delivery charge on the sale order, click on **Set price**, it will add a line with the name of the delivery method as a product. It may vary from the real price."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:46
msgid "When you create the invoice, it will take the price set on the sale order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:53
msgid "Invoice the real shipping costs"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:61
msgid "The price is computed when you **save** the sale order. Confirm the sale order and proceed to deliver the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:64
msgid "The real shipping cost is computed when the delivery order is validated, you can see the real cost in the chatter of the delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:70
msgid "Go back to the sale order, the real cost is now added to the sale order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:76
msgid "When you create the invoice, it will take the price computed by the carrier."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:83
msgid "If you split the delivery and make several ones, each delivery order will add a line to the sale order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:87
msgid ":doc:`../setup/third_party_shipper`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/invoicing.rst:88
msgid ":doc:`labels`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:3
msgid "Change shipping label size"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:8
msgid "In Odoo, there are a variety of different types of shipping labels that can be selected for delivery orders. Depending on the types of shipping packages used, different label sizes may be more appropriate, and can be configured to fit the package."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:15
msgid "In the :menuselection:`Inventory` module, go to :menuselection:`Configuration --> Delivery --> Shipping Methods.` Choose a delivery method and click :guilabel:`Edit`. For the following example, *FedEx International* will be used."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:-1
msgid "Different shipping methods."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:23
msgid "In the :guilabel:`Configuration` tab, under :guilabel:`Label Type`, choose one of the label types available. The availability will vary depending on the carrier. :guilabel:`Save` the changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:-1
msgid "Select a label type."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:30
msgid "When a sales order with the corresponding shipping company is confirmed and a delivery order is validated, the shipping label will be automatically created as a PDF and appear in the :guilabel:`Chatter`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:37
msgid "In the :menuselection:`Sales` application, click :guilabel:`Create` and select an international customer. Click :guilabel:`Add A Product` and select an item. Click :guilabel:`Add Shipping`, select a shipping method, then click :guilabel:`Get Rate`, and finally, click :guilabel:`Add`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:-1
msgid "Add a shipping method and rate to a sales order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:45
msgid "Once the quotation is confirmed by clicking :guilabel:`Confirm`, a :guilabel:`Delivery` smart button will appear."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:-1
msgid "Delivery order smart button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:52
msgid "Once the delivery order is validated by clicking :guilabel:`Validate` in the delivery order, the shipping documents appear in the :guilabel:`Chatter`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:-1
msgid "Shipping PDF documents."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:60
msgid "Example labels"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:62
msgid "The default :guilabel:`Label Type` is :guilabel:`Paper Letter`. An example of a FedEx letter sized label is:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:-1
msgid "Full page letter size FedEx shipping label."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:69
msgid "For comparison, an example of a FedEx bottom-half label is:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/label_type.rst:-1
msgid "Half page letter size FedEx shipping label."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:3
#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:85
msgid "How to print shipping labels?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:8
msgid "Odoo can handle various delivery methods, including third party shippers linked with the transportation company tracking system. It allows you to manage the transport company, the real prices and the destination. And finally, you will be able to print the shipping labels directly from Odoo."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:18
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:17
msgid "Install the shipper company connector module"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:20
msgid "In the **Inventory** module, click on :menuselection:`Configuration --> Settings`. Under **Shipping Connectors**, flag the transportation companies you want to integrate :"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:27
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:26
msgid "Then click on **Apply**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:30
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:34
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:33
msgid "Configure the delivery method"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:32
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:36
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:35
msgid "To configure your delivery methods, go to the **Inventory** module, click on :menuselection:`Configuration --> Delivery Methods`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:35
msgid "The delivery methods for the chosen shippers have been automatically created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:41
msgid "In the **Pricing** tab, the name of the provider means that the delivery will be handled and computed by the shipper system."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:44
msgid "The configuration of the shipper is split into two columns :"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:46
msgid "The first one is linked to **your account** (develop key, password,...). For more information, please refer to the provider website."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:49
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:62
msgid "The second column varies according to the **provider**. You can choose the packaging type, the service type, the weight unit..."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:52
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:65
msgid "Uncheck **Test Mode** when you are done with the testings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:55
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:77
msgid "Company configuration"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:57
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:79
msgid "In order to compute the right price, the provider needs your company information. Be sure your address and phone number are correctly encoded."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:64
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:86
msgid "To check your information, go to the **Settings** application and click on **General Settings**. Click on the first link **Configure your company data**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:68
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:90
msgid "Product configuration"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:70
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:92
msgid "The shipper companies need the weight of your product, otherwise the price computation cannot be done."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:73
msgid "Go the **Sales** module, click on :menuselection:`Sales --> Products`. Open the products you want to ship and set a weight on it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:80
msgid "The weight on the product form is expressed in kilograms. Don't forget to do the conversion if you are used to the imperial measurement system."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:87
msgid "The delivery order created from the sale order will take the shipping information from it, but you can change the carrier if you want to."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:90
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:135
msgid "If you create a delivery transfer from the inventory module, you can add the third party shipper in the additional info tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:96
msgid "Click on **Validate** to receive the tracking number and **the label(s)**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:98
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:151
msgid "The label to stick on your package is available in the history underneath :"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:104
msgid "Click on it to open the document and print it :"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/labels.rst:110
msgid "If you are doing multi-packages shippings, most of the time, there will be one label per package. Each label will appear in the delivery history."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:3
msgid "Multi-package shipments"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:5
msgid "In some cases, a delivery order with multiple items may need to be shipped in more than one package. This may be necessary if the items are too large to ship in a single package, or if certain items cannot be packaged together. Shipping a single delivery order in multiple packages provides flexibility for how each item is packaged, without the need to create multiple delivery orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:13
msgid "In order to split a delivery order across multiple packages, the *Packages* setting must be enabled. To do so, navigate to :menuselection:`Inventory --> Configuration --> Settings`, then enable the checkbox next to :guilabel:`Packages`. Click :guilabel:`Save` to confirm the change."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:-1
msgid "The Packages setting on the Inventory app settings page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:24
msgid "Ship items in multiple packages"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:26
msgid "To split items in the same delivery order across multiple packages, begin by navigating to :menuselection:`Inventory --> Delivery Orders`, then select a delivery order that has multiple items, a multiple quantity of the same item, or both."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:30
msgid "On the :guilabel:`Operations` tab, select the :guilabel:`⁞≣ (menu)` icon in the line of the product that will be shipped in the first package."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:-1
msgid "The menu icon for a product in a delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:37
msgid "This makes a :guilabel:`Detailed Operations` pop-up window appear. In the table at the bottom of the pop-up window, the :guilabel:`Reserved` column shows the total quantity of the product included in the delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:41
msgid "If the full quantity will be shipped in the first package, enter the number from the :guilabel:`Done` column in the :guilabel:`Reserved` column. If less than the full quantity will be shipped in the first package, enter a smaller number than the one that appears in the :guilabel:`Reserved` column. Click :guilabel:`Confirm` to confirm the :guilabel:`Done` quantities and close the pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:-1
msgid "The Detailed Operations pop-up for a product in a delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:51
msgid "Repeat the same steps for every item quantity that is included in the first package. Then, click :guilabel:`Put In Pack` to create a package with all of the selected items."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:-1
msgid "The Put In Pack button on a delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:58
msgid "For the next package, follow the same steps as detailed above, marking the quantity of each item to be included in the package as :guilabel:`Done` before clicking :guilabel:`Put In Pack` on the delivery order. Continue doing so until the full quantity of all items are added to a package."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:62
msgid "Finally, after all of the packages have been shipped, click :guilabel:`Validate` to confirm that the delivery order has been completed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:66
msgid "After one or more packages are created, a :guilabel:`Packages` smart button appears in the top-right corner of the delivery order. Click the :guilabel:`Packages` smart button to go to the :guilabel:`Packages` page for the delivery order, where each package can be selected to view all of the items included in it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:0
msgid "The Packages smart button on a delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:76
msgid "Create a backorder for items to be shipped later"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:78
msgid "If some items will be shipped at a later date than others, there is no need to put them in a package until they are ready to be shipped. Instead, create a backorder for the items being shipped later."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:81
msgid "Begin by shipping the items that will be shipped immediately. If they will be shipped in multiple packages, follow the :ref:`steps above <inventory/shipping/multiple-packages>` to package them as required. If they will be shipped in a single package, simply mark in the :guilabel:`Done` column the quantity of each item being shipped, but **do not** click the :guilabel:`Put In Pack` button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:86
msgid "After all quantities being shipped immediately are marked as :guilabel:`Done`, click the :guilabel:`Validate` button, and a :guilabel:`Create Backorder?` pop-up window appears. Then, click the :guilabel:`Create Backorder` button. Doing so confirms the items being shipped immediately and creates a new delivery order for the items that will be shipped later."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:-1
msgid "The Create Backorder? pop-up window."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:95
msgid "The backorder delivery order will be listed in the chatter of the original delivery order in a message that reads :guilabel:`The backorder WH/OUT/XXXXX has been created.`. Click on :guilabel:`WH/OUT/XXXXX` in the message to view the backorder delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:-1
msgid "The backorder delivery order listed in the chatter of the original delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:103
msgid "The backorder delivery order can also be accessed by navigating to :menuselection:`Inventory`, clicking the :guilabel:`# Back Orders` button on the :guilabel:`Delivery Orders` card, and selecting the delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:-1
msgid "The Back Orders button on the Delivery Orders card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:111
msgid "Once the remaining items are ready to be shipped, navigate to the backorder delivery order. The items can be shipped in a single package by clicking :guilabel:`Validate` and selecting :guilabel:`Apply` on the :guilabel:`Immediate Transfer?` pop-up window that appears, or shipped in multiple packages by following the steps detailed in the section above."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/operation/multipack.rst:116
msgid "It is also possible to ship out some of the items while creating another backorder for the rest. To do so, simply follow the same steps used to create the first backorder."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup.rst:5
msgid "Shipping Setup"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:3
msgid "How to setup a delivery method?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:8
msgid "Odoo can handle various delivery methods, but it is not activated by default. Delivery methods can be used for your sale orders, your deliveries but also on your e-commerce."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:12
msgid "Delivery methods allow you to manage the transport company, the price and the destination. You can even integrate Odoo with external shippers to compute the real price and the packagings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:20
msgid "Install the inventory module"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:22
msgid "Delivery methods are handled by the **Delivery costs** module. Go to **Apps** and search for the module. You should remove the **Apps** filter in order to see it :"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:30
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:29
msgid "If you want to integrate delivery methods in your e-commerce, you'll have to install the **eCommerce Delivery** module."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:39
msgid "First set a name and a transporter company."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:44
msgid "Then you'll have to set the pricing. It can be fixed or based on rules."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:46
msgid "If the price is fixed, tick **Fixed price**. You'll just have to define the price. If you want the delivery to be free above a certain amount, tick the option **Free if Order total is more than** and set a price."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:54
msgid "If the price varies according to rules, tick **Based on Rules**. Click on **add an item to a pricing rule**. Choose a condition based on either the weight, the volume, the price or the quantity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:61
msgid "Finally you can limit the delivery method to a few destinations. The limit can be applied to some countries, states or even zip codes. This feature limits the list of countries on your e-commerce."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:69
msgid "You can integrate Odoo with external shippers in order to compute the real price and packagings, and handle the printing the shipping labels. See :doc:`third_party_shipper`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:74
msgid "Delivery process"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:77
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:110
msgid "Sale order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:82
msgid "You can now choose the **Delivery Method** on your sale order. If you want to invoice the price of the delivery charge on the sale order, click on **Set price**, it will add a line with the name of the delivery method as a product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:88
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:130
msgid "Delivery"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:90
msgid "You can add or change the delivery method on the delivery itself."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:95
msgid "On the delivery, check the **Carrier Information**. The carrier is the chosen delivery method."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:99
msgid ":doc:`third_party_shipper`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/delivery_method.rst:100
#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:158
msgid ":doc:`../operation/invoicing`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:3
msgid "How to get DHL credentials for integration with Odoo?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:5
msgid "In order to use the Odoo DHL API, you will need:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:7
msgid "A DHL.com SiteID"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:9
msgid "A DHL Password"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:11
msgid "A DHL Account Number"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:15
msgid "Getting SiteID and password for countries other than United States (UK and Rest of the world)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:17
msgid "You should contact DHL account manager and request integration for XML Express API. The presales should provide you live credentials."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:20
msgid "Getting SiteID and Password for  United States"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/dhl_credentials.rst:22
msgid "You need to write to xmlrequests@dhl.com along with your full Account details like account number, region, address, etc. to get API Access."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:3
msgid "How to integrate a third party shipper?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:8
msgid "Odoo can handle various delivery methods, including third party shippers. Odoo can be linked with the transportation company tracking system. It will allow you to manage the transport company, the real prices and the destination."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:19
msgid "In the inventory module, click on :menuselection:`Configuration --> Settings`. Under **Shipping Connectors**, flag the transportation companies you want to integrate :"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:38
msgid "The delivery methods for the chosen shippers have been automatically created. Most of the time, there will be **2** delivery methods for the same provider: one for **international** shipping and the other for **domestic** shipping."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:43
msgid "You can create other methods with the same provider with other configuration, for example the **Packaging Type**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:46
msgid "You can change the **Name** of the delivery method. This is the name that will appear on your ecommerce."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:49
msgid "Flag **Shipping enabled** when you are ready to use it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:54
msgid "In the pricing tab, the name of the provider chosen under the **Price computation** means that the pricing will be computed by the shipper system."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:57
msgid "The configuration of the shipper is split into two columns:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:59
msgid "The first one is linked to **your account** (developer key, password,...). For more information, please refer to the provider website."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:67
msgid "Finally you can limit the delivery method to a few destinations. You can limit it to some countries, states or even zip codes. This feature limits the list of countries on your e-commerce. It is useful for the domestic providers. For example, USPS US only delivers from the United States to the United States."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:95
msgid "Go the menu :menuselection:`Sales --> Sales --> Products`. Open the products you want to ship and set a weight on it."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:102
msgid "The weight on the product form is expressed in kilograms. Don't forget to make the conversion if you are used to the imperial measurement system."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:107
msgid "Sale process"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:115
msgid "You can now choose the carrier on your sale order. Click on **Delivery method** to choose the right one."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:118
msgid "The price is computed when you save the sale order or when you click on **Set price**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:121
msgid "If you want to invoice the price of the delivery charge on the sale order, click on **Set price**, it will add a line with the name of the delivery method as a product. It may vary from the real price."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:125
msgid "Otherwise, the real price (computed when the delivery is validated) will automatically be added to the invoice. For more information, please read the document :doc:`../operation/invoicing`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:132
msgid "The delivery created from the sale order will take the shipping information from it. You can change the carrier if you want to."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:141
msgid "The weight is computed based on the products weights. The shipping cost will be computed once the transfer is validated."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:144
msgid "Click on **Validate** to receive the tracking number. The **Carrier Tracking ref** field will automatically be filled. Click on the **Tracking** button to check your delivery on the provider website."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/third_party_shipper.rst:159
msgid ":doc:`../operation/labels`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:3
msgid "How to get UPS credentials for integration with Odoo?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:5
msgid "In order to use the Odoo UPS API, you will need:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:7
msgid "A UPS.com user ID and password"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:9
msgid "A UPS account number"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:11
msgid "An Access Key"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:13
msgid "An Access Key is a 16 character alphanumeric code that allows access to the UPS Developer Kit API Development and Production servers."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:17
msgid "Create a UPS Account"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:19
msgid "Note that only customers located in the US can open a UPS account online. If you are located outside the US, you will need to contact UPS Customer Service in order to to open an account."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:23
msgid "You can read additional information about opening a UPS account on the their website, on the page, `How to Open a UPS Account Online <https://www.ups.com/content/us/en/resources/sri/openaccountonline.html?srch_pos=2&srch_phr=open+ups+account>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:27
msgid "If you don't already have a UPS account, you can create one along with your online profile by following these steps:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:30
msgid "1. Access the UPS.com web site at `www.ups.com <http://www.ups.com/>`__, and click the **New User** link at the top of the page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:34
msgid "2. Click the **Register for MyUPS** button, and follow the prompts to complete the registration process."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:37
msgid "If you already have a UPS account, you can add it to your online profile as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:39
msgid "Log in to the `UPS.com website <http://www.ups.com/>`_) using your UPS.com User ID and Password."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:41
msgid "Click the **My UPS** tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:43
msgid "Click the **Account Summary** link."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:45
msgid "4. Click the **Add an Existing UPS Account** link in the **UPS Account Details** section of the page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:48
msgid "5. In the **Add New Account** screen, enter the **UPS Account Number**, **Account Name**, and **Postal Code** fields. The country defaults to United States.q"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:52
msgid "Click the **Next** button to continue."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:55
msgid "Get an Access Key"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:57
msgid "After you have added your UPS account number to your user profile you can request an Access Key from UPS using the steps below:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:60
msgid "Go to the `UPS Developer Kit web page <https://www.ups.com/upsdeveloperkit?loc=en_US>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:61
msgid "Log into UPS.com with your user ID and password"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:62
msgid "Click on the link **Request an access key**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:63
msgid "Verify your contact information"
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:64
msgid "Click the **Request Access Key** button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/inventory/shipping/setup/ups_credentials.rst:66
msgid "The **Access Key** will be provided to you on the web page, and an email with the Access Key will be sent to the email address of the primary contact."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing.rst:8
msgid "Manufacturing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing.rst:10
msgid "**Odoo Manufacturing** helps manufacturers schedule, plan and process manufacturing orders. With the work center control panel, put tablets on the shop floor to control work orders in real-time and allow workers to trigger maintenance operations, feedback loops, quality issues, etc."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing.rst:15
msgid "`Odoo Tutorials: MRP <https://www.odoo.com/slides/mrp-29>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing.rst:17
msgid ":doc:`IoT Boxes (MES) </applications/productivity/iot>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance.rst:5
msgid "Maintenance"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:3
msgid "Add new equipment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:5
msgid "In Odoo, **equipment** refers to any item that is used in everyday operations, including the manufacturing of products. This can mean a piece of machinery on a production line, a tool that is used in different locations, or a computer in an office space. Equipment registered in Odoo can be owned by the company that uses the Odoo database, or by a third party, such as a vendor in the case of equipment rentals."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:11
msgid "Using Odoo **Maintenance**, it is possible to track individual pieces of equipment, along with information about their maintenance requirements. To add a new piece of equipment, navigate to the :guilabel:`Maintenance` module, select :menuselection:`Equipments --> Machines & Tools --> Create`, and configure the equipment as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:16
msgid ":guilabel:`Equipment Name`: the product name of the piece of equipment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:17
msgid ":guilabel:`Equipment Category`: the category that the equipment belongs to; for example, computers, machinery, tools, etc.; new categories can be created by navigating to :menuselection:`Configuration --> Equipment Categories` and clicking :guilabel:`Create`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:20
msgid ":guilabel:`Company`: the company that owns the equipment; again, this can be the company that uses the Odoo database, or a third-party company"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:22
msgid ":guilabel:`Used By`: specify if the equipment is used by a specific employee, department, or both; select :guilabel:`Other` to specify both an employee and a department"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:24
msgid ":guilabel:`Maintenance Team`: the team responsible for servicing the equipment; new teams can be created by navigating to :menuselection:`Configuration --> Maintenance Teams` and selecting :guilabel:`Create`; the members of each team can also be assigned from this page"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:27
msgid ":guilabel:`Technician`: the person responsible for servicing the equipment; this can be used to assign a specific individual in the event that no maintenance team is assigned or when a specific member of the assigned team should always be responsible for the equipment; any person added to Odoo as a user can be assigned as a technician"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:31
msgid ":guilabel:`Used in location`: the location where the equipment is used; this is a simple text field that can be used to specify locations that are not work centers, like an office, for example"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:34
msgid ":guilabel:`Work Center`: if the equipment is used at a work center, specify it here; equipment can also be assigned to a work center by navigating to :menuselection:`Maintenance --> Equipments --> Work Centers`, selecting a work center or creating a new one using the :guilabel:`Create` button, and clicking the :guilabel:`Equipment` tab on the work center form"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:-1
msgid "An example of a fully configured new equipment form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:44
msgid "Include additional product information"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:46
msgid "The :guilabel:`Product Information` tab at the bottom of the form can be used to provide further details about the piece of equipment:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:49
msgid ":guilabel:`Vendor`: the vendor that the equipment was purchased from"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:50
msgid ":guilabel:`Vendor Reference`: the reference code assigned to the vendor"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:51
msgid ":guilabel:`Model`: the specific model of the piece of equipment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:52
msgid ":guilabel:`Serial Number`: the unique serial number of the equipment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:53
msgid ":guilabel:`Effective Date`: the date that the equipment became available for use; this is used to calculate the :abbr:`MTBF (Mean Time Between Failures)`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:55
msgid ":guilabel:`Cost`: the amount the equipment was purchased for"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:56
msgid ":guilabel:`Warranty Expiration Date`: the date on which the equipment's warranty will expire"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:-1
msgid "The product information tab for the new piece of equipment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:63
msgid "Add maintenance details"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:65
msgid "The :guilabel:`Maintenance` tab includes information that can be useful to maintenance teams:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:67
msgid ":guilabel:`Preventive Maintenance Frequency`: specifies how often maintenance should be performed to prevent equipment failure"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:69
msgid ":guilabel:`Maintenance Duration`: the amount of time required to fix the equipment when it fails"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:70
msgid ":guilabel:`Expected Mean Time Between Failure`: the average amount of time that the equipment is expected to operate before failing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:-1
msgid "The maintenance tab for the new piece of equipment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:78
msgid "The :guilabel:`Maintenance` tab also includes sections for :guilabel:`Mean Time Between Failure`, :guilabel:`Estimated Next Failure`, :guilabel:`Latest Failure`, and :guilabel:`Mean Time To Repair`. These values are calculated automatically based on maintenance requests if any exist."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/maintenance/add_new_equipment.rst:84
msgid "To see the maintenance requests for a piece of equipment, go to the page for the equipment and select :guilabel:`Maintenance` in the top right corner of the form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management.rst:5
msgid "Manufacturing management"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:3
msgid "Create a bill of materials (BoM)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:5
msgid "A *bill of materials* (or *BoM*) is a document that defines the quantity of each component required to manufacture (or deliver) a finished product. It can also include various operations types, steps, and instructions for the individual guidelines needed to complete a production process."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:9
msgid "In Odoo *Manufacturing*, multiple :abbr:`BoMs (Bills of Materials)` can be linked to a product, so even product variants can have their own specific :abbr:`BoMs (Bills of Materials)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:12
msgid "Correctly setting up a :abbr:`BoM (Bill of Materials)` helps optimize the manufacturing process, and saves time."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:16
msgid "Set up a BoM"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:18
msgid ":abbr:`BoMs (Bills of Materials)` can be set up with or without operations steps or instructions, and can include as many or as few components as needed. The simplest setup is one without operations or instructions. In that case, the production is solely managed with *manufacturing orders* (MOs)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:22
msgid "To create a :abbr:`BoM (Bill of Materials)`, navigate to :menuselection:`Manufacturing app --> Products --> Bills of Materials`, and click :guilabel:`Create`. Then, in the :guilabel:`Product` field, choose the product that will be associated with the :abbr:`BoM (Bill of Materials)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:-1
msgid "Bill of materials creation screen."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:30
msgid "There are three :guilabel:`BoM Types` that can be chosen for any bill of materials:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:32
msgid ":guilabel:`Manufacture this product` indicates that this product is manufactured in-house, from start to finish using the components listed on the :abbr:`BoM (Bill of Materials)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:34
msgid ":guilabel:`Kits` are sets of unassembled components that may be sold as products, and are useful for managing more complex :abbr:`BoMs (Bills of Materials)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:36
msgid ":guilabel:`Subcontracting` outsources the production of some (or all) components or products to outside manufacturers. This feature needs to be enabled in :menuselection:`Manufacturing app --> Configuration --> Settings`, under the :guilabel:`Operations` section."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:41
msgid "A :abbr:`BoM (Bill of Materials)` can also be created directly from the :abbr:`BoM (Bill of Materials)` smart button on the product template, in which case the :guilabel:`Product` field is pre-filled."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:45
msgid "The most common :guilabel:`BoM Type` is :guilabel:`Manufacture this product`. Once the :guilabel:`BoM Type` is chosen, click :guilabel:`Add a Line` to add all the :guilabel:`Components` that go into the production of the final product, as well as the :guilabel:`Quantity` of each component. Finally, click :guilabel:`Save` to finish creating the :abbr:`BoM (Bill of Materials)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:51
msgid "New components can be added, even during production, directly from the :abbr:`BoM (Bill of Materials)`. After selecting :guilabel:`Add a line`, create the new component and select :guilabel:`Create` or :guilabel:`Create and Edit`. Components can also be created by going to :menuselection:`Manufacturing app --> Products --> Products`, and clicking :guilabel:`Create`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:57
msgid "Specify a BoM for a product variant"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:60
msgid "To assign *product variants* to :abbr:`BoMs (Bills of Materials)`, the feature must be enabled in :menuselection:`Inventory --> Configuration --> Settings`, under the :guilabel:`Products` section by selecting :guilabel:`Variants` and clicking :guilabel:`Save`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:64
msgid ":abbr:`BoMs (Bills of Materials)` can also be assigned to specific *product variants*, with two setup options available to choose from."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:-1
msgid "Bill of materials product variants and apply on variants options."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:71
msgid "The first method is to create one :abbr:`BoM (Bill of Materials)` per product variant, by specifying the :guilabel:`Product Variant` every time a new :abbr:`BoM (Bill of Materials)` is created."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:74
msgid "The second method is to create **one** master :abbr:`BoM (Bill of Materials)` that contains all components, and specify which variant each component applies to in the :guilabel:`Apply on Variants` column."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:79
msgid "`Managing with Product Variants <https://www.odoo.com/slides/slide/manufacturing-with-product-variants-2805>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:83
msgid "The :guilabel:`Apply on Variants` column is hidden by default and can be accessed by clicking on the :guilabel:`Additional Options` menu icon at the right of the :guilabel:`Components` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:87
msgid "Set up operations steps"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:89
msgid "Some :abbr:`BoMs (Bills of Materials)` require multiple operations and steps during the manufacturing process. To create :guilabel:`Operations` on a :abbr:`BoM (Bill of Materials)`, first enable the :guilabel:`Work Orders` feature in :menuselection:`Manufacturing app --> Configuration --> Settings --> Operations`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:-1
msgid "An example of a Bill of Materials operation and the steps creation tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:98
msgid "When creating a new :abbr:`BoM (Bill of Materials)`, click the :guilabel:`Operations` tab and click :guilabel:`Add a line` to add a new operation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:101
msgid "In the :guilabel:`Create Operations` box, give the operation a name, and specify the :guilabel:`Work Center` and the :guilabel:`Default Duration` settings. Under the :guilabel:`Work Sheet` tab, the type of :guilabel:`Work Sheet` can also be chosen, if assembly instructions need to be attached."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:105
msgid "The :guilabel:`Work Sheet` types that can be added are: :guilabel:`Text` (with a :guilabel:`Description`); :guilabel:`PDF` files; and :guilabel:`Google Slide` presentations. When all the information has been filled out, select :guilabel:`Save & Close`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:-1
msgid "Bill of materials create operations popup on operations tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:114
msgid "Add by-products to a BoM"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:116
msgid "A *by-product* is a residual product that is created during production of a :abbr:`BoM (bill of materials)`. Unlike the finished product, there can be more than one by-product on a :abbr:`BoM (Bill of Materials)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:120
msgid "To add by-products to a :abbr:`BoM (Bill of Materials)`, first enable the :guilabel:`By-Products` feature in :menuselection:`Manufacturing app --> Configuration --> Settings --> Operations`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:123
msgid "Once the feature is enabled, by-products can be added to a :abbr:`BoM (Bill of Materials)` from the :guilabel:`By-products` tab by clicking :guilabel:`Add a line`. The by-product can be named, its :guilabel:`Quantity` specified, and a :guilabel:`Unit of Measure` chosen."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:127
msgid "If the :abbr:`BoM (Bill of Materials)` has :guilabel:`Operations` steps, specify exactly which operation the by-product is produced from in the :guilabel:`Produced in Operation` field. Finally, click :guilabel:`Save` to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:132
msgid ":doc:`/applications/inventory_and_mrp/manufacturing/management/kit_shipping`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:133
msgid ":doc:`/applications/inventory_and_mrp/manufacturing/management/product_variants`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/bill_configuration.rst:134
msgid ":doc:`/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:3
msgid "Sell sets of products as kits"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:5
msgid "A *kit* is a set of components that are delivered without first being assembled or mixed. *Kits* are described in Odoo using *Bills of Materials*. There are two basic ways to configure *kits*, depending on how the stock of the kit product is to be managed. In either case, both the *Inventory* and *Manufacturing* apps must be installed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:12
msgid "Manage Stock of Component Products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:14
msgid "If you want to assemble kits as they are ordered, managing stock of the kit components only, you will use a *Kit BoM* without a manufacturing step."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:18
msgid "A product using a *Kit BoM* will appear as a single line item on a quotation and sales order, but will generate a delivery order with one line item for each of the components of the kit. In the examples below, the first image shows a sales order for the kit *Custom Computer Kit*, while the second image shows the corresponding delivery order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:33
msgid "From the *Products menu* in either the *Inventory* or *Manufacturing* app, create each component product as you would with any other product, then create the top-level, or kit product. The kit product should have only the *route Manufacture* set, in the *Inventory tab*. Because you cannot track the stock of kit products, the *Product Type* should be set to Consumable. Because a kit product cannot be purchased, then, *Can be Purchased* should be unchecked."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:41
msgid "All other parameters on the kit product may be modified according to your preference. The component products require no particular configuration."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:48
msgid "Once the products are configured, create a *bill of materials* for the kit product. Add each component and its quantity. Select the *BoM Type Ship this product as a set of components*. All other options may be left with their default values."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:57
msgid "Manage Stock of Kit Product and Component Products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:59
msgid "If you want to manage stock of the *top-level kit product*, you will use a standard *BoM* with a manufacturing step instead of a *Kit BoM*. When using a standard BoM to assemble kits, a *manufacturing order* will be created. The *manufacturing order* must be registered as completed before the kit product will appear in your stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:68
msgid "On the kit product, select the *route Manufacture*. You may also select *Make to Order*, which will create a *manufacturing order* whenever a sales order is confirmed. Select the product type *Storable Product* to enable stock management."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/kit_shipping.rst:76
msgid "When you create the *bill of materials*, select the BoM Type *Manufacture this product*. The assembly of the kit will be described by a *manufacturing order* rather than a packing operation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:3
msgid "Manufacturing backorders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:5
msgid "In some cases, the full quantity of a manufacturing order cannot be produced immediately. When this happens, Odoo *Manufacturing* allows for the manufacturing of partial quantities of the order and creates a *backorder* for the remaining amount."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:9
msgid "In the *Manufacturing* app, creating a backorder splits the original manufacturing order into two orders. The reference tag for each order is the tag used for the original order, followed by a hyphen and then an additional number to indicate that it's a backorder."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:14
msgid "A company creates a manufacturing order with the reference tag *WH/MO/00175*, for 10 units of *Product X*. After starting work on the manufacturing order, the employee working the production line realizes there are only enough components in stock to produce five units of the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:18
msgid "Instead of waiting for additional stock of the components, they manufacture five units and create a backorder for the remaining five. This splits the manufacturing order into two separate orders: *WH/MO/00175-001* and *WH/MO/00175-002*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:22
msgid "Order *001* contains the five units that have been manufactured, and is immediately marked as :guilabel:`Done`. Order *002* contains the five units that still need to be manufactured and is marked as :guilabel:`In Progress`. Once the remaining components are available, the employee returns to order *002* and manufactures the remaining units before closing the order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:28
msgid "Create a manufacturing backorder"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:30
msgid "To create a backorder for part of a manufacturing order, begin by navigating to :menuselection:`Manufacturing --> Operations --> Manufacturing Orders`. Select a manufacturing order with a quantity of two or more or create one by clicking :guilabel:`Create`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:34
#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:86
msgid "If a new manufacturing order is created, select a product from the :guilabel:`Product` drop-down menu and enter a quantity of two or more in the :guilabel:`Quantity` field, then click :guilabel:`Confirm` to confirm the order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:38
msgid "After manufacturing the quantity that is being produced immediately, enter that number in the :guilabel:`Quantity` field at the top of the manufacturing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:-1
msgid "The quantity field on a manufacturing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:45
msgid "Next, click :guilabel:`Validate`, and a :guilabel:`You produced less than initial demand` pop-up window appears, from which a backorder can be created. Click :guilabel:`Create Backorder` to split the manufacturing order into two separate orders, with the reference tags *WH/MO/XXXXX-001* and *WH/MO/XXXXX-002*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:-1
msgid "The Create Backorder button on the \"You produced less than initial demand\" pop-up window."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:54
msgid "Order *001* contains the items that have been manufactured, and is closed immediately. Order *002* is the backorder that contains the items that have yet to be manufactured, and remains open, to be completed at a later date."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:58
msgid "Once the remaining units can be manufactured, navigate to :menuselection:`Manufacturing --> Operations --> Manufacturing Orders`, and then select the backorder manufacturing order. If all of the remaining units are manufactured immediately, simply click :guilabel:`Validate` to close the order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:63
msgid "If only some of the remaining units are manufactured immediately, create another backorder for the remainder by following the steps detailed in this section."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:67
msgid "Create a backorder from tablet view"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:69
msgid "Backorders for manufacturing orders can also be created from the work order tablet view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:72
msgid "In order to use tablet view, the *Work Orders* setting must be enabled. To enable it, navigate to :menuselection:`Manufacturing --> Configuration --> Settings`. On the :guilabel:`Settings` page, enable the checkbox next to :guilabel:`Work Orders`, then click :guilabel:`Save` to save the change. This makes the :guilabel:`Work Orders` tab appear on manufacturing orders, from which the tablet view can be opened."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:0
msgid "The Work Orders setting on the Manufacturing settings page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:82
msgid "To create a backorder from the tablet view, begin by navigating to :menuselection:`Manufacturing --> Operations --> Manufacturing Orders`. Select a manufacturing order with a quantity of two or more or create one by clicking :guilabel:`Create`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:90
msgid "After confirming the manufacturing order, select the :guilabel:`Work Orders` tab and click the :guilabel:`📱 (tablet view)` button located on the line of the first work order to enter the tablet view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:-1
msgid "The tablet view button for a work order on a manufacturing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:97
msgid "Once in tablet view, enter the quantity being manufactured immediately in the :guilabel:`Units` field at the top left of the tablet view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:-1
msgid "The Units field in the tablet view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:104
msgid "The steps for the rest of the workflow depend on whether the manufacturing order being processed requires the completion of a single work order or multiple work orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:108
msgid "Single work order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:110
msgid "If the manufacturing order only requires the completion of a single work order, complete the work order, then click :guilabel:`Mark As Done And Close MO`. The manufacturing order is closed and a backorder for the units that still need to be manufactured is created automatically."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:-1
msgid "The Mark As Done And Close MO button in the tablet view of a work order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:118
msgid "Once the remaining units are ready to be manufactured, navigate to :menuselection:`Manufacturing --> Operations --> Manufacturing Orders`, then select the backorder manufacturing order, which is titled using the reference tag of the original backorder with *002* added to the end."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:122
msgid "On the backorder manufacturing order, select the :guilabel:`Work Orders` tab and click the :guilabel:`📱 (tablet view)` button located on the line of the work order to open the tablet view. If all of the units in the backorder will be completed immediately, simply click :guilabel:`Mark As Done And Close MO` after completing the work order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:127
msgid "If only some of the remaining units will be manufactured immediately, enter the number in the :guilabel:`Units` field at the top left of the tablet view, then click :guilabel:`Mark As Done And Close MO` to create another backorder for the remaining units. The new backorder can be processed using the steps detailed in this section."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:133
msgid "Multiple work orders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:135
msgid "If the manufacturing order requires the completion of multiple work orders, complete the first work order, and then click :guilabel:`Record Production`. This splits the manufacturing order into two separate orders, titled *WH/MO/XXXXX-001* and *WH/MO/XXXXX-002*, with *XXXXX* being the number of the original order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:-1
msgid "The Record Production button on a work order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:144
msgid "The tablet view defaults to showing the first work order for the *002* manufacturing order. Since this manufacturing order will not be completed immediately, back out of tablet view by clicking the :guilabel:`⬅️ (back)` button twice. Doing so will take you to the *001* order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:148
msgid "To finish the *001* order, select the :guilabel:`Work Orders` tab and click the :guilabel:`tablet view` button located on the line of the next work order. Finally, complete the remaining work orders, then click :guilabel:`Mark As Done And Close MO` to close the manufacturing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:152
msgid "Once the remaining units are ready to be manufactured, navigate to :menuselection:`Manufacturing --> Operations --> Manufacturing Orders`, then select the *002* order. Select the :guilabel:`Work Orders` tab and click the :guilabel:`tablet view` button located on the line of the first work order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:157
msgid "If all of the units in the backorder will be completed immediately, simply click :guilabel:`Mark As Done And Close MO` after completing all of the work orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:160
msgid "If only some of the remaining units will be manufactured immediately, enter the number in the :guilabel:`Units` field at the top left of the tablet view, then click :guilabel:`Record Production` to create an additional backorder for the remaining units, with *003* at the end of its reference tag."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:165
msgid "The *002* backorder and *003* backorder can be completed by following the steps detailed in this section."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:169
msgid "It is also possible to create a backorder in the middle of a manufacturing order, when some but not all of the work orders have already been completed. Doing so marks the completed work order(s) as :guilabel:`Finished` on the backorder."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:174
msgid "A manufacturing order for four chairs requires the completion of two work orders: *Paint* and *Assemble*. While the paint step can be completed immediately for all four chairs, there are only enough screws to assemble two of them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:178
msgid "As a result, the employee responsible for producing the chairs begins by painting all four, and marking the *Paint* work order as :guilabel:`Finished` for all of them. Then, they move on to the *Assemble* work order. They assemble two of the four chairs, enter that number in the :guilabel:`Units` field of the tablet view, and click :guilabel:`Record Production`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:183
msgid "A backorder manufacturing order is created for the remaining two chairs. On the backorder, the *Paint* work order is already marked as :guilabel:`Finished`, and only the *Assemble* work order is left to be completed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/manufacturing_backorders.rst:187
msgid "Once more screws are available, the manufacturing employee assembles the remaining chairs and clicks :guilabel:`Mark As Done And Close MO` to complete the *Assemble* work order and close the backorder manufacturing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/product_variants.rst:3
msgid "How to manage BoMs for product variants"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/product_variants.rst:5
msgid "Odoo allows you to use one bill of materials for multiple variants of the same product. Simply enable variants from :menuselection:`Configuration --> Settings`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/product_variants.rst:12
msgid "You will then be able to specify which component lines are to be used in the manufacture of each product variant. You may specify multiple variants for each line. If no variant is specified, the line will be used for all variants."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/product_variants.rst:17
msgid "When defining variant BoMs on a line-item-basis, the **Product Variant** field in the main section of the BoM should be left blank. This field is used when creating a BoM for one variant of a product only."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:3
msgid "Set routings on kit Bills of materials"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:5
msgid "It often happens that you want to use kit BoM’s within manufactured product BoM’s in order to lighten the list of components for this manufactured product. When doing so, you would like to have the possibility to specify, for each kit component, in which operation they are consumed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:11
msgid "We will see the three use cases that you can face in these kinds of configurations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:15
msgid "Finished Product & Kit Component have the same Routing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:18
#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:63
#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:107
msgid "Create BoM for the Finished Product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:20
#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:65
msgid "Create a manufactured BoM for the finished product which includes a kit component. Set a routing on your BoM, for example, *Assemble Furniture*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:28
#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:73
#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:117
msgid "Create a Kit BoM for the Kit Component"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:30
msgid "Update the kit component to define its BoM. Make sure that the routing which is set on this BoM is the same one than on the Finished Product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:36
msgid "You can define the operations in which the kit components are used directly in the BoM of the kit."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:40
#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:84
#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:127
msgid "Manufacturing Order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:42
msgid "In the list of components, the kit is split. Two work orders are created as we have two operations defined in the *Assemble Furniture* routing. The components of the kits are well consumed in the operations defined in the kit BoM."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:57
msgid "Finished Product & Kit Component haven’t the same Routing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:60
msgid "Kit Consumption set on Finished Product BoM"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:75
msgid "Update the kit component to define its BoM. In this use case, the routing which is set on this Kit BoM is different than the one of the Finished Product. Specify the operations at which the kit components are consumed in this BoM."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:86
#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:129
msgid "When the manufacturing order is created for the Manufactured product, the kit is split among its components. When the manufacturing order is planned, three work orders are created in our case, one coming from the routing of the manufactured products, the two other ones coming from the routing of the kit BoM."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:95
msgid "The components are all consumed during their respective operations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:104
msgid "Kit Consumption set on Kit BoM"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:109
msgid "Create a manufactured BoM for the finished product which includes a kit component. Set a routing on your BoM, for example, *Assemble Furniture*. Precise the consumption of the components on this BoM."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:119
msgid "Update the kit component to define its BoM. In this use case, the routing which is set on this Kit BoM is different than the one of the Finished Product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/routing_kit_bom.rst:138
msgid "All the components of the kits are consumed during the first operation. The last component is consumed during the second operation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:3
msgid "Scrap during manufacturing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:5
msgid "During the manufacturing process, the need to scrap manufacturing components or finished products may arise. This can be necessary if a component or product is damaged, or unusable for any other reason."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:9
msgid "By default, scrapping a component or finished product removes it from physical inventory and places it in a virtual location titled *Virtual Locations/Scrap*. A virtual location is **not** a physical space, but rather a designation in Odoo that is used to track items that are no longer in physical inventory."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:15
msgid "For more information about virtual locations, see the documentation about the different types of :ref:`locations <inventory/management/difference-warehouse-location>`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:18
msgid "Odoo *Manufacturing* allows for both components and finished products to be scrapped within a manufacturing order. The specific type of item that can be scrapped during a manufacturing order depends on the stage of the manufacturing process."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:23
msgid "Scrap orders can be viewed by navigating to :menuselection:`Inventory --> Operations --> Scrap`. Each scrap order shows the date and time the order was created, along with the product and quantity that was scrapped."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:27
msgid "To view the total quantity of each item scrapped, navigate to :menuselection:`Inventory --> Configuration --> Locations`, then remove the :guilabel:`Internal` filter from the :guilabel:`Search...` bar to display all virtual locations. From the list, select the :guilabel:`Virtual Locations/Scrap` location."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:33
msgid "Scrap manufacturing components"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:35
msgid "To scrap components during the manufacturing process, begin by navigating to :menuselection:`Manufacturing --> Manufacturing Orders`, then select a manufacturing order or click :guilabel:`Create` to configure a new one. If a new manufacturing order is created, select a product from the :guilabel:`Product` drop-down menu, then click :guilabel:`Confirm`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:40
msgid "Once the manufacturing order has been confirmed, a :guilabel:`Scrap` button appears at the top of the page. Click the button and a :guilabel:`Scrap` pop-up window appears."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:-1
msgid "The scrap button on a manufacturing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:47
msgid "From the :guilabel:`Product` drop-down menu on the :guilabel:`Scrap` pop-up window, select the component that is being scrapped, then enter the quantity in the :guilabel:`Quantity` field. Finally, click :guilabel:`Done` to scrap the component."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:-1
msgid "The Scrap pop-up window."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:56
msgid "Before clicking :guilabel:`Mark As Done` on a manufacturing order, only the components of the finished product can be scrapped, **not** the finished product itself. This is because Odoo recognizes that the finished product cannot be scrapped before it has been manufactured."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:60
msgid "After scrapping a component, continue the manufacturing process using the required quantity of the component that was scrapped. The on-hand stock count for the component that was scrapped updates to reflect both the scrapped quantity and the quantity consumed during manufacturing."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:65
msgid "If the manufacturing of a table requires four units of a table leg, and two units of the table leg were scrapped during the manufacturing process, the total quantity of table legs consumed will be six: four units used to manufacture the table plus two units scrapped."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:70
msgid "Scrap components from tablet view"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:72
msgid "Components can also be scrapped from the manufacturing tablet view. To do so, select the :guilabel:`Work Orders` tab on a manufacturing order, then click the :guilabel:`📱 (tablet view)` icon for a work order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:-1
msgid "The tablet view icon for a work order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:80
msgid "With tablet view open, click the :guilabel:`☰ (menu)` button at the top left of the screen, then select the :guilabel:`Scrap` button on the :guilabel:`Menu` pop-up window. The :guilabel:`Scrap` pop-up window then appears."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:-1
msgid "The Scrap button on the Menu pop-up window of the manufacturing tablet view."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:88
msgid "Finally, select a component from the :guilabel:`Product` drop-down menu and enter the quantity being scrapped in the :guilabel:`Quantity` field. Click :guilabel:`Done` to scrap the component."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:92
msgid "Scrap finished products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:94
msgid "Odoo also allows for finished products to be scrapped from a manufacturing order once the order is completed. After clicking :guilabel:`Mark as Done`, click the :guilabel:`Scrap` button to make the :guilabel:`Scrap` pop-up window appear."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:98
msgid "Since the components have been consumed to create the finished product, they will no longer appear in the :guilabel:`Product` drop-down menu. Instead, the finished product will be available as an option. Select the finished product and enter the quantity to be scrapped in the :guilabel:`Quantity` field. Click :guilabel:`Done` to scrap the finished product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:103
msgid "The on-hand stock count for the product that was scrapped will update to reflect both the scrapped quantity and the quantity produced during manufacturing."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/scrap_manufacturing.rst:107
msgid "If five units of a chair were manufactured, but two units were scrapped after manufacturing was completed, then the on-hand inventory of the chair will increase by three: five units manufactured minus two units scrapped."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:3
msgid "Manage semi-finished products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:5
msgid "In Odoo, you can use subassembly products to simplify a complex *Bill of Materials* or to represent your manufacturing flow more accurately. A *subassembly product* is a manufactured product that is used as a component to make another one."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:10
msgid "A *BoM* that employs *subassemblies* is referred to as a multi-level BoM. Those are accomplished by creating a *top-level BoM* and *subassembly ones*. This process requires a route that will ensure that every time a manufacturing order for the top-level product is created, another one will be for subassemblies."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:17
msgid "Configure the Subassembly Product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:19
msgid "To configure a *multi-level BoM*, you will need a top-level product but also its subassemblies. The first step is to create a product form for each of the subassemblies. Select the routes *Manufacture* and *Replenish on Order*. Now, hit save."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:27
msgid "In the *Bill of Materials* menu, under *Master Data*, create a new *Bill of Materials*. Choose the product you just created and add its components."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:35
msgid "Configure the Main BoM"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:37
msgid "Now, you can configure the top-level product and its *BoM*. Include any subassemblies in the list of components."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/sub_assemblies.rst:43
msgid "Now, each time you will plan a manufacturing order for the top-level product, a manufacturing order will be created for the subassembly one. Then, you will have to manufacture the subassembly in order to make it available before manufacturing the finished product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:3
msgid "Subcontract your Manufacturing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:5
msgid "Outsourcing a portion of some or all your company’s manufacturing needs is not easy. To make it work right, you have to:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:8
msgid "Manage the inventory of raw materials at your subcontractor;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:9
msgid "Ship new materials to your subcontractors based on your forecasted demand;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:11
msgid "Keep track of manufacturing operations done at the subcontractor location;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:13
msgid "Control incoming goods quality;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:14
msgid "Control subcontractors bills."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:16
msgid "Here is an example of subcontracting the manufacturing of “C”, which is produced out of raw materials “A” and “B”."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:23
msgid "With its subcontracting feature, Odoo helps you handle this flow easily."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:28
msgid "To use the subcontracting feature, go to :menuselection:`Manufacturing --> Configuration --> Settings` and tick the box *Subcontracting*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:35
msgid "To define if a product must be subcontracted, use a *Bill of Materials (BoM)* of type *Subcontracting*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:38
msgid "To create a new *BoM*, go to :menuselection:`Manufacturing --> Master Data --> Bill of Materials` and hit create. Then, list the components your subcontractor needs to manufacture the product. For costing purposes, you might want to register all the components, even the ones that are sourced directly from the subcontractor."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:44
msgid "Once you have set the *BoM Type* to *Subcontracting*, specify one or several subcontractors."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:52
msgid "Basic Subcontracting Flow"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:54
msgid "To let your subcontractor know how many products you need, create and send them purchase orders (PO). To do so, open the *Purchase* app and create a new one. Be sure to send the PO to a vendor that is defined as a subcontractor on the *BoM*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:63
msgid "Once the *PO* is validated (1), a pending receipt is created. When the products are received, validate the receipt (2), with the actual quantity received. Then Odoo automatically created several inventory moves:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:68
msgid "Consume the components at the subcontractor’s location, based on the *BoM* (3);"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:70
msgid "Produce finished goods at the subcontractor’s location (4);"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:71
msgid "Move products from the subcontractor’s location to YourCompany through the validated receipt (5)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:74
msgid "Of course, Odoo does all the transactions for you, automatically. Simply control the vendor bill with the usual matching process with the purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:79
msgid "The *PO* is optional. If you create a receipt manually, with the right subcontractor, Odoo still performs all the moves. Useful if the subcontractor does not bill a fixed price per item, but rather the time and materials used."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:85
msgid "Inventory Valuation"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:87
msgid "The cost of the manufactured product “C” is defined as:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:89
msgid "**C = A + B + s**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:91
msgid "With:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:93
msgid "**A**: Cost of raw materials coming from YourCompany;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:96
msgid "**B**: Cost of raw materials sourced directly from the"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:96
msgid "subcontractor;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:98
msgid "**s**: Cost of the subcontracted service."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:100
msgid "Sending raw materials to your subcontractors (**A**) does not impact the inventory valuation, the components still belonging to your company. To manage this, the *Subcontracting Location* is configured as an *Internal Location* so that the components are still valued in the inventory."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:106
msgid "Then, the vendor price set on the product C form has to be what has to be paid to the subcontractor for his parts and service time: **B + s**. The product cost has to be: **A + B + s**, how much the product is valued in the accounting."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:111
msgid "Finally, the subcontractor bill matches the purchase order, with the proposed price coming from the finished products C."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:115
msgid "If managing the replenishment of raw materials **B** at your subcontractor’s location is not needed, simply include the cost of **B** in the subcontractor’s price **s** and remove the products *B* from the *BoM*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:121
msgid "Traceability"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:123
msgid "In case the products received from the subcontractor contain tracked components, their serial or lot numbers need to be specified during the receipt."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:127
msgid "On the receipt of the subcontracted product, a *Record Components* button appears when necessary. Click on it to open a dialog and record the serial/lot numbers of the components. If the finished product is also tracked, its serial/lot number can be registered here too."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:136
msgid "For audit purposes, it is possible to check the lot numbers recorded on a receipt by using the icon on the right of the finished products:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:144
msgid "Automate Replenishment of Subcontractors"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:146
msgid "To manage the resupply of your subcontractor, activate *Multi-locations* in :menuselection:`Inventory --> Configuration --> Configuration`. Then, the inventory at the subcontractor location can be tracked."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:151
msgid "It is possible to resupply subcontractors by sending products from the company locations, or by sending products from another supplier to the subcontractors."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:156
msgid "Replenishment from the warehouse"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:158
msgid "Resupplying subcontractors manually is the simplest approach. To do so, create delivery orders in which the subcontractor is set as a delivery address and fill the components to deliver."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:162
msgid "To automate the subcontractors’ replenishment propositions, there are two approaches:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:165
msgid "Reordering rules;"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:166
msgid "Replenish on order flow."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:168
msgid "For the first one, just define a reordering rule on the subcontracting location, with a minimum and maximum inventory level. When the reordering rule is triggered, a delivery order is created to ship the components to the subcontractor."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:177
msgid "The second approach is to use a “pull” flow. Here, the demand in the finished product (real demand or forecasted one through the Master Production Schedule) triggers the replenishment of the subcontractor. To do so, select the route *Resupply Subcontractor on Order* on the wanted components."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:188
msgid "Replenishment from another supplier"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:190
msgid "When purchasing items to another supplier, it is possible to ask him to deliver the subcontractor directly. To do so, activate the *Drop Shipping* feature in :menuselection:`Purchase --> Configuration --> Configuration`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:195
msgid "Now, set the *Dropship* option in the *Deliver To* field of the *Other Information* tab. Then, provide the address of the subcontractor for the shipping."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:203
msgid "That way, the supplier can ship items directly and you simply receive and pay the bill. However, it is still required to validate receipts for the subcontractor."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:212
msgid "Quality Control"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:214
msgid "Controlling the quality of the products manufactured by subcontractors is possible thanks to the Odoo Quality app. Quality checks can be made on a manufacturing step but, because the manufacturing process is handled by an external party, it can be defined on the product reception."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:224
msgid "To create a quality check at the receipt, open the *Quality* app and create a new *Control Point* on the reception."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/subcontracting.rst:231
msgid "By doing so, a quality check is automatically created each time a finished product is received."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:3
msgid "Use the Master Production Schedule"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:5
msgid "The Master Production Schedule (MPS) is a valuable tool to plan your production based on your demand forecast."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:11
msgid "Go to the :menuselection:`Manufacturing app --> Configuration --> Settings` and activate the Master Production Schedule feature before hitting save."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:18
msgid "In the manufacturing settings, you can define the time range of your MPS (month/week/day) and the number of periods you want to display."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:20
msgid "Now, go in :menuselection:`Planning --> Master Production Schedule` and click on add a product. You can now define your safety stock target (= the stock you want to have on hand at the end of the period) and the minimum and maximum quantities to replenish."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:29
msgid "The products are ordered in the MPS based on their sequence. You can rearrange that sequence by going on the list of your products and reorganize them with drag and drop."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:36
msgid "In the MPS view, you can decide which information you would like to show by clicking on *rows*. Some fields can be added to the view, such as *Actual demand*, which will show which quantity of products has already been ordered for the period, or *Available to Promise*, which allows you to know what can still be sold during the period (what you plan to replenish - what is already sold during the period). You can also decide to hide some information if it isn’t necessary."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:48
msgid "Estimate your demand and launch replenishment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:50
msgid "The next step is to estimate the demand for the period. This estimation should be entered in the row *Demand Forecast*. You can easily, at any time, compare the demand forecast with the actual demand (= confirmed sales). The demand forecast for a finished product will impact the indirect demand for its components."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:59
msgid "Then, the quantity to replenish for the different periods will be automatically computed. The replenishments you are supposed to launch based on your lead times (vendor lead time or manufacturing lead time) are displayed in green. You can now launch the replenishment by clicking on the replenish button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:65
msgid "Depending on the configuration of the product (buy vs. manufacture), requests for quotations or manufacturing orders will be created. You can easily access those by clicking on the *Actual Replenishment* cell."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:75
msgid "In case you manually edit the *To replenish* quantity, a small cross will appear on the left. In case you want to go back to the automatically computed value given by Odoo, you can click the cross."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:83
msgid "Cells color signification"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:85
msgid "The cells, which are part of the *To replenish* line, can take different colors depending on the situation:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:88
msgid "**Green**: quantity of products which should be replenished to reach the expected safety stock considering the demand forecast and the indirect demand forecast."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:90
msgid "**Grey**: replenishment order has already been generated, and its quantity still matches current data."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:92
msgid "**Red**: replenishment order has already been generated, and its quantity was too high considering current data."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:94
msgid "**Orange**: replenishment order has already been generated, and its quantity was too low considering current data."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:96
msgid "The *Forecasted stock* line can also contain red cells, which means the stock will be negative during the period in question."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:100
msgid "What if I have underestimated the demand?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:102
msgid "You can still increase the demand forecast. It will impact the quantity to replenish. The cell will become orange, and you’ll be able to launch a new replenishment."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:107
msgid "What if I have overestimated the demand?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:109
msgid "You can decrease the demand forecast. The cell will become red to inform you that you’ve ordered more than planned. If you’re still able to do it, you can cancel some RFQ or MO manually."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:114
msgid "What if I wrongly added a product to the MPS?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/use_mps.rst:116
msgid "You can easily remove a product from the MPS by clicking the small bin on the right of its name."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:3
msgid "Manage work orders using work centers"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:5
msgid "Odoo Manufacturing allows for work orders to be carried out at specific work centers. When a manufacturing order is created for a product, any work orders listed in the :guilabel:`Operations` tab of the product bill of materials (BoM) will be automatically created as well and assigned to the specified work center. Work orders can be managed in the :guilabel:`Manufacturing` module by selecting :menuselection:`Operations --> Work Orders`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:11
msgid "In order to use work centers, the :guilabel:`Work Orders` feature must first be enabled. To do so, go to the :guilabel:`Manufacturing` module, select :menuselection:`Configuration --> Settings`, and activate the checkbox next to :guilabel:`Work Orders`. Work centers can then be created and managed by selecting :menuselection:`Configuration --> Work Centers`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:17
msgid "Create a work center"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:19
msgid "Within the :guilabel:`Manufacturing` module, select :menuselection:`Configuration --> Work Centers --> Create`. The work center form can then be filled out as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:22
msgid ":guilabel:`Work Center Name`: give the work center a concise name that describes the type of operations it will be used for"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:24
msgid ":guilabel:`Alternative Workcenters`: specify an alternative work center for operations to be carried out at if the main work center is not available"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:26
msgid ":guilabel:`Code`: assign the work center a reference code"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:27
msgid ":guilabel:`Working Hours`: define the number of hours that the work center can be in use each week"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:28
msgid ":guilabel:`Company`: select the company that the work center belongs to"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:-1
msgid "An example of a fully configured work center form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:35
msgid "Set standards for work center productivity"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:37
msgid "The :guilabel:`General Information` tab on the work center form allows for productivity goals to be assigned to a work center:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:40
msgid ":guilabel:`Time Efficiency`: used to calculate the expected duration of a work order at the work center; for example, if a work order normally takes one hour and the efficiency is set to 200%, the work order will take 30 minutes"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:43
msgid ":guilabel:`Capacity`: the number of operations that can be performed at the work center simultaneously"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:45
msgid ":guilabel:`OEE Target`: the target for efficiency at the work center"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:46
msgid ":guilabel:`Time before prod.`: setup time required before work can commence"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:47
msgid ":guilabel:`Time after prod.`: breakdown or cleanup time required after work is finished"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:48
msgid ":guilabel:`Cost per hour`: the cost of operating the work center for one hour"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:49
msgid ":guilabel:`Analytic Account`: the account where the cost of the work center should be recorded"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:-1
msgid "The general information tab of the work center form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:56
msgid "Assign equipment to a work center"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:58
msgid "Using the :guilabel:`Equipment` tab, it is possible for specific pieces of equipment to be assigned to a work center. The following information will be displayed for each piece of equipment added:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:61
msgid ":guilabel:`Equipment Name`: the name of the piece of equipment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:62
msgid ":guilabel:`Technician`: the technician responsible for servicing the equipment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:63
msgid ":guilabel:`Equipment Category`: the category the equipment belongs to"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:64
msgid ":guilabel:`MTBF`: mean time between failures; the average time that the piece of equipment will operate before failing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:66
msgid ":guilabel:`MTTR`: mean time to recovery; the average time it takes for the equipment to become fully operational again"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:68
msgid ":guilabel:`Est. Next Failure`: an estimate of when the next equipment failure will occur"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:-1
msgid "The equipment tab of the work center form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:75
msgid ":guilabel:`MTBF`, :guilabel:`MTTR`, and :guilabel:`Est. Next Failure` are all calculated automatically based on past failure data, if any exists."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:81
msgid "Integrate IoT devices"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:83
msgid "The :guilabel:`IoT Triggers` tab enables the integration of :abbr:`IoT (Internet of Things)` devices with a work center:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:86
msgid ":guilabel:`Device`: specifies the IoT device to be triggered"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:87
msgid ":guilabel:`Key`: the security key for the device"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:88
msgid ":guilabel:`Action`: the IoT device action triggered"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:-1
msgid "The IoT Triggers tab of the work center form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:95
msgid "Use case: configure an alternative work center"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:97
msgid "When a work center is at capacity, it cannot accept any new work orders. Instead of waiting for the work center to become available, it is possible to specify an alternative work center where surplus work orders should be carried out."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:101
msgid "Begin by creating a new work center. Configure the :guilabel:`Equipment` tab so that it has all of the same equipment as the main work center. This will ensure that the same tasks can be carried out at both work centers. Navigate to the main work center and include the new work center in the :guilabel:`Alternative Workcenters` selection field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:106
msgid "Now, create a new manufacturing order that uses the main work center for one of its operations. The main work center will automatically be selected for the operation in the :guilabel:`Work Orders` tab. After confirming the manufacturing order, click the :guilabel:`Plan` button that appears at the top left of the form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:-1
msgid "Click the plan button to automatically select an available work center."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:115
msgid "If the main work center is at capacity, the work center selected for the operation will be automatically changed to the alternative work center."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:-1
msgid "The alternative work center is automatically selected."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:123
msgid "Monitor work center performance"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:125
msgid "Performance for an individual work center can be viewed by selecting :menuselection:`Configuration --> Work Centers`, and clicking on a work center. A variety of metrics showing work center performance can be viewed at the top right of the form:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:129
msgid ":guilabel:`OEE`: overall effective efficiency, the percentage of time that the work center has been fully productive"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:131
msgid ":guilabel:`Lost`: the amount of time lost due to work stoppages"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:132
msgid ":guilabel:`Load`: the amount of time it will take to complete the current workload"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/using_work_centers.rst:133
msgid ":guilabel:`Performance`: the real duration of work time, shown as a percentage of the expected duration"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:3
msgid "Make work centers unavailable using Time Off"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:5
msgid "In Odoo, *work centers* are used to carry out manufacturing operations at specific locations. However, if a work center cannot be used for some reason, work orders begin to pile up at the work center until it is operational again."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:9
msgid "As a result, it is necessary to make the work center unavailable in Odoo so that the platform routes new work orders to alternative work centers that are operational. Using Odoo *Time Off*, it is possible to designate a work center as being unavailable for a set period of time. Doing so ensures that manufacturing operations can continue until the impacted work center is available again."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:17
msgid "Before a work center can be designated as unavailable, the Odoo platform must be properly configured. First, it is necessary to enable :ref:`developer mode <developer-mode>`. This allows the :guilabel:`Time Off` smart button to appear on each work center's :guilabel:`Working Hours` pop-up window."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:22
msgid "Enable developer mode by going to :menuselection:`Settings`, scrolling to the bottom of the page, and clicking :guilabel:`Activate the developer mode` under the :guilabel:`Developer Tools` heading."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "The \"Activate the developer mode\" button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:29
msgid "Next, install the *Time Off* app. This is the app used for assigning time off to all resources within Odoo, including employees and work centers. Navigate to :menuselection:`Apps`, then type `Time Off` in the :guilabel:`Search...` bar. The card for the :guilabel:`Time Off` module should be the only one that appears on the page. Click the green :guilabel:`Install` button on the card to install the app."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "The Time Off module installation card."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:39
msgid "The last step is to properly configure work centers. For this workflow, it is necessary to have at least two work centers: one that is made unavailable and a second that receives the work orders that the other cannot accept. If no second work center is configured, Odoo cannot route work orders away from the unavailable work center and they will pile up in its queue."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:44
msgid "To create a work center, navigate to :menuselection:`Manufacturing --> Configuration --> Work Centers --> Create`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:47
msgid "Make sure that both work centers have the same equipment listed under the :guilabel:`Equipment` tab. This ensures that operations carried out at one work center can also be performed at the other."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "The equipment tab on a work center form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:54
msgid "For the work center that will be made unavailable, select the second work center on the :guilabel:`Alternative Workcenters` drop-down menu. Now, Odoo knows to send work orders to the second work center when the first is unavailable for any reason."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "A work center form configured with an alternative work center."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:63
msgid "Add time off for a work center"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:65
msgid "With configuration completed, time off can now be assigned to the work center that will be made unavailable. Begin by navigating to :menuselection:`Manufacturing --> Configuration --> Work Centers` and selecting the affected work center. Click :guilabel:`Edit`, and then the :guilabel:`↗ (external link)` button next to the :guilabel:`Working Hours` drop-down menu."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "The Working Hours \"External link\" button on the work center form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:74
msgid "A pop-up appears, titled :guilabel:`Open: Working Hours`. The standard working hours for the work center are listed here, along with various other details about it. Since developer mode was enabled, there is a :guilabel:`Time Off` button in the top right of the pop-up. Click it to be taken to the :guilabel:`Resource Time Off` page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "The Time Off button on the Working Hours pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:83
msgid "On this page, click :guilabel:`Create` to configure a new time-off entry. On the time-off form, note the :guilabel:`Reason` for the work center closure (broken, maintenance, etc.), select the affected work center as the :guilabel:`Resource`, and choose a :guilabel:`Start Date` and :guilabel:`End Date` to specify the period during which the work center will be unavailable. Click :guilabel:`Save` and the time off for the work center is logged in Odoo."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "The \"Resource Time Off\" form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:94
msgid "Route orders to an alternative work center"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:96
msgid "Once a work center is within its specified time-off period, work orders sent to it can be automatically routed to an alternative work center using the :guilabel:`Plan` button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:99
msgid "Begin by creating a new manufacturing order by selecting :menuselection:`Operations --> Manufacturing Orders --> Create`. On the manufacturing order form, specify a :guilabel:`Product` that uses the unavailable work center for one of its operations. Click :guilabel:`Confirm` to confirm the work order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:104
msgid "On the confirmed work order, select the :guilabel:`Work Orders` tab. By default, the unavailable work center is specified in the :guilabel:`Work Center` column. There is also a green :guilabel:`Plan` button on the top left of the page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "The Plan button on a manufacturing order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:112
msgid "Click :guilabel:`Plan` and the work center listed under the :guilabel:`Work Orders` tab is automatically changed to the alternative work center."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:-1
msgid "The selected work center updates automatically after clicking the Plan button."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/management/work_center_time_off.rst:119
msgid "Once the time-off period for the unavailable work center ends, Odoo recognizes that the work center is available again. At this point, clicking the :guilabel:`Plan` button does not route work orders to an alternative work center unless the first one is at capacity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control.rst:5
msgid "Quality control"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:3
msgid "Create quality alerts"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:5
msgid "Configuring quality control points is a great way to ensure that quality checks are performed at routine stages during specific operations. However, quality issues can often appear outside of these scheduled checks. Using Odoo *Quality*, users can create quality alerts for issues that are not detected by automated processes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:11
msgid ":doc:`Add quality control points <quality_control_points>`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:14
msgid "Find and fill out the quality alerts form"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:16
msgid "In some situations, it is necessary to manually create quality alerts within the *Quality* module."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:19
msgid "A helpdesk user who is notified of a product defect by a customer ticket can create an alert that brings the issue to the attention of the relevant quality team."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:22
msgid "To create a new quality alert, start from the :menuselection:`Quality` module and select :menuselection:`Quality Control --> Quality Alerts --> Create`. The quality alert form can then be filled out as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:26
msgid ":guilabel:`Title`: choose a concise, yet descriptive title for the quality alert"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:27
msgid ":guilabel:`Product`: the product about which the quality alert is being created"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:28
msgid ":guilabel:`Product Variant`: the specific variant of the product that has the quality issue, if applicable"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:30
msgid ":guilabel:`Lot`: the lot number assigned to the product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:31
msgid ":guilabel:`Work Center`: the work center where the quality issue originated"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:32
msgid ":guilabel:`Picking`: the picking operation during which the quality issue originated"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:33
msgid ":guilabel:`Team`: the quality team that will be notified by the quality alert"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:34
msgid ":guilabel:`Responsible`: the individual responsible for managing the quality alert"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:35
msgid ":guilabel:`Tags`: classify the quality alert based on user-created tags"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:36
msgid ":guilabel:`Root Cause`: the cause of the quality issue, if known"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:37
msgid ":guilabel:`Priority`: assign a priority between one and three stars to ensure more urgent issues are prioritized"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:40
#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:40
msgid "The tabs at the bottom of the form can be used to provide additional information to quality teams:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:42
msgid ":guilabel:`Description`: provide additional details about the quality issue"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:43
msgid ":guilabel:`Corrective Actions`: the method for fixing affected products"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:44
msgid ":guilabel:`Preventive Actions`: procedures for preventing the issue from occurring in the future"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:46
msgid ":guilabel:`Miscellaneous`: the product vendor (if applicable), the company that produces the product, and the date assigned"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:-1
msgid "An example of a completed quality alert form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:54
msgid "Add quality alerts during the manufacturing process"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:56
msgid "Odoo enables manufacturing employees to create quality alerts within a work order without accessing the *Quality* module. From the work order tablet view, click the :guilabel:` ☰ ` hamburger menu icon in the top left corner and select :guilabel:`Quality Alert`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:-1
msgid "Access the work order menu."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:64
msgid "The quality alert form can then be filled out as detailed in the previous section. After saving the form, a new alert will appear on the :guilabel:`Quality Alerts` dashboard that can be found through the :menuselection:`Quality --> Quality Control` menu."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:69
msgid "Manage existing quality alerts"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:71
msgid "By default, quality alerts are organized in a kanban board view. The stages of the kanban board are fully configurable and alerts can be moved from one stage to the next by dragging and dropping or from within each alert. Additional options are available for viewing alerts, including graph, calendar, and pivot table views."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_alerts.rst:77
msgid "Filter alerts based on diverse criteria like date assigned or date closed. Alerts can also be grouped by quality team, root cause, or other parameters found under the :guilabel:`Filters` button menu."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:3
msgid "Add quality controls"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:5
msgid "Use **Odoo Quality** to control the quality of products before they are registered into stock, during picking operations, and when leaving the warehouse for a delivery order. By creating *quality control points*, manufacturers can set up quality checks that automatically trigger at specific points during production."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:11
msgid "Configure quality control points"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:13
msgid "To create a new quality control point, go to :menuselection:`Quality Control --> Control Points --> Create`. Then, fill in the following form fields, accordingly:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:16
msgid ":guilabel:`Title`: give the quality control point a simple, but informative title so production floor and quality check teams can understand it easily"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:18
msgid ":guilabel:`Products`: indicate which product(s) should pass through the specific quality control point"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:20
msgid ":guilabel:`Operations`: determine which operations team(s) should perform the quality control check (e.g., `Manufacturing`, `Receipts`, `Delivery Orders`, etc.)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:22
msgid ":guilabel:`Work Order Operation`: for manufacturing operations, use the drop-down menu to indicate which type of work order the quality control point applies to: :guilabel:`Manual Assembly`, :guilabel:`Packing`, :guilabel:`Assembly`, :guilabel:`Testing` or :guilabel:`Long time assembly`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:26
msgid ":guilabel:`Company`: add the company that will implement the quality control point. Usually this will be the company that owns the Odoo database. However, a multi-company or vendor profile can be selected, as well, for cases where there are multiple manufacturing or engineering locations"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:29
msgid ":guilabel:`Control Type`: using the drop-down menu, choose from :guilabel:`All Operations`, :guilabel:`Randomly` or :guilabel:`Periodically` to determine how often the control point should executed"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:32
msgid ":guilabel:`Type`: using the drop-down menu, choose the control point type: :guilabel:`Instructions`, :guilabel:`Take a Picture`, :guilabel:`Pass - Fail`, or :guilabel:`Measure`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:35
msgid ":guilabel:`Team`: decide which quality team should receive the results of the quality control point check"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:37
msgid ":guilabel:`Responsible`: add a point person to manage the status and evolution of the quality control point over time"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:42
msgid ":guilabel:`Instructions`: describe the quality check to be performed"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:43
msgid ":guilabel:`Message If Failure`: detail what should be done if the check fails"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:44
msgid ":guilabel:`Notes`: use to include any additional information"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:-1
msgid "An example of a completed quality control point form for a Pass-Fail test."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:50
msgid "Once a control point has been configured, a quality check will be automatically created and assigned when the specified operation or work order has been reached. Quality checks can be managed by selecting :menuselection:`Quality Control --> Quality Checks`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:55
msgid "To see all of the quality checks created by a control point, go to :menuselection:`Quality Control --> Control Points`, select a control point, and click :guilabel:`Quality Checks` in the top right corner."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:60
msgid "Use case: configure a measure quality check"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:62
msgid "To ensure that a product meets specific measurement requirements, select :guilabel:`Measure` from the :guilabel:`Type` drop-down menu. Selecting the :guilabel:`Measure` quality check type reveals three new fields: :guilabel:`Device`, :guilabel:`Norm`, and :guilabel:`Tolerance`. These fields can be configured so that only products within a certain tolerance will pass the check:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:67
msgid ":guilabel:`Device`: select the measuring device that should be used to take the measurement (e.g., measuring tape)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:69
msgid ":guilabel:`Norm`: specify the desired measurement that the product should conform to and the unit of measurement that should be used"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:71
msgid ":guilabel:`Tolerance`: select the range that a measurement can be within while still passing the check (e.g., :guilabel:`from` 59.5 mm :guilabel:`to` 60.5 mm)"
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:-1
msgid "An example of a quality control point form configured for a measure quality check."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:78
msgid "When the quality control points form is complete, click :guilabel:`Save`. Now, this measurement-based test will trigger for products that were specified on the form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/manufacturing/quality_control/quality_control_points.rst:81
msgid "When production of the specified product reaches the operation that requires a measure quality check, the manufacturing employee responsible will be prompted to record and validate the measured value in the tablet view. For products that measure within the values indicated in the :guilabel:`Tolerance` fields, the test will pass. However, for products that measure outside of those values, the test will fail. In that case, the worker who performed the check would create a quality alert from the tablet view. That quality alert can then be addressed by the quality management team."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase.rst:8
msgid "Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase.rst:10
msgid "**Odoo Purchase** helps you keep track of purchase agreements, quotations, and purchase orders. Learn how to keep track of purchase tender, automate replenishments and follow up on your orders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase.rst:14
msgid "`Odoo Tutorials: Purchase <https://www.odoo.com/slides/purchase-23>`_"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced.rst:5
msgid "Advanced"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:3
msgid "Analyze the performance of your purchases"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:5
msgid "If your company regularly purchases products, you have several reasons to track and analyze your performance. The insights gathered can help you to better forecast and plan your future orders. For example, you can assess if your business is dependent on particular vendors, and the data can help you negotiate discounts on prices."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:11
msgid "Generate customized reports"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:13
msgid "Go to *Reporting* to access the purchase analysis. Simply by accessing the reporting dashboard, you can get a quick overview of your actual performance. By default, the reporting dashboard displays a line chart presenting the untaxed amount of your purchase orders per day, and below it, key metrics and a pivot table."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:-1
msgid "Reporting dashboard in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:22
msgid "While the data initially presented is useful, there are several tools and features you can use to get even more insights on your purchases."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:26
msgid "Use filters to select the data you need"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:28
msgid "Odoo offers several default filters you can use and combine by clicking on *Filters*. When you select one or several filters, Odoo looks for all the orders that match at least one of the filters you have chosen and populates the chart, key metrics, and pivot table with the data. The pre-configured filters are:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:33
msgid "All *Requests for Quotation*"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:35
msgid "All *Purchase Orders*, except canceled ones"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:37
msgid "*Confirmation Date Last Year* includes all orders that were confirmed the previous year, canceled purchase orders included"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:40
msgid "*Order Date* includes all orders - request for quotations and purchases orders (canceled ones included) - depending on their date of creation"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:43
msgid "*Confirmation Date* includes all confirmed orders, canceled ones included, depending on their date of confirmation"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:47
msgid "When you have to select a period, you can use multiple years, and, with at least one year selected, multiple quarters and the three most recent months."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:51
msgid "If you use the *Order Date* or *Confirmation Date* filters, the *Comparison* feature appears next to *Filters*. It enables you to compare the period you filtered with the previous one."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:-1
msgid "Reporting filters in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:59
msgid "Add custom filters"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:61
msgid "Thanks to the 31 filtering options to choose from, the possibilities of your customizing your dataset are almost limitless. Go to :menuselection:`Filters --> Add Custom Filter`, specify the condition the filtering option should meet (e.g. *is equal to*, *contains*, etc.), and click on *Apply*. If you want to select orders matching several conditions simultaneously (*and* operator), repeat the process to add another custom filter. If you want to use the *or* operator, don't click on *Apply*, and click on *Add a condition* instead. Once you have added all the desired filtering options, click on *Apply*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:-1
msgid "Custom reporting filter in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:74
msgid "To avoid having to recreate custom filters every time, save them by clicking on :menuselection:`Favorites --> Save current search --> Save`. The customized search filter can then be accessed by clicking on *Favorites* or can even be set as the default filter when you open the reporting dashboard."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:80
msgid "Measure exactly what you need"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:82
msgid "Before selecting what you want to measure, you need to decide whether you prefer using the graph view or the pivot view. By default, the dashboard presents both views. However, the measures you select won't be applied to both views. You can access each view separately by clicking on the icons at the top right of the dashboard."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:-1
msgid "Switch reporting view in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:92
msgid "Visualize your data"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:94
msgid "You can transform the main graph in just a click by selecting one of the three charts: bar, line or pie. Fourteen different measures are available, but you can only use one at a time. However, you can group the measure using one or several of the 19 *Groups*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:-1
msgid "Reporting graph view in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:102
msgid "For bar and line charts, the selected measure is your y-axis, and the first group you select is used to create the x-axis. Adding more group adds additional lines (line chart) or transforms your bar chart into a stacked bar chart. For pie charts, the more groups you select, the more slices are displayed."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:108
msgid "Explore your data"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:110
msgid "The pivot table view enables you to explore your data in great detail. Unlike the graph view, the pivot table enables you to add several measures at the same time. By clicking on *Measures* or on the **+** sign in the *Total* column, you can add as many as you want, each assigned to a new column. By clicking on the **+** sign in the *Total* row, you can add *Groups*. If you click on a group's **+** sign, you can add a sub-group, and so on."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:-1
msgid "Pivot table view in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/advanced/analyze.rst:121
msgid "You can insert your pivot table's data directly in the Spreadsheet app or export it as an Excel file."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals.rst:5
msgid "Manage deals"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:3
msgid "Purchase agreements: blanket orders and calls for tenders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:5
msgid "There are two main types of purchase agreements preconfigured in Odoo: blanket orders and call for tenders."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:8
msgid "Blanket orders are long-term agreements between a company and a vendor to deliver products on a recurring basis with predetermined pricing. Your company should consider using them when you frequently purchase the same products from the same vendor in varying quantities and/or at different times. Among their many benefits, you can save time as the ordering process is simplified, and money thanks to more advantageous bulk pricing."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:14
msgid "Calls for tenders use a special procedure to request offers from multiple vendors at the same time. While public sector organizations are often legally bound to release calls for tenders when they want to purchase goods or services, private organizations can also use them to get the best deal among several vendors."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:20
msgid "Enable purchase agreements"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:22
msgid "From the Purchase app, go to :menuselection:`Configuration --> Settings` and activate *Purchase Agreements*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Enable purchase agreements in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:30
msgid "Configure or create new types of purchase agreements"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:32
msgid "Before you start using purchase agreements, make sure they are configured the way you want by going to :menuselection:`Configuration --> Purchase Agreement Types`. From there, you can edit the way blanket orders and calls for tenders or *Create* a new type of purchase agreement. You can configure the:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:37
msgid "Agreement Type: the name you want to give to the agreement."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:39
msgid "Agreement Selection Type: you can either select multiple offers using *Select multiple RFQ (non-exclusive)*, which is the default setting for both blanket orders and calls for tenders, or a single offer using *Select only one RFQ (exclusive)*, which is sometimes needed for calls for tenders where you only want to select a single vendor."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:44
msgid "Lines: generally, you would always want to select *Use lines of agreement*, which are the different product lines you can configure when you set up your purchase agreement. However, you can select *Do not create RfQ lines automatically* if you don't want your requests for quotations to be pre-filled in with that information."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:49
msgid "Quantities: if you use lines of agreements, you can also specify independently if the products' quantities should be used to pre-fill new requests for quotations. The default option for blanket orders is *Set quantities manually*, while for calls for tenders are set to *Use quantities of agreement*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Configure purchase agreements types in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:59
msgid "Set up a blanket order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:61
msgid "Go to :menuselection:`Orders --> Purchase Agreements` and click on *Create*. Select *Blanket Order* as your *Agreement Type*. Next, select the vendor. The other fields aren't mandatory."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:64
msgid "Next, add the products you want to order and their price. Note that you can also add a *Quantity* for each product, for example, if you have agreed with your vendor to order a specific minimum quantity each time or in total. If you have configured your blanket order to *Set quantities manually*, this is only used for informational purposes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Set up a blanket order in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:73
msgid "You can also write any *Terms and Conditions* at the bottom of the agreement. Once you are satisfied with your blanket order, click on *Confirm*. Its status then changes from *Draft* to *Ongoing* and it's ready to be used."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:78
msgid "Create requests for quotation from the blanket order"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:80
msgid "You can now create new quotations from the blanket order whenever you need it by clicking on *New Quotation*. Odoo automatically fills in requests for quotation with the information initially defined when you set up the blanket order. Depending on the way you configured the *Purchase Agreement Type*, product lines can also be pre-filled."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:85
msgid "From here, you can quickly view all the requests for quotations made under that blanket order by clicking on *RFQs/Orders*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Create new quotations for an ongoing blanket order in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:93
msgid "You can also create a *Request for Quotation* the usual way and then link it to an existing *Blanket Order*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:97
msgid "Blanket orders and replenishment"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:99
msgid "Blanket orders can be used for :doc:`automated replenishment <../../purchase/products/reordering>`, as once a blanket order is confirmed, a new vendor line is added to your product. Make sure the related vendor is in the first position if you have several vendors linked to your product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Blanket order added to product configuration in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:108
msgid "Set up a call for tenders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:110
msgid "Go to :menuselection:`Orders --> Purchase Agreements` and click on *Create*. Select *Call for Tenders* as your *Agreement Type*. The other fields aren't mandatory, but you can add the date you want to be delivered and set an agreement deadline. You usually don't want to select a vendor for calls for tenders as you are looking to get quotations from multiple vendors."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:115
msgid "Next, add the products you want to order and in what quantity. For calls for tenders, you typically don't add a price, as the vendors should give you their best quote."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:118
msgid "You can also write any *Terms and Conditions* at the bottom of the agreement. Once you are ready, click on *Confirm*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Set up a call for tenders in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:126
msgid "Requests quotations from the call for tenders"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:128
msgid "You can now request new quotations from the call for tenders. Click on *New Quotation* and select one of your vendors you want to invite to the call for tenders. Product lines should also be pre-filled in, depending on how you configured the *Purchase Agreement Type*. Click on *Send by email* to send it to the vendor. Go back to the call for tenders and repeat this process for each vendor."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Request a quotation from a call for tenders in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:138
msgid "Once you have sent a request for quotation to every vendor and receiving their quotes, click on *Validate* to proceed to the bid selection. Next, click on the RFQs/Orders smart button to view all your vendors' quotations."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Validate a call for tenders and view all quotations in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:146
msgid "Click on each request for quotation to add the price communicated by your vendors manually. When that's done, select the most advantageous offer and click on *Confirm Order*. This automatically closes the call for tenders. You can now proceed with the purchase order as you would for a regular one."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/agreements.rst:-1
msgid "Confirm an order in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:3
msgid "Control and know when vendor bills should be paid"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:5
msgid "With Odoo, you can define how your vendor bills are controlled. For each purchase order, you can decide when the related vendor bill should be paid: either before or after you have received your products. You can also check at a glance what is the billing status of each purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:9
msgid "With the 3-way matching feature, Odoo compares the information appearing on the *Purchase Order*, the *Vendor Bill* and the *Receipt*, and lets you know if you should pay the bill. This way you can avoid paying incorrect or fraudulent vendor bills."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:14
msgid "Vendor bills default control policy"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:16
msgid "As a first step, open your Purchase app and go to :menuselection:`Configuration --> Settings` to set the default bill control policy for all the products created onwards."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:-1
msgid "Vendor bills default control setting for new products in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:23
msgid "By selecting *On ordered quantities*, you can create a vendor bill as soon as you confirm an order. The quantities mentioned in the purchase order are used to generate the draft bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:26
msgid "If you choose *On received quantities* instead, you can only create one once you have at least received some of the products you have ordered. The quantities you have received are used to generate the draft bill. If you try to create one without having received any product, you get an error message."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:-1
msgid "No invoiceable line error message in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:36
msgid "Change a specific product's control policy"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:38
msgid "If you want to modify a specific product's control policy, go to :menuselection:`Products --> Products`, open it, click on *Edit* and go to the *Purchase tab*. There you can change a product's default bill control policy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:47
msgid "View a purchase order's billing status"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:49
msgid "Once you confirm an order, you can view its *Billing Status* by going to the *Other Information* tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:-1
msgid "Purchase order billing status in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:56
msgid "Below you can find a list of the different *Billing Status*, and when they are displayed, depending on the products' bill control policy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:60
msgid "**Billing status**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:60
msgid "**Conditions**"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:62
msgid "*On received quantities*"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:62
msgid "*On ordered quantities*"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:64
msgid "*Nothing to Bill*"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:64
msgid "PO confirmed; no products received"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:64
msgid "*(Not applicable)*"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:66
msgid "*Waiting Bills*"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:66
msgid "All/some products received; bill not created"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:66
msgid "PO confirmed"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:68
msgid "*Fully Billed*"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:68
msgid "All/some products received; draft bill created"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:68
msgid "Draft bill created"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:72
msgid "Determine when to pay with 3-way matching"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:74
msgid "First, go to :menuselection:`Configuration --> Settings` and activate *3-way matching*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:-1
msgid "3-way-matching setting in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:81
msgid "3-way matching is intended to work with the bill control policy set to *On received quantities*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:84
msgid "Should I pay the vendor bill?"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:86
msgid "With the feature activated, your vendor bills now display the *Should Be Paid* field under the *Other info* tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:-1
msgid "Should Be Paid field under a vendor bill in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:93
msgid "As you can't create a bill until you have received your products - and if you haven't received all of them, Odoo only includes the products you have received in the draft bill - the *Should Be Paid* status is set to *Yes* when you create one."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:97
msgid "If you edit a draft bill to increase the billed quantity, change the price, or add other products, the *Should Be Paid* status is set to *Exception*. It means Odoo notices the discrepancy, but that you might have a valid reason to have done so."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:101
msgid "Once the payment has been registered and mentions *Paid*, the *Should Be Paid* status is set to *No*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:-1
msgid "Paid bill in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/control_bills.rst:109
msgid "The *Should Be Paid* status is set automatically by Odoo. However, you can change the status manually when you are viewing a bill in edit mode."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:3
msgid "Manage vendor bills"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:7
msgid "A *vendor bill* is an invoice received for products and/or services that a company purchases from a vendor. Vendor bills record payables as they arrive from vendors, and can include amounts owed for the goods and/or services purchased, sales taxes, freight and delivery charges, and more."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:11
msgid "In Odoo, a vendor bill can be created at different points in the purchasing process, depending on the *bill control* policy chosen in the *Purchase* app settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:15
msgid "Bill control policies"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:17
msgid "To view and edit the default bill control policy and make changes to it, go to :menuselection:`Purchase app --> Configuration --> Settings`, and scroll down to the :guilabel:`Invoicing` section."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:21
msgid "Here, there are two :guilabel:`Bill Control` policy options: :guilabel:`Ordered quantities` and :guilabel:`Received quantities`. After a policy is selected, click :guilabel:`Save` to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:-1
msgid "Bill control policies in purchase app settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:28
msgid "The policy selected will be the default for any new product created. The definition of each policy is as follows:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:31
msgid ":guilabel:`Ordered quantities`: creates a vendor bill as soon as a purchase order is confirmed. The products and quantities in the purchase order are used to generate a draft bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:33
msgid ":guilabel:`Received quantities`: a bill is only created **after** part of the total order has been received. The products and quantities **received** are used to generate a draft bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:37
msgid "If a product needs a different control policy, the default bill control policy can be overridden by going to the :guilabel:`Purchase` tab in a product's template, and modifying its :guilabel:`Control Policy` field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:-1
msgid "Control policy field on product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:46
msgid "3-way matching"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:48
msgid "*3-way matching* ensures vendor bills are only paid once some (or all) of the products included in the purchase order have actually been received."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:51
msgid "To activate it, go to :menuselection:`Purchase app --> Configuration --> Settings`, and scroll down to the :guilabel:`Invoicing` section. Then, check the box next to :guilabel:`3-way matching: purchases, receptions, and bills`, and click :guilabel:`Save` to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:56
msgid ":guilabel:`3-way matching` is **only** intended to work with the :guilabel:`Bill Control` policy set to :guilabel:`Received quantities`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:0
msgid "Activated three-way matching feature in purchase settings."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:64
msgid "Create and manage vendor bills on receipts"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:66
msgid "When products are received into a company's warehouse, receipts are created. Once the company processes the received quantities, they can choose to create a vendor bill directly from the warehouse receipt form. Depending on the bill control policy chosen in the settings, vendor bill creation is completed at different steps of the procurement process."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:72
msgid "With the bill control policy set to ordered quantities"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:74
msgid "To create and manage vendor bills on receipts using the *ordered quantities* bill control policy, first go to :menuselection:`Purchase app --> Configuration --> Settings`, scroll down to the :guilabel:`Invoicing` section, and select :guilabel:`Ordered quantities` under :guilabel:`Bill Control`. Then, click :guilabel:`Save` to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:79
msgid "Next, go to the :menuselection:`Purchase` app, and click :guilabel:`Create` to create a new request for quotation (RFQ). Doing so reveals a blank :abbr:`RFQ (request for quotation)` detail form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:82
#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:144
msgid "On the blank detail form, add a vendor to the :abbr:`RFQ (request for quotation)` in the :guilabel:`Vendor` field, and add products to the :guilabel:`Product` lines by clicking :guilabel:`Add a line`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:86
#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:148
msgid "Then, confirm the :abbr:`RFQ (request for quotation)` by clicking the :guilabel:`Confirm Order` button above the detail form. Doing so turns the :abbr:`RFQ (request for quotation)` into a purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:90
msgid "Then, click the :guilabel:`Create Bill` button to create a vendor bill for the purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:92
msgid "Clicking the :guilabel:`Create Bill` button reveals the :guilabel:`Draft Bill` page for the purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:95
msgid "On the :guilabel:`Draft Bill`, click the :guilabel:`Edit` button to modify the bill, and add a bill date in the :guilabel:`Bill Date` field. If needed, add additional products to the :guilabel:`Product` lines by clicking :guilabel:`Add a line` in the :guilabel:`Invoice Lines` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:99
msgid "Next, confirm the bill by clicking the :guilabel:`Confirm` button on the :guilabel:`Draft Bill` page."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:103
msgid "Since the bill control policy is set to *ordered quantities*, the draft bill can be confirmed as soon as it is created, before any products have been received."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:106
#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:179
msgid "On the new :guilabel:`Vendor Bill`, add a :guilabel:`Bill Reference` number, which can be used to match the bill with additional documents (such as the :abbr:`PO (purchase order)`). Then, click :menuselection:`Confirm --> Register Payment`. Doing so causes a pop-up to appear, wherein a payment :guilabel:`Journal` can be chosen; a :guilabel:`Payment Method` selected; and a :guilabel:`Recipient Bank Account` can be selected from a drop-down menu."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:112
msgid "Additionally, the bill :guilabel:`Amount`, :guilabel:`Payment Date`, and :guilabel:`Memo` (:dfn:`Reference Number`) can be changed from this pop-up. Once ready, click :guilabel:`Create Payment` to finish creating the :guilabel:`Vendor Bill`. Doing so causes a green :guilabel:`In Payment` banner to display on the :abbr:`RFQ (request for quotation)` form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:-1
msgid "Vendor bill form for ordered quantities control policy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:122
msgid "Each vendor bill provides the option to either :guilabel:`Add Credit Note` or :guilabel:`Add Debit Note`. A *credit note* is typically issued when a vendor or supplier of goods get some quantity of products back from the customer to whom they were sold, while *debit notes* are reserved for goods returned from the customer/buyer to the vendor or supplier."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:128
msgid "With the bill control policy set to received quantities"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:131
msgid "If the creation of a vendor bill is attempted without receiving any quantities of a product (while using the *received quantities* bill control policy), an error message appears, and settings must be changed before proceeding."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:135
msgid "To create and manage vendor bills on receipts using the *received quantities* bill control policy, first go to :menuselection:`Purchase app --> Configuration --> Settings`, scroll down to the :guilabel:`Invoicing` section, and select :guilabel:`Received quantities` under :guilabel:`Bill Control`. Then, click :guilabel:`Save` to save changes."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:140
msgid "Next, go to the :menuselection:`Purchase` app, and click :guilabel:`Create` to create a new :abbr:`RFQ (request for quotation)`. Doing so reveals a blank :abbr:`RFQ (request for quotation)` detail form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:152
msgid "Finally, click the :guilabel:`Create Bill` button to create a bill for the purchase order."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:155
msgid "Clicking :guilabel:`Create Bill` before any products have been received will cause a :guilabel:`User Error` pop-up to appear. The :guilabel:`Purchase Order` requires the receipt of at least partial quantity of the items included on the order to create a vendor bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:-1
msgid "User error pop-up for received quantities control policy."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:163
msgid "Next, click the :guilabel:`Receipt` smart button to view the warehouse receipt form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:165
msgid "On the warehouse receipt form, click :menuselection:`Validate --> Apply` to mark the :guilabel:`Done` quantities. Then, navigate back to the :menuselection:`Purchase Order` (via the breadcrumbs), and click the :guilabel:`Create Bill` button on the purchase order form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:169
msgid "Doing so reveals the :guilabel:`Draft Bill` for the purchase order. On the :guilabel:`Draft Bill`, click the :guilabel:`Edit` button, and add a :guilabel:`Bill Date`. If needed, add additional products to the :guilabel:`Product` lines by clicking :guilabel:`Add a line`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:173
msgid "Next, click the :guilabel:`Confirm` button to confirm the :guilabel:`Draft Bill`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:176
msgid "Since the bill control policy is set to *received quantities*, the draft bill can **only** be confirmed when at least some of the quantities are received."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:185
msgid "Additionally, the bill :guilabel:`Amount`, :guilabel:`Payment Date`, and :guilabel:`Memo` (:dfn:`Reference Number`) can be changed from this pop-up. Once ready, click :guilabel:`Create Payment` to finish creating the vendor bill. Doing so causes a green **In Payment** banner to display on the :abbr:`RFQ (request for quotation)` form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:191
msgid "Create and manage vendor bills in Accounting"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:193
msgid "Vendor bills can also be created directly from the *Accounting* app, **without** having to create a purchase order first. To do this, go to :menuselection:`Accounting app --> Vendors --> Bills`, and click :guilabel:`Create`. Doing so reveals a blank vendor bill detail form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:197
msgid "On this blank vendor bill detail form, add a vendor in the :guilabel:`Vendor` field, and add products to the :guilabel:`Product` lines (under the :guilabel:`Invoice Lines` tab), by clicking :guilabel:`Add a line`. Then, add a bill date in the :guilabel:`Bill Date` field, and any other necessary information. Finally, click :guilabel:`Confirm` to confirm the bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:202
msgid "From here, click the :guilabel:`Journal Items` tab to view (or change) the :guilabel:`Account` journals that were populated based on the configuration on the corresponding :guilabel:`Vendor` and :guilabel:`Product` forms."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:206
msgid "Then, click :guilabel:`Add Credit Note` or :guilabel:`Add Debit Note` to add credit or debit notes to the bill. Or, add a :guilabel:`Bill Reference` number (while in :guilabel:`Edit` mode)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:209
msgid "Then, when ready, click :menuselection:`Register Payment --> Create Payment` to complete the :guilabel:`Vendor Bill`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:213
msgid "To tie the draft bill to an existing purchase order, click the drop-down menu next to :guilabel:`Auto-Complete`, and select a :abbr:`PO (purchase order)` from the menu. The bill will auto-populate with the information from the :abbr:`PO (purchase order)`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:0
msgid "Auto-complete drop-down list on draft vendor bill."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:222
msgid "Batch billing"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:224
msgid "Vendor bills can be processed and managed in batches in the *Accounting* app."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:226
msgid "To do this, go to :menuselection:`Accounting app --> Vendors --> Bills`. Then, click the :guilabel:`checkbox` at the top left of the page, beside the :guilabel:`Number` column, under the :guilabel:`Create` button. This selects all existing vendor bills with a :guilabel:`Posted` or :guilabel:`Draft` :guilabel:`Status`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:231
msgid "From here, click the :guilabel:`Action` gear icon to export, delete, or send & print the bills; click the :guilabel:`Print` icon to print the invoices or bills; or click :guilabel:`Register Payment` to create and process payments for multiple vendor bills at once."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:235
msgid "When :guilabel:`Register Payment` is selected, a pop-up appears. In this pop-up window, select the appropriate journal in the :guilabel:`Journal` field, choose a payment date in the :guilabel:`Payment Date` field, and choose a :guilabel:`Payment Method`. There is also the option to :guilabel:`Group Payments` on this pop-up, as well."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:240
msgid "When ready, click the :guilabel:`Create Payment` button, which creates a list of journal entries on a separate page. This list of journal entries are all tied to their appropriate vendor bills."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:-1
msgid "Batch billing register payment pop-up."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:248
msgid "The :guilabel:`Register Payment` option for vendor bills in batches will only work for journal entries whose :guilabel:`Status` is set to :guilabel:`Posted`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/manage_deals/manage.rst:252
msgid ":doc:`/applications/inventory_and_mrp/purchase/manage_deals/control_bills`"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:3
msgid "Configure reordering rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:5
msgid "For certain products, it is necessary to ensure that there is always a minimum amount available on hand at any given time. By adding a reordering rule to a product, it is possible to automate the reordering process so that a purchase order is automatically created whenever the amount on hand falls below a set threshold."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:11
msgid "The *Inventory* module must be installed to use reordering rules."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:14
msgid "Configure products for reordering"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:16
msgid "Products must be configured in a specific way before a reordering rule can be added to them."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:18
msgid "Starting from the :menuselection:`Inventory`, :menuselection:`Manufacturing`, :menuselection:`Purchase`, or :menuselection:`Sales` module, navigate to :menuselection:`Products --> Products` and then click :guilabel:`Create` to make a new product. Alternatively, find a product that already exists in the database and click into it's product form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:23
msgid "Next, on the product form, enable reordering by checking the :guilabel:`Can be Purchased` option underneathe the :guilabel:`Product Name` field. Finally, set the :guilabel:`Product Type` to `Storable Product` under the :guilabel:`General Information` tab."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:-1
msgid "Configure a product for reordering in Odoo."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:32
msgid "Add a reordering rule to a product"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:34
msgid "After properly configuring a product, a reordering rule can be added to it by selecting the now visible :guilabel:`Reordering Rules` tab at the top of that product's form, and then clicking :guilabel:`Create` on the :guilabel:`Reordering Rules` dashboard."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:-1
msgid "Access reordering rules for a product from the product page in Odoo."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:42
msgid "Once created, the reordering rule can be configured to generate purchase orders automatically by defining the following fields:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:45
msgid ":guilabel:`Location` specifies where the ordered quantities should be stored once they are received and entered into stock."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:47
msgid ":guilabel:`Min Quantity` sets the lower threshold for the reordering rule while :guilabel:`Max Quantity` sets the upper threshold. If the stock on hand falls below the minimum quantity, a new purchase order will be created to replenish it up to the maximum quantity."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:52
msgid "If :guilabel:`Min Quantity` is set to `5` and :guilabel:`Max Quantity` is set to `25` and the stock on hand falls to four, a purchase order will be created for 21 units of the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:55
msgid ":guilabel:`Multiple Quantity` can be configured so that products are only ordered in batches of a certain quantity. Depending on the number entered, this can result in the creation of a purchase order that would put the resulting stock on hand above what is specified in the :guilabel:`Max Quantity` field."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:61
msgid "If :guilabel:`Max Quantity` is set to `100` but :guilabel:`Multiple Quantity` is set to order the product in batches of `200`, a purchase order will be created for 200 units of the product."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:65
msgid ":guilabel:`UoM` specifies the unit of measurement by which the quantity will be ordered. For discrete products, this should be set to `Units`. However, it can also be set to units of measurement like `Volume` or `Weight` for non-discrete products like water or bricks."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:-1
msgid "Configure the reordering rule in Odoo."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:74
msgid "Manually trigger reordering rules using the scheduler"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:76
msgid "Reordering rules will be automatically triggered by the scheduler, which runs once a day by default. To trigger reordering rules manually, navigate to :menuselection:`Inventory --> Operations --> Run Scheduler`. On the pop-up window, confirm the manual action by clicking :guilabel:`Run Scheduler`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:82
msgid "Manually triggering reordering rules will also trigger any other scheduled actions."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:85
msgid "Manage reordering rules"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:87
msgid "To manage the reordering rules for a single product, navigate to that product page's form and select the :guilabel:`Reordering Rules` tab at the top of the form."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/reordering.rst:90
msgid "To manage all reordering rules for every product, go to :menuselection:`Inventory --> Configuration --> Reordering Rules`. From this dashboard, typical bulk actions in Odoo can be performed such as exporting data or archiving rules that are no longer needed. As well, the :guilabel:`Filters`, :guilabel:`Group By` or triple-dotted menu on the form are available to search for and/or organize the reordering rules as desired."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:3
msgid "Purchase in different units of measure than sales"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:5
msgid "When you purchase a product, it may happen that your vendor uses a different unit of measure than you do when you sell it. This can cause confusion between sales and purchase representatives. It is also time-consuming to convert measures manually every time. With Odoo, you can configure your product once and let Odoo handle the conversion."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:10
msgid "Consider the following examples:"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:12
msgid "You purchase orange juice from an American vendor, and they use **gallons**. However, your customers are European and use **liters**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:15
msgid "You buy curtains from a vendor in the form of **rolls** and you sell pieces of the rolls to your customers using **square meters**."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:19
msgid "Enable units of measure"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:21
msgid "Open your Sales app and go to :menuselection:`Configuration --> Settings`. Under Product Catalog, enable *Units of Measure*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:-1
msgid "Enable the units of measure option in Odoo Sales"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:29
msgid "Specify sales and purchase units of measure"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:32
msgid "Standard units of measure"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:34
msgid "A variety of units of measure are available by default in your database. Each belongs to one of the five pre-configured units of measure categories: *Length / Distance*, *Unit*, *Volume*, *Weight* and *Working Time*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:39
msgid "You can create your new units of measure and units of measure categories (see next section)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:41
msgid "To specify different units of measures for sales and purchases, open the Purchase app and go to :menuselection:`Products --> Products`. Create a product or select an existing one. Under the product's *General Information* tab, first select the *Unit of Measure* to be used for sales (as well as for other apps such as inventory). Then, select the *Purchase Unit of Measure* to be used for purchases."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:47
msgid "Back to the first example, if you purchase orange juice from your vendor in **gallons** and sell it to your customers in **liters**, first select *L* (liters) as the *Unit of Measure*, and *gal (US)* (gallons) as the *Purchase Unit of Measure*, then click on *Save*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:-1
msgid "Configure a product's units of measure in Odoo"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:56
msgid "Create new units of measure and units of measure categories"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:58
msgid "Sometimes you need to create your own units and categories, either because the measure is not pre-configured in Odoo or because the units do not relate with each other (e.g. kilos and centimeters)."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:62
msgid "If you take the second example where you buy curtains from a vendor in the form of **rolls** and you sell pieces of the rolls using **square meters**, you need to create a new *Units of Measure Category* in order to relate both units of measure."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:66
msgid "To do so, go to :menuselection:`Configuration --> Units of Measure Categories`. Click on *Create* and name the category."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:-1
msgid "Create a new units of measure category in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:73
msgid "The next step is to create the two units of measures. To do so, go to :menuselection:`Configuration --> Units of Measure`."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:76
msgid "First, create the unit of measure used as the reference point for converting to other units of measure inside the category by clicking on *Create*. Name the unit and select the units of measure category you just created. For the *Type*, select *Reference Unit of Measure for this category type*. Enter the *Rounding Precision* you would like to use. The quantity computed by Odoo is always a multiple of this value."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:82
msgid "In the example, as you cannot purchase less than 1 roll and won't use fractions of a roll as a unit of measure, you can enter 1."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:-1
msgid "Create a new reference unit of measure in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:89
msgid "If you use a *Rounding Precision* inferior to 0.01, a warning message might appear stating that it is higher than the *Decimal Accuracy* and that it might cause inconsistencies. If you wish to use a *Rounding Precision* lower than 0.01, first activate the :ref:`developer mode <developer-mode>`, then go to :menuselection:`Settings --> Technical --> Database Structure --> Decimal Accuracy`, select *Product Unit of Measure* and edit *Digits* accordingly. For example, if you want to use a rounding precision of 0.00001, set *Digits* to 5."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:96
msgid "Next, create a second unit of measure, name it, and select the same units of measure category as your reference unit. As *Type*, select *Smaller* or *Bigger than the reference Unit of Measure*, depending on your situation."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:100
msgid "As the curtain roll equals to 100 square meters, you should select *Smaller*."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:102
msgid "Next, you need to enter the *Ratio* between your reference unit and the second one. If the second unit is smaller, the *Ratio* should be greater than 1. If the second unit is larger, the ratio should be smaller than 1."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:106
msgid "For your curtain roll, the ratio should be set to 100."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:-1
msgid "Create a second unit of measure in Odoo Purchase"
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:112
msgid "You can now configure your product just as you would using Odoo's standard units of measure."
msgstr ""

#: ../../content/applications/inventory_and_mrp/purchase/products/uom.rst:-1
msgid "Set a product's units of measure using your own units in Odoo Purchase"
msgstr ""
